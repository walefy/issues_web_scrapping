[
  {
    "title": "MySQL vs PostgreSQL: O Que Realmente Importa na Escolha?",
    "link": "https://www.tabnews.com.br/gabrielrsn/mysql-vs-postgresql-o-que-realmente-importa-na-escolha",
    "content": "\nRecentemente, realizei um estudo detalhado sobre as diferenças entre o MySQL e o PostgreSQL, tentando entender qual deles se encaixaria melhor em um novo projeto de ERP online. Como qualquer decisão técnica, essa escolha precisava ir além do \"o que é mais popular\" e realmente considerar o cenário real de uso.\nLogo de cara, o PostgreSQL parecia imbatível: robusto, escalável e recheado de funcionalidades avançadas. Dentre os principais pontos positivos, destacavam-se:\n\nMelhor suporte a transações complexas (ACID mais confiável);\nJSONB para dados não estruturados;\nÍndices avançados (GIN, BRIN, GiST);\nConsultas analíticas mais sofisticadas (CTEs recursivas, Window Functions);\nReplicação e escalabilidade eficientes;\nMelhor controle de concorrência (MVCC bem implementado).\n\nJá o MySQL se destacava por sua velocidade em leituras, otimização de armazenamento e menor consumo de recursos. Porém, ainda perdia para o PostgreSQL quando o assunto era operações complexas e gerenciamento de concorrência.\nDiante disso, a decisão parecia óbvia: PostgreSQL. Mas... será que era mesmo?\nComparando MySQL 8 vs PostgreSQL\nRecursoMySQL 8PostgreSQLACID e MVCCMelhorado, mas ainda tem problemas com lock contentionMVCC mais eficiente, melhor concorrênciaSuporte a JSONSim, mas menos eficiente que PostgreSQL (JSON)JSONB (mais rápido e indexável)ÍndicesB-Tree, Hash, Spatial, Full-TextB-Tree, Hash, GIN, BRIN, GiST, Full-TextConsultas AnalíticasSuporte melhorado, mas menos flexívelMelhor suporte (CTEs, Window Functions, recursion)Particionamento de TabelasSuporte aprimorado no MySQL 8Melhor gerenciamento de particionamentoEscalabilidade HorizontalReplicação nativa e suporte ao InnoDB ClusterMelhor replicação, suporte a sharding nativoSegurançaSuporte a autenticação via roles e SSLMelhor controle granular de permissões\nO Cenário Real: Onde a Decisão Mudou\nO ERP em questão é amplamente comercializado, com mais de mil clientes ativos. Cada cliente tem um banco de dados próprio, com cerca de 500 tabelas e sem uso de triggers ou procedures. Além disso, o tamanho médio das bases é de 5GB, e cada servidor hospedará até 150 bancos de clientes.\nA partir desse cenário, dois fatores críticos surgiram:\n\nGrande quantidade de bancos de dados por servidor;\nMúltiplas tabelas em cada banco.\n\nCom essa configuração, a escolha do SGBD precisava levar em conta não apenas os benchmarks gerais, mas como cada tecnologia se comportaria sob essa carga específica.\n1. Gerenciamento de Múltiplos Bancos de Dados\n\nO PostgreSQL trata cada banco como uma entidade isolada, com seu próprio cache, conexões e catálogo. Isso significa mais consumo de memória e CPU, reduzindo a eficiência quando há muitos bancos em uma mesma instância.\nJá o MySQL compartilha cache e conexões entre bancos, reduzindo a sobrecarga e otimizando o uso de recursos.\nEm um teste comparativo, PostgreSQL consumiu 35% mais memória do que MySQL ao gerenciar múltiplos bancos pequenos com alto número de conexões simultâneas.\n\n2. Consumo de Memória e CPU\n\nDe acordo com benchmarks públicos, o PostgreSQL consome, em média, 30-50% mais RAM do que o MySQL para workloads similares.\nO gerenciamento de conexões do PostgreSQL também tem maior overhead, resultando em uso de CPU até 40% maior em cenários de múltiplos bancos ativos simultaneamente.\nPara um servidor com 150 bancos, essa diferença se traduz em um custo maior de infraestrutura.\n\n3. Eficiência Transacional e Estrutura de Armazenamento\n\nComo o projeto não utiliza triggers nem stored procedures, o PostgreSQL perde uma de suas principais vantagens.\nO MySQL, por outro lado, tem uma estrutura de armazenamento e indexação mais leve para cargas transacionais simples.\n\n4. Custo e Escalabilidade\n\nO PostgreSQL exigiria mais recursos por banco, o que aumentaria os custos na nuvem.\nO MySQL escala melhor horizontalmente, permitindo adicionar novos clientes sem sobrecarregar os servidores.\n\nResumo da Decisão\nApós considerar todos os fatores, o MySQL 8 se mostrou a melhor escolha para este cenário pelos seguintes motivos:\n\nGerenciamento eficiente de múltiplos bancos (150 por servidor);\nConsome até 50% menos RAM e 40% menos CPU;\nMenor custo na infraestrutura geral;\nMelhor escalabilidade horizontal;\nDesempenho previsível para bases de 5GB.\n\nSe, no futuro, as bases crescerem para além de 50GB cada, aí sim será o momento de reavaliar essa decisão e talvez considerar o PostgreSQL, mas não é o caso atual.\nConclusão: A Tecnologia Certa Depende do Contexto\nA maior lição desse estudo não é sobre qual banco de dados é \"melhor\", mas sim sobre a importância de conhecer profundamente o ambiente onde a tecnologia será aplicada.\nÉ fácil se deixar levar pelo hype ou pelas recomendações de outros profissionais, mas a verdade é que a melhor tecnologia é aquela que resolve o problema do cliente da forma mais eficiente e econômica possível.\nNo final do dia, a escolha técnica deve ser guiada por custo, eficiência, escalabilidade e aderência ao ambiente real de uso — e não apenas por benchmarks ou opiniões pessoais.\nO segredo? Sempre analisar os números, testar, e tomar a decisão com base em dados concretos.",
    "comments": [
      "E o teste feito de quem consome mais levou em consideração a otimiação? Porque parece óbvio que compartilhar recursos economiza recursos, mas também a otimização já que tem que dividir o bolo. No fim pode ser que use até mais recursos porque pode ter que colcoar menos instâncias em situação real. Pode ser que até dê para colcoar mais instâncias, mas e o tempo de resposta será o mesmo sempre, ou ou usuários vão pagar um preço  por isso, ainda que eles não reclamem?\nNão sabemos as condições que os testes foram feitos. O PostgreSQL é amplamente personalizável para atingir certos objetivos, mas a maioria das pessoas não sabem fazer.\nMuita gente reclama que o Windows usa muitos recursos, mas ele faz sim para otimizar o uso,  consumir mais pode ser algo positivo.\nÉ muito fácil e comum fazer um teste sintético e dar um resultado que não se reproduz quando usa real.\nSe quer algo tão simples e melhor uso de recursos então use o SQLite. Este padrão de uso é para ele dar conta e permitir centenas de instâncias, ainda mais se criar uma fila de escrita que é onde ele pode ter algum gargalo. Ele é mais ACID que o MySQL. Se as bases forem de 50GB o SQLite ainda dá conta com sobras, só depende do volume de escritas efetivamente simultâneas, que é resolvido com um sistema de fila.\nA maior lição é que a maioria das pessoas não conseguem fazer análises adequadas sobre tecnologias, inclusive as mais experientes vão errar muito, e se não for a diferença brutal e não for falsa, tanto faz oque ela vai usar na esmagadora maioria dos cenários. A escolha talvez seja melhor ao que lhe é familiar ou no que a pessoa está com mais vontade de usar. Números vivem mentido. Se você os torturam eles confessam o que você quiser.\nPode ser que este seja um super resumo, mas esta é uma avaliação extremamente superficial, quase semrpe você só terá uma boa tendo uma experiência enorme nos 2 de forma muito semelhante, ou implmentando de fato nos 2 do jeito correto e depois escolher qual usar e qual descartar.\nEm escalas absurdas maiores de uso real tanto um quanto outro deram conta muito bem, e não se tem um cenário claro que um é pior do que outro. Tem até o caso famoso do Uber que trocou o PostgreSQL pelo MySQL (porque o volume deles é absurdamente alto, se fosse menor eles não trocariam), mostraram os motivos e a comunidade do PostgreSQL mostrou que foi só porque eles não souberam configurar direito.\nA melhor eficiência do MySQL se dá com MyISAM, aí é onde pode ter um resultado melhor sifnificativo, em detrimento da confiabilidade e de alguns recursos.\nEm toda minha experiência nunca vi um caso que foi realmente necessário trocar o banco de dados para ele dar conta do recado (se adotar o SQLite isso tem mais chances de ocorrer, se aumentar muito a escrita simultânea e não tiver um bom sistema de filas), vi casos de mudanças porque quem começou perdido vai tomar várias decisões perdidas. E a mudança custa extremamente cara, ou dará resultado pior porque muita gtente acredita que pode abstrair o DB sem pagar um preço alto de performance de um lado ou do outro. Se a pessoa acha que um dia pode precisar de outro banco, provavelmente ela está errada, mas se quer ter certeza deveria usar o que garante a melhor escala, todo mundo substima o custo da mudança.\nSalvo raras exceções, ambos atenderão a demanda muito bem. A escolha pelo mais fácil pode ser o fator decisivo.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Obrigado pela contribuição, Maniero!\nSeu comentário trouxe mais profundidade ao conteúdo e reforçou ainda mais a importância de uma análise criteriosa do ambiente antes de escolher uma tecnologia.\nNo artigo, optei por ser um pouco mais superficial para evitar que ele se tornasse excessivamente extenso. No meu cenário específico, a proposta era uma migração do MySQL para o PostgreSQL.\nSim, outros fatores também pesaram na decisão, incluindo o fato de a equipe já utilizar o MySQL há anos.\nO principal objetivo do artigo é justamente destacar a importância de não seguir tendências sem uma avaliação criteriosa, mas sim analisar profundamente a tecnologia no contexto em que será aplicada, evitando desperdícios de tempo e recursos.\nSua observação sobre configurações e otimizações é extremamente válida. Já vi inúmeras empresas trocarem softwares alegando que eram ineficientes, quando, na verdade, o problema estava na falta de conhecimento aprofundado sobre a ferramenta.",
      "O QUE IMPORTA É COMO O BANCO TRATA SEUS DADOS\nPrimeiro, sim: contexto importa. Mas tem um detalhe que ninguém te contou: a forma como o banco guarda seus dados não é \"feature\", é O OFÍCIO. Enquanto você discute \"escalabilidade\" e \"benchmarks\", tem código por aí que trata seus bytes se fossem lixo.\nVamos direto ao ponto com TESTES DE FOGO:\n\nPOSTGRESQL É UM PÂNICO (NO BOM SENSO):\n\nQuando o PostgreSQL detecta um erro de I/O, ele ENTRA EM PÁNICO E DESLIGA. Parece radical? É. Mas é a postura correta: \"Não vou brincar de roleta russa com seus dados, amigo.\"\nJá o MySQL/MariaDB, no mesmo cenário, engasga, cospe um erro genérico, e deixa você descobrir que o tablespace do InnoDB sumiu — e quando você tenta recuperar, o banco te manda \"innodb_force_recovery=1\" e um \"boa sorte\".\nTradução: \"Se vira, otário. Teus dados viraram pó, mas pelo menos o processo não crashou, né?\"\n\nSQLITE: CÓDIGO ESCRITO POR MONGES BUDISTAS (COM DIREITO A MEDITAÇÃO SOBRE BYTES):\n\nO código do SQLite é A BÍBLIA do tratamento de dados. Cada linha e comentário é uma aula, com checks de consistência, fsync até no diretório, e um respeito religioso pelo \"disk I/O error\".\nEnquanto isso, o MySQL/MariaDB tem trechos de código que parecem macarrão instantâneo — cheios de \"should we really be doing this???\" nos comentários. Não é surpresa que, em testes com soft updates, o MariaDB perdeu tabelas inteiras após um simples desligamento.\n\nZFS + POSTGRESQL = CASAMENTO PERFEITO (ENQUANTO MARIADB É O AMANTE QUE TE DEIXA NA MÃO):\n\nEm testes com ZFS, o PostgreSQL trava em todas as operações ao detectar um disco offline — como deve ser. Já o MariaDB, mesmo com o pool suspenso, tentou escrever no vácuo e corrompeu o tablespace.\nTradução: PostgreSQL entende que \"dados inconsistentes\" são piores que \"dados ausentes\". MariaDB acha que \"quem não arrisca, não petisca\".\n\nO FILESYSTEM PODE SER HERÓI OU VILÃO (MAS O BANCO É O ÚLTIMO GUARDIÃO):\n\nEm testes com ext4, PostgreSQL e SQLite mantiveram a integridade mesmo após desligamentos brutais. Já o MariaDB perdeu engines inteiras (InnoDB) e exigiu intervenção manual.\nOu seja: Se o banco não tem um código PARANOICO com escrita/leitura fica refém do filesystem.\nRESUMÃO DA ÓPERA (PRA QUEM TEM PRESSA):\nPOSTGRESQL E SQLITE: Código escrito por engenheiros que já perderam noites chorando por dados perdidos. Cada fsync é uma oração, cada transação é um ritual.\nMARIADB/MYSQL: Código escrito por devs que confiam em \"ah, o filesystem resolve\". Tudo é \"trade-off\", até a consistência dos seus dados.\nENTENDA: Escolher um banco só por \"performance\" ou \"popularidade\" é como comprar um carro sem cinto de segurança porque \"é mais rápido\". Pode ser rápido? Pode. Mas quando bater...\nENTÃO O MYSQL/MARIADB? QUANDO USAR?\nSe você não liga pra dados (tipo: sistema de comentários de blog que ninguém lê).\nSe você adora gastar madrugadas fazendo recover de tabelas (ótimo hobby, inclusive).\nSe seu chefe fala \"é open-source, mas a Oracle tá por trás? Confia!\".\nConclusão\nNão importa se é ERP, IoT ou app de TODO list: dados são a alma do negócio. Escolha bancos que tratem eles como ouro, não como lixo reciclável.\nPostgreSQL e SQLite são BESTAS DE GUERRA nisso. O resto, é resto.\n\"Ah, mas é mais rápido...\" — claro, até você descobrir que \"rápido\" inclui apagar dados sem perguntar.\nAgora vai lá e testa na porrada. Tira o servidor da tomada no meio de um write e vê quem não corrompe seus dados. Spoiler: não vai ser o MySQL. 😈💥",
      "Obrigado pela contribuição, Clacerda.\nSeu comentário trouxe um ponto de vista essencial sobre como diferentes bancos de dados lidam com a integridade dos dados em cenários críticos.\nA discussão sobre a postura do PostgreSQL, SQLite e MySQL/MariaDB em situações de erro é realmente relevante e reforça a importância de escolher a ferramenta certa com base na confiabilidade e no tratamento dos dados, não apenas em performance ou popularidade.\nVale muito a pena explorar esse tema com mais profundidade em futuros conteúdos. Agradeço pelo insight!",
      "Bom saber disto.\nNos projetos atuais estou dando preferência no PostgreSQL, inclusive tenho a intenção de usar o Supabase nos próximos.",
      "Por tudo que você disse, eu iria de SQLITE!\nMe parece o mais adequado!\nMas apenas parece! Isso quem decidirá será você! :)",
      "Reflexão bastante relevante! Vejo muito esse tipo de confusão nos ambientes corporativos. As pessoas se apaixonam por uma tecnologia e costumam se agarrar em determinadas qualidades para defender a adoção indiscriminada de uma tecnologia em detrimento de outra. Não avaliam o contexto em que ela será aplicada para então pesar quais critérios são mais relevantes a serem conaiderados.\nGosto de Ambos os SGBD, e também tenho tendência a escolha do Postgres. Por experiência própria sei que ambos atenderiam o seu caso especifico (diversos bancos pequenos), mas certamente em um cenário de nuvem os custos de processamento e armazenamento devem receber maior peso na decisão e neste caso o ponto realmente vai para o MySQL. Parabéns pelo artigo e pela clareza de pensamento!",
      "Sei que não é o objetivo do seu post, mas poderia dar mais detalhes de manter cada cliente com seu banco de dados?\nEu pressuponho que atualmente a aplicação roda on premisses e cada cliente tem sua instância banco e agora nesse novo projeto será online.\nQual foi o racional para não criar o novo projeto com um tenantId por exemplo?\nEm todo caso, bela análise. Escolher o banco pra um projeto nunca é fácil e nunca é uma decisão perfeita.",
      "Meus parabéns pelo texto, foi uma ótima análise.",
      "Obrigado Valterpatrick, agradeço o comentário."
    ],
    "summary": {
      "summary": "O artigo discute a escolha entre MySQL e PostgreSQL para um projeto de ERP online com múltiplos clientes e bancos de dados. Inicialmente, o PostgreSQL pareceu superior por suas funcionalidades avançadas, mas uma análise mais profunda revelou que o MySQL se adaptava melhor ao cenário específico devido ao menor consumo de recursos e melhor gerenciamento de múltiplos bancos por servidor, o que resultava em custos menores. Os comentários divergem, com alguns defendendo o PostgreSQL por sua robustez e tratamento de erros, apontando que o MySQL pode comprometer a integridade dos dados em certas situações. Outros enfatizam a importância da análise contextual e otimização, e não apenas benchmarks genéricos, mencionando ainda o SQLite como alternativa para cenários específicos. A discussão demonstra que a escolha do banco de dados depende do contexto de uso e dos requisitos do projeto, não apenas de opiniões ou benchmarks gerais.",
      "keywords": [
        "MySQL",
        "PostgreSQL",
        "banco de dados",
        "performance",
        "integridade de dados",
        "escalabilidade",
        "custo"
      ],
      "controversy_level": "alto"
    }
  },
  {
    "title": "A Sacada de Eficiência da DeepSeek Destacada pelo CEO da Anthropic",
    "link": "https://www.tabnews.com.br/wilstark/a-sacada-de-eficiencia-da-deepseek-destacada-pelo-ceo-da-anthropic",
    "content": "No universo da Inteligência Artificial, a busca por modelos mais rápidos e eficientes é constante. Recentemente, a DeepSeek demonstrou avanços impressionantes com o modelo DeepSeek-V3, que utiliza uma arquitetura chamada Multi-head Latent Attention (MLA). Mas o que é isso e por que é tão importante?\nO que é o MLA?\nImagine que um modelo de IA precisa ler uma frase longa. O modelo precisa prestar atenção a cada palavra e como ela se relaciona com as outras para entender o significado. O MLA, de maneira simplificada, é uma forma de o modelo fazer isso de forma mais rápida e usando menos recursos computacionais.\n\nAtenção Multi-Cabeça: Modelos de IA tradicionais usam a \"Atenção Multi-Cabeça\" para analisar a importância de cada palavra na frase. Cada \"cabeça\" presta atenção a diferentes aspectos da relação entre as palavras.\nCompressão Latente: O MLA introduz um conceito de \"compressão latente\". Em vez de armazenar todas as informações sobre a atenção de cada \"cabeça\" separadamente, ele as comprime, guardando apenas o mais essencial.\nCache KV Reduzido: Um dos principais benefícios do MLA é a redução no cache de Chave-Valor (KV) durante a inferência. Isso significa que o modelo precisa armazenar menos dados para gerar respostas, o que agiliza o processo e diminui o uso de memória.\n\nPor que isso é uma inovação?\nComo destacado por Dario Amodei, CEO da Anthropic, em seu texto sobre os avanços da DeepSeek:\n\"A equipe do DeepSeek fez isso por meio de algumas inovações genuínas e impressionantes, principalmente focadas na eficiência da engenharia. Houve melhorias particularmente inovadoras no gerenciamento de um aspecto chamado 'cache de valor-chave' e em permitir que um método chamado 'mistura de especialistas' fosse levado mais longe do que antes.\"\nO MLA é uma dessas inovações, pois:\n\nInferência Mais Rápida: Ao diminuir a quantidade de dados que o modelo precisa acessar durante a geração de respostas, ele se torna mais rápido.\nMenos Custo Computacional: A redução do uso de memória e da necessidade de processamento resulta em um custo computacional menor. Isso permite que modelos poderosos sejam executados com menos recursos, democratizando o acesso à tecnologia de IA.\nMantém o Desempenho: Apesar de ser mais eficiente, o MLA mantém o desempenho dos modelos de linguagem, garantindo a qualidade das respostas.\n\nA arquitetura do MLA não é apenas um avanço técnico, é uma mudança de paradigma que mostra como podemos tornar a IA mais acessível e sustentável. Isso ilustra a importância de se concentrar em otimizar as tecnologias existentes para extrair seu máximo potencial. Este é um exemplo inspirador de que o progresso na IA não depende só do aumento de tamanho dos modelos, mas também da inteligência na arquitetura.\nNo meu próximo texto: A Revolução do Raciocínio da DeepSeek Impulsionada pelo Aprendizado por Reforço, vou discutir como funciona a tecnologia usada no DeepSeek R1, Aprendizado por Reforço (RL), que transforma modelos menores, com apenas 1,5B de parâmetros, em modelos com Cadeias de Pensamento (CoT) superinteligentes.",
    "comments": [],
    "summary": {
      "summary": "O artigo discute a inovação da DeepSeek na área de Inteligência Artificial, especialmente o modelo DeepSeek-V3 que utiliza a arquitetura Multi-head Latent Attention (MLA). Essa abordagem busca maior eficiência computacional através da compressão de informações e redução do cache de Chave-Valor (KV), resultando em inferências mais rápidas e menor custo computacional, sem perda de desempenho. O CEO da Anthropic destaca essas melhorias na engenharia da DeepSeek, focando em otimizar os recursos existentes para democratizar o acesso à tecnologia de IA. O texto também introduz o tema do aprendizado por reforço, que será abordado em um próximo artigo.",
      "keywords": [
        "DeepSeek",
        "Inteligência Artificial",
        "MLA",
        "eficiência",
        "cache KV",
        "inferência",
        "otimização"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "👩‍💻 API  de  Verificação de Email (Novo EndPoint)🔥",
    "link": "https://www.tabnews.com.br/MezzoDio/verificacao-de-email-novo-endpoint",
    "content": "Olá bom dia,nos últimos dias eu tenho compartilhado sobre atualizações da api de localização e segurança que fiz de Ip/Email o novo endpoint verifica em um vasto banco de dados de spam onde contém diversos endereços maliciosos que foram obtidos através de formulários e ataques bloqueados.\n\nInclusive na página inicial você pode acompanhar o crescimento do banco de dados em tempo real.\nNosso banco de dados de GeoIp é atualizado a cada 15 dias.\n\no novo enpoint tem como objetivo ajudar quem precisa de uma verificação rápida de segurança e pode ser implementado no formulário de um cadastro por exemplo ou em uma lista para verificar emails maliciosos,mas tudo isso será possível pois nós temos os dados e você só fica com a parte de adaptar ao seu código sem nenhuma dor de cabeça com baixar algo,a única coisa que é necessaria é uma chave key obtida no Painel de Usuário no site https://bugadoz.dev/\ntudo isso é de graça,o limite de uso é bem generoso e pode ser acompanhado pelo seu painel também.\nO JSON de resposta\n\nO banco de dados atualizado por segundo\n\nAPI https://ip.bugadoz.dev/",
    "comments": [],
    "summary": {
      "summary": "O artigo anuncia uma nova API para verificação de e-mail, com o objetivo de identificar endereços maliciosos em um vasto banco de dados atualizado em tempo real. A ferramenta, gratuita com limite generoso de uso, pode ser implementada em formulários de cadastro ou listas de e-mails. O autor ressalta que a API fornece os dados, evitando a necessidade de baixar qualquer informação, sendo necessário apenas uma chave de acesso. A API é acessível através de um endpoint específico e inclui um banco de dados GeoIp atualizado quinzenalmente.",
      "keywords": [
        "API",
        "verificação de email",
        "segurança",
        "spam",
        "endpoint",
        "banco de dados",
        "malicioso"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Como eu utilizei um projeto para passar por entrevistas sem precisar fazer teste prático",
    "link": "https://www.tabnews.com.br/koziel/como-eu-utilizei-um-projeto-para-passar-por-entrevistas-sem-precisar-fazer-teste-pratico",
    "content": "Fala pessoal! Hoje vim dar um relato de como eu passei por algumas entrevistas sem precisar fazer um teste prático.\nVersão em vídeo com mais detalhes sobre o projeto, dicas e informações sobre os processos seletivos que participei: https://www.youtube.com/watch?v=HF4FAU4hfPM\nVersão resumida no TikTok: https://www.tiktok.com/@kozieldev/video/7465902094038404358\nMotivação\nTodos concordam que essa é uma das partes mais chatas e desgastantes dos processos seletivos, né? Ter que gastar horas e horas pra uma coisa qe você nem tem certeza se vai dar certo.\nCom isso em mente, comecei a reparar em quais tecnologias e ferramentas geralmente eram pedidas nas vagas. Resolvi montar um projeto que contemplasse a maioria delas pra mostrar que eu sabia o que tava sendo pedido.\nDurante os processos seletivos que eu fiz (pra vagas gringas), uma pergunta muito comum era  \"Cite um projeto que você se orgulha/que foi bem desenvolvido\". Nessa pergunta eu já citava o projeto que vou mostrar, e perguntava se poderia utilizar ele como \"teste prático\". Na maioria das vezes os recrutadores aceitavam, e aí ou me aprovavam vendo o github por sí mesmos, ou marcavam uma call pra eu ir passando pelo projeto explicando o que eu tinha feito.\nO Projeto\nA ideia do projeto em si é bem simples, ele é apenas um CRUD de pessoas. Mas o meu foco nele não era a ideia ou o que ele resolvia, e sim as tecnologias e como utilizá-las.\nTentei abranger tecnologias comuns em vagas como sistema de filas, sistema de cacheamentos, testes automatizados, documentação de API, docker, kubernetes, autenticação, entre outros.\nPara quem quiser dar uma conferida, o projeto se encontra nesse repositório: https://github.com/KozielGPC/person-crud\nPS: Nos videos explico um pouco mais detalhadamente sobre o projeto, esse processo todo e umas dicas também. É isso! Espero que esse tipo de conteúdo ajude mais pessoas a economizarem tempo em seus processos seletivos, e também motive a criar projetos legais pra por no github!",
    "comments": [],
    "summary": {
      "summary": "O artigo relata a experiência de um desenvolvedor que utilizou um projeto pessoal para evitar testes práticos em entrevistas de emprego, principalmente para vagas internacionais. O autor desenvolveu um CRUD de pessoas, focando em abranger diversas tecnologias e ferramentas comumente exigidas no mercado, como sistema de filas, cacheamento, testes automatizados, documentação de API, Docker, Kubernetes e autenticação. Durante as entrevistas, o autor apresentava esse projeto, oferecendo-o como substituto do teste prático. A estratégia se mostrou eficaz, permitindo que o autor fosse avaliado por meio da análise do código no GitHub ou através de uma apresentação do projeto em videochamada. O objetivo principal do autor é incentivar outros profissionais a adotarem essa prática, otimizando o tempo gasto em processos seletivos e incentivando a criação de projetos relevantes para o portfólio.",
      "keywords": [
        "projeto",
        "entrevistas",
        "teste prático",
        "tecnologias",
        "github",
        "processo seletivo",
        "CRUD"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Como fazer a IA gerar código muito melhor com um simples ajuste no prompt! 🚀",
    "link": "https://www.tabnews.com.br/buildsaas/como-fazer-a-ia-gerar-codigo-muito-melhor-com-um-simples-ajuste-no-prompt",
    "content": "Fiz um vídeo mostrando como melhorar de verdade as respostas da IA na geração de código. A chave está em um prompt bem elaborado e, principalmente, em dar o máximo de contexto possível. No vídeo, compartilho um boilerplate que uso e explico como adicionar documentação, referências e descrições detalhadas para fazer a IA entregar algo realmente útil.\nO segredo? Simplesmente alimentar a IA com mais informação, como:\n✅ Explicar claramente o que você quer construir\n✅ Referenciar componentes que já existem\n✅ Usar exemplos e inspirações de interfaces parecidas\n✅ Incluir documentação técnica relevante\n\nResultado\n\nSe você já tentou usar IA para código e sentiu que os resultados não foram tão bons, esse vídeo pode te ajudar bastante! Dá uma olhada e me conta o que achou. 🚀💬\nhttps://youtube.com/watch?v=HB9NJScIbFE&si=v3iib2o5TLHtPZoI",
    "comments": [],
    "summary": {
      "summary": "O artigo aborda como otimizar a geração de código por IA através de prompts mais detalhados. A chave é fornecer contexto rico, incluindo descrições claras do que se deseja construir, referências a componentes existentes, exemplos de interfaces e documentação técnica. O autor oferece um boilerplate e sugere que isso leva a resultados mais úteis e precisos da IA.",
      "keywords": [
        "IA",
        "geração de código",
        "prompt",
        "contexto",
        "documentação",
        "boilerplate",
        "programação"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Firebase Cloud Functions e disparidade organizacional de alguns \"devs\"",
    "link": "https://www.tabnews.com.br/clebsonsnts/firebase-cloud-functions-e-disparidade-organizacional-de-alguns-devs",
    "content": "Há algum tempo que venho trabalhando em uma empresa que utiliza esse recurso de Firebase Function e enquanto navegava pelo projeto me deparei com uma singularidade muito grande na construção dessas functions onde, especialemente quem não trabalha exclusivamente como programador, deixam a desejar na estrutura e organização do projeto.\nNão é um problema se você está ocasionalmente sem tempo para planejar isso, mas é um problema não tomar as dores futuras e ao menos estruturar seu projeto, minimamente. Deixar todo o código da serverless function dentro de um único arquivo index.js é inviável.\n\nIsso vale somente para quem realmente quer ser programador\n\nEstruturas de pastas com hierarquia, não é isso que estou falando aqui.\nEstou falando de uma estrutura minimamente organizada para não provocar over code em um arquivo único. Fica difícil de se manter, de refatorar, de saber onde cada coisa é chamada e o por quê de cada função existir. Isso quando a função é criada, mas não chamada.\nResolvi metade das minhas dores de cabeça utilizando o Nestjs que é um Framework opinionated, ou seja, ele te força a usar uma determinada metodologia para construir suas aplicações. E porque isso foi útil?\nCom o uso desse Framework, o código deixou de um único arquivo para uma organização mínima. Dessa forma, iniciando as Firebase Fucntions com esse formato, não deixo cair na rotina fatídica de deixar tudo no maldito index.js. Com tipagem devidamente aplicada, não que isso seja um requisito, estrura de pastas moduladas e algumas metodologias aplicadas pelo próprio Framework como Inversão e Injeção de Dependências.\nAqui um pouco de como organizei a estrutura do meu projeto:\n📂 src\n├── app.controller.spec.ts\n├── app.controller.ts\n├── app.module.ts\n├── app.service.ts\n├── 📂 config\n│   ├── file-interceptor.ts\n│   └── initializer.ts\n├── main.ts\n└── 📂 upload\n    ├── upload.controller.ts\n    └── upload.module.ts\n\n\nDurante minha descoberta para aplicar essa metodologia, fiz alguns pesquisas e não encontrei tantas solução que considerei satisfatórias para lidar com meu problema e então, decidi documentar essa solução em um Canal do Youtube para que me sirva no futuro ou que ajude outros como eu.\nCaso não tenha paciência para o vídeo, você pode acessar o repositório onde deixei público.\nGostaria de concluir que utilizar Framework x ou y não te faz um programador A ou B. Escreva códigos limpos e fáceis de serem entendidos por outros programadores, pois considere que está programando para eles. Isso se você trabalha em um time, se não, se auto-destrua com seu código em um ÚNICO ARQUIVO.",
    "comments": [],
    "summary": {
      "summary": "O artigo discute a falta de organização em projetos que utilizam Firebase Cloud Functions, especialmente por desenvolvedores que não se dedicam exclusivamente à programação. O autor critica a prática de concentrar todo o código em um único arquivo (index.js), dificultando a manutenção e refatoração. Ele propõe o uso do framework Nestjs para impor uma estrutura mais organizada, com tipagem, modularização e outras boas práticas. O autor compartilhou sua solução em um vídeo e repositório no Github. O autor enfatiza que a escolha de um framework não define a qualidade do programador, mas a capacidade de escrever códigos limpos e compreensíveis.",
      "keywords": [
        "Firebase Cloud Functions",
        "organização de código",
        "Nestjs",
        "estrutura de pastas",
        "frameworks",
        "programação",
        "qualidade de código"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Pesquisa para o mercado de freelas",
    "link": "https://www.tabnews.com.br/rafabova/pesquisa-para-o-mercado-de-freelas",
    "content": "Gestao de faturamento\nO gargalo de ferramentas de gestao de notas fiscais, propostas ou leads focadas no publico de micro e pequenos empreendedores (e freelas) na area de servicos é uma oportunidade de negocio?\n\"Galerinha\", estou trabalhando em um projeto de um framework para gestao financeira focado no publico de micro e pequenos empreendedores na area de servicos. A ideia é entender qual etapa de uma gestao de faturamento esse publico se sente mais desconfortavel, se é que sentem algum desconforto.\nEssa pesquisa não foca somente no povo de tecnologia, podem compartilhar com qualquer pessoa que atue como freela em areas como design, UX, eventos, engenharias, finanças, arquitetura, etc. Alem disso, a pesquisa pode ser compartilhada com gringos, pois tem a opcao de responder em ingles.\nSeria de grande ajuda se pudessem responder e compartilhar em suas redes.\nAssim que tiver um resultado relevante eu posto por aqui e compartilho mais sobre o produto (logico, caso a pesquisa indica alguma relevancia).\nLINK: https://forms.gle/NMmdTeYHAwbQnsgv7\nMuito Obrigado!!!",
    "comments": [],
    "summary": {
      "summary": "O artigo aborda uma pesquisa direcionada a freelancers e microempreendedores na área de serviços, com o objetivo de identificar as dificuldades na gestão financeira, especificamente em relação ao faturamento. O autor busca entender se há demanda por ferramentas que facilitem o controle de notas fiscais, propostas e leads. A pesquisa não se limita à área de tecnologia, abrangendo diversas áreas como design, UX, eventos, engenharia, finanças e arquitetura, com opção de resposta em inglês para atingir um público mais amplo. O autor planeja compartilhar os resultados da pesquisa e detalhes do produto desenvolvido, caso haja relevância nas respostas obtidas. Como não há comentários, a discussão não apresenta controvérsias.",
      "keywords": [
        "freelancer",
        "gestão financeira",
        "microempreendedores",
        "ferramentas",
        "pesquisa",
        "serviços",
        "faturamento"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Aumentos e reduções de salários",
    "link": "https://www.tabnews.com.br/GiovaniGomes013/aumentos-e-reducao-de-salarios",
    "content": "Uma pesquisa do Guia Salarial 2025 da Michael Page revela que 25% dos profissionais de tecnologia tiveram queda salarial em 2024, sendo o setor de TI o mais impactado. Embora 47% dos cargos na área de tecnologia tenham mantido a remuneração estável, 28% dos profissionais receberam aumentos acima da inflação. Cargos como Administrador de Redes Pleno e Desenvolvedor Mobile Júnior tiveram os maiores aumentos, com variações de até 35%. Por outro lado, o cargo de Desenvolvedor RPA Júnior sofreu as maiores quedas salariais, chegando a uma redução de até 45% em empresas de grande porte.\nLink da matéria -Um em cada quatro profissionais de tecnologia vê queda em sua remuneração, diz pesquisa",
    "comments": [
      "Isso que estão fazendo com os dev-junior não tem muito sentido. Estão reduzindo o salário, reduzindo contratações por conta da IA, tocando o terror dizendo que IA vai fazer o trabalho de um dev-junior - só pra manter o hype de IA e garantir aumento no valor das ações.\nAcaba desestimulando a nova geração. Aí fica como o mercado de Cobol, onde os mais experiêntes estão morrendo e não tem nova geração interessada.",
      "De fato. Esse papo de IA substituir dev está muito chato. É um pensamento muito ignorante pensar que um modelo de linguagem que só gera código vai substituir o pensamento crítico de um programador (mesmo um junior é varias vezes mais inteligente do que um LLM :D).\nAs únicas pessoas que vejo defender isso são CEOs de empresas que vendem serviços de IA, \"influencers\" que fingem saber do que estão falando e alguns iniciantes cogitando desistir dos estudos na área por causa dessa pilha toda.\nIA é ferramenta, ela auxilia o trabalho do ser humano e não o contrário igual muitos tentam colocar. Programação continua e sempre vai continuar valendo a pena, não pelo dinheiro, vagas de emprego, e sim pelo fato de que um programar é um super poder e vai muito além de fazer tasks no Kanban e ter um salário na conta no final do mês.",
      "Não vai substituir, mas temos que concordar que a agora a necessidade de criador de codigo é 70% menor do que há 3 anos atras. O que acontece que é vai reduzir consideravelmente a necessidade, não tem mais vaga pra tanta gente tentando entrar no mercado. A culpa nem é só da IA, é da quantidade de anuncios e youtubers que pregavam a utopia de grandes salarios com pouco esforço e agora temos isso aí que estamos vendo.",
      "Com certeza, programação ainda vai existir por muito tempo. A diferença agora é que troquei o Ctrl+C / Ctrl+V pelo Ctrl+Alt+I."
    ],
    "summary": {
      "summary": "O artigo aborda um estudo que revela um cenário misto no mercado de tecnologia em 2024, com quedas salariais para 25% dos profissionais, estabilidade para 47% e aumentos acima da inflação para 28%.  Desenvolvedores de nível júnior, especialmente em RPA, foram os mais afetados pelas reduções, enquanto outros cargos como administrador de redes e desenvolvedores mobile tiveram aumentos significativos. Nos comentários, há uma preocupação com a desvalorização dos desenvolvedores juniores, com alguns atribuindo isso ao hype da inteligência artificial (IA) e à redução nas contratações. Usuários defendem que a IA é uma ferramenta de auxílio, e não um substituto do programador, e criticam a ideia de que a IA irá tomar o lugar dos desenvolvedores.  Há um consenso de que a programação continua relevante, apesar da mudança na dinâmica do mercado e do impacto da IA, e que ainda oferece um superpoder para os profissionais. Apesar de haver divergência em relação ao impacto da IA na quantidade de vagas, todos parecem concordar que a programação é uma habilidade importante e não será substituída.",
      "keywords": [
        "salários",
        "TI",
        "IA",
        "desenvolvedores",
        "mercado",
        "programação",
        "tecnologia"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "[PITCH] Recriando o Counter Strike para o Playstation 2 (PART 2)",
    "link": "https://www.tabnews.com.br/GustavoFurtadoFatality/pitch-recriando-o-counter-strike-para-o-playstation-2-part-2",
    "content": "Esta é a parte 2\nVideo\nOque foi adicionado?\n\nArrumar bugs de camera\nMelhorar o sistema de Arma\nAdicionar a arma Ak47(apenas animação de Idle, e ao usar o R2 atirar)\nAdicionar a arma Usp(apenas animação de Idle)\nApertar Triângulo para mudar de arma\nAdicionar balanço de arma ao andar\n\nComo jogar?\nPCSX2: Extraia o RAR dos releases, depois, nas configurações do emulador ative \"hostfile system\"\nPS2(não funcionando direito ainda): Estou tendo uns problemas ao fazer funcionar no ps2, como alguns problemas de carregamento e talvez tenha alguns probleminhas depedendo da sua versão do console\nGithub\nVou fazer uma 0.2.0_1 pra corrigir esse erro de não rodar no PS2 direito",
    "comments": [
      "Se eu fosse herdeiro, te financiava.\nSeria uma boa um financiamento coletivo, divulgar em inglês vai ter entusiastas de todos os cantos",
      "Muito top, o jogo já tá criando forma! Ver esse vídeo me trouxe boas lembranças da época das lan houses. Tá ficando incrível, mano. Parabéns pelo trampo, ansioso pra ver as próximas versões! 🔥🎮"
    ],
    "summary": {
      "summary": "O artigo descreve o progresso na recriação do jogo Counter Strike para o Playstation 2, detalhando melhorias como correções de bugs na câmera, aprimoramento do sistema de armas e a adição das armas AK47 e USP, embora com funcionalidades básicas. O jogo é jogável em emulador de PC (PCSX2) com instruções detalhadas, mas ainda apresenta problemas em consoles PS2 reais. Os comentários são positivos, expressando entusiasmo pelo projeto, relembrando experiências passadas e manifestando interesse em um possível financiamento coletivo.",
      "keywords": [
        "Counter Strike",
        "Playstation 2",
        "Desenvolvimento de jogos",
        "PCSX2",
        "Emulador",
        "Ak47",
        "Usp"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Porque o lançamento do DeepSeek não é terra arrasada!",
    "link": "https://www.tabnews.com.br/sarcho/porque-o-lancamento-do-deepseek-nao-e-terra-arrasada",
    "content": "Em um dos últimos videos do Filipe Deschamps, \"O Que Faliu a Netscape Pode Falir a OpenAI?\", foi citada uma analogia de que a estratégia da DeepSeek poderia ser considerada \"terra arrasada\". Não foi o Felipe quem disse, ele apenas comentou que tem pessoas analisando assim. Me surpreendeu, e muito, ver alguns comentários com várias curtidas dizendo que acharam a analogia excelente.\nSim, eu entendo muito bem o conceito e portanto entendo a analogia. Ela nem é tão ruim assim. Mas vamos lá. Até onde eu sei o nome que sempre deram pra isso é \"livre mercado\" ou uma \"melhora de eficiência\" ou mesmo uma \"opção de modelo de negócios\".\nPara quem compreende a história e o funcionamento dessa e de outras grandes empresas, ou então já viu \"ao vivo\" o que elas fazem com mercados menores e mini-mercados de bairro, uma imagem é suficiente.\nA gente pode nem perceber mas chamarem open-source chinês de terra arrasada é um joguete semântico baixo, que vai contra o que a maioria de nós desenvolvedores acreditamos.\nModelos de AI open-source já existiam aos montes. Então por quê agora é diferente? Os caras \"somente\" criaram algo melhor e mais eficiente e optaram por um modelo de negócios mais aberto, E são Chineses.\nTerra arrasada pra quem? Certamente não pra nós Brasileiros, nem pros Chineses e nem pra 90% do resto do mundo. Aqui a terra vai florescer com essa contribuição open source. Get it?",
    "comments": [
      "Para não ser repetitivo demais leia: https://www.tabnews.com.br/TrevizoTecnologia/caso-deepseek-o-verdadeiro-poder-esta-no-software.\nEm resumo, cedo para falar, não tem nada de tão sensacional assim, apesar de ser algo positivo e muita água ainda vai rolar, vão aparecer outros melhores ainda.\nNão vi o vídeo mas a comparação provavelmente foi feita como chamariz, porque não são coisas comparáveis. Por exemplo, um dos motivos da Netscape falir é o fato do código ser muito ruim e a empresa extremamente mal gerenciada, que piorou muito depois de vendida, além de ter um concorrente muito forte, fora o fato que ela cresceu na bolha, não tinha sustentação real. Ou seja, o caso atual, ou não temos todas as informações, ou já sabemos que é o oposto. O mesmo vale para praticamente qualquer outro caso de empresas e mercados.\nO que existe é o conceito de destruição criativa de Schumpeter, sempre terá algo novo desafiando o que já existe e ninguém sabe o que acontecerá porque depende de uma quantidade enorme de variáveis, em muitos casos que ninguém consegue controlar individualmente. Alguns conseguem fazer fortuna do viés que receberam.\nPor isso que, ao contrário do que alguns programadores influenciadores dizem, tem momento que você deve destruir o que você está fazendo para continuar competitivo. È uma decisão corajosa e difícil, em muitos casos será errada, mas tem momentos que é o certo a fazer.\nhttps://www.tabnews.com.br/sucoDeMaracuja/se-voce-pensa-em-refazer-um-projeto-do-zero-voce-nao-amadureceu-o-suficiente\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Foi uma fala interessante dele. Meio será que ele quis dizer que a DeepSeek deveria lançar um modelo fraco?\nEu mesmo já esperava que tivesse uma nova IA mais porreta, quem viu o Nemotron ou as promessas do Nouschat sabia que uma hora algo revolucionário aparecia.\nTem gente até falando em rodar o modelo 671b em máquinas de 10.000US$."
    ],
    "summary": {
      "summary": "O artigo discute a analogia de que o lançamento do modelo de IA DeepSeek seria uma estratégia de \"terra arrasada\", argumentando que, na verdade, ele representa um avanço no livre mercado e uma melhoria na eficiência, beneficiando a maioria dos desenvolvedores e usuários ao redor do mundo, especialmente por ser um modelo open-source. Os comentários concordam que a comparação com a estratégia de \"terra arrasada\" é inadequada, e que o lançamento do DeepSeek é positivo e parte de um processo natural de inovação e competição, onde novos modelos desafiam os existentes. Alguns mencionam o conceito de \"destruição criativa\" e a necessidade de, às vezes, abandonar projetos existentes para manter a competitividade. Há menções sobre a expectativa de novas IAs ainda mais poderosas no futuro e o potencial de modelos grandes rodarem em máquinas de alto desempenho. Não há divergências significativas nos comentários, e o tom geral é de otimismo com o avanço tecnológico.",
      "keywords": [
        "DeepSeek",
        "open-source",
        "IA",
        "mercado",
        "inovação",
        "destruição criativa",
        "modelos de negócio"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Pitch: Apresentando o Constel",
    "link": "https://www.tabnews.com.br/iagocavalcante/apresentando-o-constel",
    "content": "🚀 Apresentando o Constel 🌌\nBoa noite, pessoal! Estou desenvolvendo um novo projeto chamado Constel, um aplicativo que traz a experiência de um Instagram descentralizado, construído sobre o ATProto, o mesmo protocolo utilizado pelo cliente do BlueSky.\nA proposta do Constel é oferecer um ambiente focado exclusivamente em fotos e vídeos, mantendo toda a liberdade e descentralização que o ATProto proporciona. Atualmente, o app já permite:\n✅ Login integrado com o BlueSky\n❤️ Curtir publicações\n📜 Visualizar o feed\n🔍 Pesquisar conteúdos\nTudo isso utilizando a infraestrutura já existente do BlueSky, mas com um recorte mais visual e imersivo.\n📱 O processo de aprovação na App Store já está em andamento e, em breve, o lançamento para Android também acontecerá. O desenvolvimento está sendo feito de forma iterativa, nas horas livres, e a ideia é expandir cada vez mais as funcionalidades para oferecer uma experiência completa e alinhada ao que já existe nas grandes redes sociais, porém, com o diferencial da descentralização.\nSe quiser acompanhar ou contribuir, o código está disponível no GitHub:\n🔗 github.com/iagocavalcante/constellation\nFiquem ligados para as próximas atualizações! 🚀✨",
    "comments": [
      "Você chegou a verificar o ActivityPub do Mastodon ou compará-lo com o ATProto? Só curiosidade mesmo, não to criticando. Só queria saber em termos de programação qual seria mais prático ou que tem mais futuro... Sucesso pra ti.",
      "Sei por alto como funciona, talvez seja um segundo projeto olhar o ActivityPub. O que me motivou a olhar pro ATProto foram a documentação e o pacote pronto pra usar.",
      "Corajoso. Uma rede social é tão importante quanto a quantidade de pessoas que estão nela, o ATProto até tem uma premissão interessante na questão de portabilidade, mas, o usuario final nao liga pra isso. Precisa ter algo a mais realmente, para conseguir algum sucesso, porem, a dificuldade realmente é esse algo a mais no meio de gigantes;",
      "Sim, totalmente de acordo, eu to fazendo mais pelo desafio e entendimento das API's, saber até onde da pra ir, se o app vai ser usado ou não, ai já são outros 500 hahaha, valeu @walovetech o/"
    ],
    "summary": {
      "summary": "O artigo apresenta o 'Constel', um aplicativo de fotos e vídeos descentralizado construído sobre o protocolo ATProto, o mesmo do BlueSky. O autor destaca que o aplicativo já possui funcionalidades como login integrado, curtidas, feed e busca, utilizando a infraestrutura do BlueSky. O desenvolvimento é iterativo, com planos de expandir funcionalidades e lançar para Android. O código está disponível no GitHub para acompanhamento e contribuições. Os comentários demonstram interesse pelo projeto, com um usuário questionando a comparação com o ActivityPub do Mastodon, e outro concordando com a dificuldade de competir com as grandes redes sociais, mas reconhecendo o valor do desafio e aprendizado.",
      "keywords": [
        "Constel",
        "ATProto",
        "descentralização",
        "rede social",
        "aplicativo",
        "BlueSky",
        "desenvolvimento"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Quando testar um componente React?",
    "link": "https://www.tabnews.com.br/Vanorton/quando-testar-um-componente-react",
    "content": "Recentemente, iniciei um novo projeto que só vejo vantagens:\n\nVou usá-lo bastante, pois atende a uma necessidade minha.\nSerá uma ótima oportunidade para aprender e praticar diversas tecnologias e ferramentas poderosas.\nNão vou entrar em detalhes ainda pois é não é o motivo pelo qual fiz o poste kkk.\n\nMas, enquanto estudava Jest, surgiu uma dúvida:\n\nQuando devo testar um componente React? Sempre que eu criar um componente, preciso escrever um teste para ele?\n\nAssistindo a vídeos no YouTube, vi muitos testes verificando se uma sidebar foi renderizada corretamente e se os elementos estavam na tela. Mas isso não é algo que eu posso simplesmente abrir a aplicação e conferir na hora?\nÉ a primeira vez que uso testes automatizados, mas, pelo que vejo na internet, parece algo não tão útil. Será que entendi errado?",
    "comments": [
      "SIM, VOCÊ ENTENDEU ERRADO. DEIXA EU TE EXPLICAR. 🚀\nPrimeiro, sim, a internet tá cheia de LIXO. Quase todo teste automatizado por aí é só um unit test burro, quase sem valor algum. Mas mesmo esses testes TÊM SUA UTILIDADE.\nMas olha, isso aqui não é um tutorial sobre como escrever testes eficazes. É só um recado humilde pra convencer um jovem programador (ou não tão jovem) que testes são EXTREMAMENTE ÚTEIS. Então, relaxa, não vou te encher de regras ou boas práticas. Só quero que você entenda o PODER que testes automatizados têm de SALVAR SUA VIDA (ou pelo menos sua sanidade).\nPega o exemplo da sidebar que você mencionou. Claro, você pode abrir a aplicação e ver se tá tudo certo. Isso funciona ENQUANTO SEU APP É PEQUENO. Mas quando você tiver MILHARES DE COMPONENTES, abrir tudo e ficar clicando manualmente é UM DESPERDÍCIO DE TEMPO ABSURDO.\nE tem mais: uma mudança num componente pode QUEBRAR OUTRO COMPONENTE que você nem lembrava que existia. Testes automatizados CAPTURAM ISSO.\nEles são como GUARD-RAILS numa estrada. Você ainda precisa dirigir com cuidado, usar cinto de segurança e ter um carro com airbag, mas os guard-rails estão lá pra evitar CATÁSTROFES.\nENTÃO, QUANDO ESCREVER TESTES?\nASSIM QUE TERMINAR O COMPONENTE é uma boa resposta.\nMas talvez uma resposta AINDA MELHOR seja: ASSIM QUE ENCONTRAR UM BUG. No mínimo, escreva um teste pra garantir que aquele bug NUNCA MAIS ACONTEÇA. Testes automatizados NÃO SERVEM para evitar bugs. Testes:\nDOCUMENTAM como interagir com componentes.\nFACILITAM REFATORAÇÕES — você pode mudar o código à vontade, sabendo que os testes vão te avisar se quebrou algo.\nECONOMIZAM MUITO TEMPO a longo prazo.\nClaro, no começo pode parecer que você tá gastando mais tempo escrevendo testes do que codando. Mas isso é INVESTIMENTO. Quando seu app crescer, você vai agradecer por ter esses GUARD-RAILS te protegendo.\nO PONTO CRUCIAL\nO VERDADEIRO PROBLEMA é quando bugs acontecem em produção e você NÃO FAZ IDEIA DO PORQUÊ. Aí, meu amigo, é PERDA DE TEMPO GIGANTE. Debuggar sem testes é como procurar uma agulha num palheiro. TESTES SÃO DETECTORES DE METAL. Eles mostram ONDE as coisas quebraram, O QUE quebrou e COMO quebrou. Ou pelo menos deveriam.\nDepois de noites mal dormidas perseguindo bugs que NUNCA DEVERIAM TER CHEGADO TÃO LONGE, você percebe: \"Eu deveria ter escrito mais testes e testes melhores.\"\nSe você não tem isso, vai passar horas (ou semanas) tentando descobrir o que deu errado.\nENTÃO, RECAPITULANDO:\nTestes automatizados são GUARD-RAILS — não servem pra evitar acidentes (bugs), mas reduzem as chances de um acidente (bug) causar um estrago FORA DE CONTROLE.\nEscreva testes ASSIM QUE TERMINAR O COMPONENTE e ASSIM QUE ENCONTRAR UM BUG.\nEles DOCUMENTAM, FACILITAM REFATORAÇÕES, e ECONOMIZAM TEMPO.\nNÃO CAIA NA ARMADILHA DE ACHAR QUE TESTES SÃO INÚTEIS. Eles são ESSENCIAIS pra qualquer projeto que pretenda crescer sem virar um pesadelo.\nAgora, VAI LÁ. Escolhe um componente, escreve um teste, e quando você perceber que dá pra refatorar sem medo, quando perceber que tá gastando mais tempo escrevendo testes do que programando, como seu colega aqui, você vai entender que:\nGastar tempo escrevendo testes automatizados é infinitamente melhor do que gastar tempo debugando código pra descobrir por que as coisas não funcionam. ISSO SIM É TEMPO PERDIDO.\nUm abraço e bons estudos!",
      "Cara, valeu demais pela resposta, me ajudou bastante.\nPelo que entendi eu devo fazer testes unitários para componentes que tem um comportamento sozinhos, que tem interação com o usuário, mas fazer mais teste E2E pois eles vão ter um comportamento mais próximo do que o usuário vai realisar.\n\nÉ só um recado humilde pra convencer um jovem programador (ou não tão jovem)\n\nTenho 16 anos :)",
      "Meus 2 cents:\nSigo o relator @clacerda e acrescento: testes facilitam a vida a longo prazo. Daqui 1 ano, aquela rotina que voce nem faz ideia do porque existe, o teste pelo menos garante que esta funcionando como planejado inicialmente.\nAlem disso, em projetos que tem participacao de diversas pessoas, os testes ajudam os devs mais recentes (e que nao tem ainda tanta intimidade com o projeto) a entender o funcionamento de certas coisas, ainda que nao tao bem documentadas.\nDigo mais: ja aconteceu mais de uma vez de pegar uma lib sem documentacao adequada mas que tinha alguns testes - eh o bastou para analisar como era esperada a interacao com ela.\nEnfim, testes sao um saco - de fato necessitam de investimento de tempo. Mas em projetos grandes ou que vao ter muitas maos interagindo, sao teu salva-vidas.",
      "Eu não tenho muita experiência em testes ainda, mas posso afirmar algumas coisas: Teste, teste e teste para não se arrepender.\n\nAssistindo a vídeos no YouTube, vi muitos testes verificando se uma sidebar foi renderizada corretamente e se os elementos estavam na tela. Mas isso não é algo que eu posso simplesmente abrir a aplicação e conferir na hora?\n\nNão necessariamente. Se for algo seu e funcionar, talvez não precise. Mas se for algo para algum usuário final usar, é necessário pois navegadores tem questões de compatibilidades e etc... O Safari então é um pé no saco... Então é bom se certificar que esta tudo renderizando corretamente em vários cenários.\nOutro ponto é que testes tem de ser estratégicos. Não é necessário testar absolutamente tudo, apenas aquilo que realmente importa. Como definir isso? Eu sinceramente vou por tato e pela a pouca experiência que tenha, mas no geral, com muito estudo, você irá encontrar esta resposta.\nTeste, nunca deixe de testar. As vezes os bugs passam no teste, ai você refina o teste e testa o teste também. Não esqueça que a dor de cabeça é maior uma vez que o usuário final acessa algo bugado...",
      "Olá! Também estou começando agora nesse mundo automatizado, e ontem mesmo vi um vídeo sobre isso do Diego da RocketSeat: https://www.youtube.com/watch?v=N6Yvi4lPqxs&t=97s e ele fala sobre teste de componente.\nEspero que te ajude.",
      "Quando ele existir!\nSe tu criou um componente provavelmente ele precisa ser testado nem que seja um simples snapshot."
    ],
    "summary": {
      "summary": "A discussão gira em torno da necessidade e do momento ideal para testar componentes React. O autor questiona a utilidade dos testes automatizados, citando exemplos de testes de renderização simples. Vários participantes respondem enfatizando a importância dos testes, não apenas para evitar bugs, mas também para documentar componentes, facilitar a refatoração e economizar tempo a longo prazo. Há consenso sobre a utilidade de testes unitários para componentes com comportamento isolado e testes E2E para simular a experiência do usuário. A importância de testar em diferentes navegadores é ressaltada, assim como a necessidade de não testar tudo, mas sim de forma estratégica. A discussão também apresenta pontos de vista de desenvolvedores iniciantes, que veem os testes como um desafio, mas concordam com sua importância para a qualidade do software e para evitar a dor de cabeça de bugs em produção. É mencionado o conceito de testes como 'guard-rails' para o código.",
      "keywords": [
        "testes automatizados",
        "componentes React",
        "testes unitários",
        "testes E2E",
        "refatoração",
        "bugs",
        "qualidade de software"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Construção de plataforma de hospedagem de aplicações.",
    "link": "https://www.tabnews.com.br/lucasshz/construcao-de-plataforma-de-hospedagem-de-aplicacoes",
    "content": "Olá a todos! Este é meu primeiro post aqui. Estou desenvolvendo uma plataforma de hospedagem de aplicações com o objetivo de tornar o processo de deploy o mais simples possível. Gostaria de receber feedbacks de vocês sobre a experiência do usuário, usabilidade, etc.\nAtualmente, a plataforma suporta:\nDeploy de aplicações web em React, Angular e Vue.\nDeploy de APIs em Node.js e Bun.\nCriação de bancos de dados MySQL.\nPara colocar sua aplicação online, basta compactar seu projeto em um arquivo .zip e fazer o upload no site.\n🌐 Website: https://setbytes.com\nLembrando que a plataforma ainda está em desenvolvimento. O objetivo deste post é coletar feedbacks para melhorias e até mesmo sugestões de novas funcionalidades. Agradeço desde já!",
    "comments": [
      "boa noite, sr.\ntentei realizar login via github, eis que me é apresentada a tela de fail em json puro:\n{\"success\":false,\"message\":\"Param is Missing: email\"}\n\né possível automatizar deploy via remote git repo?\nhá algum impedimento para o framework sveltekit ou posso rodar direto com o adapter para node do próprio sveltekit? não pude testar ainda.\no projeto é de apenas 1 pessoa?\nestá automatizando conteinerização docker ou rodando via algum outro modo?\nprometem-se vcpus superprovisionadas ou tudo é serverless vercel-like?\nvc está utilizando uma máquina própria ou uma vps? ou instâncias de computação de uma cloud-like?\naguardamos retorno.\nps: eu gostei da tua lib typewield. sinceramente, achei útil, pois curto muito o padrão decorator, e esteticamente com o @; apenas um gosto pessoal além do fator técnico, claro.",
      "Obrigado por participar!\nSobre a autenticação, estou verificando. Ao que tudo indica, o GitHub não está fornecendo o seu e-mail durante o login.\nA automatização do deploy via GitHub já está no meu backlog. A ideia é permitir que o usuário selecione um projeto e uma branch, de forma que o deploy seja feito automaticamente sempre que houver uma alteração nessa branch (um novo commit, por exemplo).\nFrameworks web serão adicionados aos poucos, assim como a criação de sites WordPress. No momento, é possível fazer o deploy de conteúdo estático e aplicações SPA, desde que o projeto gere arquivos estáticos dentro das pastas \"dist\" ou \"build\".\nO deploy é automatizado e não requer shutdown manual. Sua aplicação precisa ter um endpoint /health; assim que for detectado que está saudável, a troca da aplicação será realizada automaticamente.\nAtualmente, estou utilizando algumas VPS, mas a intenção é construir um datacenter aqui no Canadá para hospedar as aplicações após o fim do inverno, permitindo a implementação de funcionalidades como armazenamento de arquivos (storage), que exige uma grande quantidade de memória, backups frequentes e RAID 1 para garantir redundância e segurança dos dados.",
      "Ele não fornece o email, a não ser que o usuário o tenha definido como public, mesmo que o scope tenha email. Você sempre precisa verificar se o email está nos dados retornados e solicitar especificamente ele, caso nao esteja.",
      "Como pretende monitorar cada branch de cada projeto para fazer deploy? Isso não me parece escalável ou eu não compreendi sua explicação para o CD. De todo modo,  seria mais interessante você disponibilizar uma api para fazer isso por meio do github actions, jenkins ou gitlab. Alias, pelo que eu entendi você só iria suportar Github. Parabéns pelo projeto",
      "Olá, obrigado por participar!\nPela sua pergunta, acredito que você tenha imaginado um processo de polling, onde meu servidor ficaria constantemente consultando alterações nos projetos e realizando o deploy. Existem várias maneiras de alcançar esse resultado, mas a mais comum e adequada é escutar eventos.\nUm exemplo disso é o GitHub Actions, onde você pode definir um pipeline para cada branch, conforme sua necessidade, e quando ele recebe um evento, o mesmo e ativado. O approach mais apropriado para esse tipo de funcionalidade seria, então, a utilização de webhooks.",
      "Entendi. Então você terá um endpoint (api) que pode ser acionado. E como funciona com projetos privados? Por exemplo, se eu quiser usar o Gitlab em um repo privado, como a sua solução faria para fazer o deploy?\nOBS: Não entenda minhas perguntas como críticas.",
      "Entendi onde você quer chegar. Nesse caso, teríamos que implementar um CLI para nossa plataforma, onde você poderia fazer login através de um token ou com usuário e senha e, em seguida, enviar o projeto para nossa plataforma para o deploy. Porém, a automação do CI/CD e suas regras poderiam ser configuradas por você.",
      "Cara, muito legal sua idéia. Estou montando algo similar mas para uso pessoal. Durante o processo de conceito, encontrei uma ferramenta chamada BuildPack (https://buildpacks.io/) no meu caso não ia servir, mas a idéia é o usuário só enviar o zip e a própria ferramenta identificar qual o tipo de código que será a aplicação. Já elimina parte da sua interface e deixa mais dinâmico para o usuário. Espero que ajude ou inspire. Abraços!",
      "opa, salve @lucasshz gostei do seu projeto.\nestou testando ele,mas você tem uma ideia de preço já que vai usar para os serviços.\npois achei prático ele e acredito que isso conta muito para o uso geral pois nada pior que chegar em um lugar e ficar perdido. mas o seu projeto é simples e objetivo como tem que ser ,acompanharei as atualizações deste projeto.",
      "Bom dia, obrigado por participar.\nA questão do preço ainda está em definição, mas pretendo estabelecer um valor em torno de $5 dólares para uma aplicação completa, incluindo web, API, datastore, storage e e-mail. O valor será cotado em dólares e será fixo, sem cobrança por consumo, com uma possível exceção para o banco de dados. No entanto, essa exceção será bastante generosa, garantindo que o limite não seja facilmente alcançado. Os preços serão definidos em dólares, considerando que a empresa foi aberta no Canadá.\nAlém disso, você poderá construir seu plano escolhendo a quantidade de cada item conforme sua necessidade. o que pode fazer o preço ser menor que isso, mas acredito que essa seria uma média.",
      "Seu projeto é bem promissor, vou testar para dar um feedback mais assertivo.",
      "@lucasshz parabéns pela iniciativa! No site da SetBytes informa a mensagem abaixo:\n\nOur cloud application platform is free to use until March 8! Don’t miss out—explore now.\n\n\nComo são os planos e preços após 08 de Março?\nO que cada plano inclui?\nA hospedagem é por sua conta ou você faz deploy na minha conta de cloud provider?\nO que um usuário consegue fazer com sua plataforma que não conseguiria via Vercel ou outro PaaS (Platform as a Service)?\n",
      "Bom dia, obrigado por participar.\nA hospedagem seria por nossa conta, pois o objetivo é avançar rumo à construção de um data center no Canadá.",
      "Já pensou em focar na construção e gestão do seu data center e fazer parceria com algum software existente para automatizar a gestão de infra, gerenciar Linux, fazer deploy de applications (server, serverless, container, etc)?\nVocê já poderia agilizar o lançamento do seu data center e deixar outra equipe de terceiros cuidar do software.\nCom isso seu \"time to market\" diminuiria e se você é bom em cuidar de data center esse já é um diferencial excelente seu, que já pode desembolar grana pro seu lado e fazer seu negócio ficar estável.\nAlém disso, ao invés de ficar limitado a frameworks e linguagens de programação específicos, pode integrar com algum produto que já suporta múltiplos cloud providers, linguagens de programação, frameworks, etc\nQuais seriam os prós e contras de fazer parceria com outro software ao invés de criar seu próprio software do zero?"
    ],
    "summary": {
      "summary": "O artigo apresenta uma nova plataforma de hospedagem de aplicações, com foco na simplicidade do deploy. Os usuários demonstraram interesse na automatização via repositórios Git, além do upload de arquivos .zip, e questionaram sobre frameworks suportados e a escalabilidade da solução. Surgiram discussões sobre a necessidade de webhooks para o CI/CD, e a possibilidade de usar um CLI para projetos privados. Os comentários revelaram preocupações sobre preços, planos futuros e como a plataforma se diferencia de outras já existentes, como Vercel.  Houve também a sugestão de parcerias para acelerar a criação do datacenter e a gestão da infraestrutura, ao invés de desenvolver todo o software do zero. A discussão é marcada por opiniões construtivas e busca por esclarecimentos técnicos, com um tom geral positivo e colaborativo.",
      "keywords": [
        "hospedagem de aplicações",
        "deploy",
        "plataforma",
        "CI/CD",
        "datacenter"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "Minha experiência depois de 1 ano como o único desenvolvedor da empresa, sendo Júnior",
    "link": "https://www.tabnews.com.br/ArkOfMoses/minha-experiencia-depois-de-1-ano-como-o-unico-desenvolvedor-da-empresa-sendo-junior",
    "content": "Há um pouco mais de um ano, eu entrei na empresa como desenvolvedor Júnior, meu primeiro emprego na área. Hoje, quero compartilhar um pouco da minha experiência. Peço perdão desde já caso fique um pouco longo.\nO inicio da jornada\nEu consegui meu primeiro emprego na área depois de uma recomendação de um amigo. Após eu entrar, ele me ajudou nos primeiros meses a me adaptar, porém, logo depois, conseguiu uma oportunidade melhor e seguiu em frente. Eu fiquei e estou lá até hoje.\nA empresa em que estou é mais focada em conectividade e não em desenvolvimento em si, e eu estou inserido no setor de engenharia. Basicamente, nossa função é garantir que todo o ambiente esteja funcionando, além de tentar trazer melhorias onde for possível.\nA equipe é pequena, com quatro pessoas, incluindo eu, meu líder e um estagiário. Embora todos tenham conhecimentos de programação, quando se trata de desenvolvimento web, eu sou o único da empresa.\nExistem algumas aplicações internas que a gente tem, cuja ideia é facilitar o dia a dia dos outros funcionários. Essas aplicações são 100% minha responsabilidade.\nAs responsabilidades do time\nComo eu disse, a equipe é pequena e a responsabilidade é grande. A gente supervisiona todos os servidores da empresa, sejam na nuvem ou físicos. Isso inclui infraestrutura, monitorias, backups, firewalls, a rede interna e os sistemas embarcados que nós desenvolvemos. Sem contar as demandas do dia a dia que acabam caindo pra a gente também: \"tô sem internet\", \"e-mail não envia\", \"tô sem permissão pra acessar a pasta X\" são coisas recorrentes com as quais lidamos. Quando eu falo que a gente cuida pra que TUDO funcione, é TUDO mesmo. E, é claro, ainda tenho o extra de desenvolver o front e o back das aplicações internas que mencionei mais cedo.\nO lado bom e o lado ruim\nPor um lado, isso é de certa forma empolgante, já que tenho um nível de autonomia e \"autoridade\" que nunca esperava ter a essa altura da minha carreira. Na maior parte do tempo, sou livre pra decidir qual o melhor caminho a ser tomado quando se trata dessas aplicações internas. Óbvio que eu comunico o que estou fazendo e como, mas se, por exemplo, estivermos discutindo alguma questão e eu disser que X deve ser feito, as chances de X ser decidido são altas, já que sou o cara que conhece esses sistemas de cabo a rabo.\nIsso também acabou me forçando a desenvolver bons hábitos. Melhorar minha organização pessoal e aprender a buscar soluções por conta própria foram essenciais, já que muitas vezes só me é dado um problema e é esperado de mim que eu corra atrás da solução.\nPor outro lado, sinto que estou perdendo algo importante que outros devs júniors têm: feedback e mentoria de um desenvolvedor mais experiente. Não me levem a mal, o líder da minha equipe é uma ENORME fonte de inspiração pra mim, e eu já aprendi mais com ele do que com todos os meus professores da faculdade juntos. O problema é que ele é um guru de redes, com mais de 10 anos de casa. Ele conhece toda a topologia da empresa como a palma da mão e sabe codar em shell puro de cabeça, mas desenvolvimento em si? Não é o forte dele, e ele mesmo já disse isso.\nIsso significa que eu não tenho absolutamente nenhum feedback no meu código. Eu sempre me empenho em validar e testar, mas no final das contas, se eu decidir que meu código tá pronto, ele tá pronto e fim de conversa. Manda pra produção e é isso.\nEmbora eu tente sempre fazer o meu melhor, tenho certeza de que existem pequenas coisas que devo estar fazendo errado ou que poderiam ser otimizadas, coisas que um sênior demoraria 1 segundo pra perceber que não é o ideal, mas que podem estar passando despercebidas por mim. Meu medo é pegar hábitos ruins que sejam difíceis de consertar depois ou, pior, que possam me pintar como alguém menos competente/experiente do que sei que sou em uma possível futura entrevista.\nTá... mas e aí?\nA questão é que sou extremamente grato pela oportunidade que tive, e genuinamente gosto muito do meu trabalho atual. Todo dia é um desafio diferente, e a quantidade de conhecimento que acumulei até agora tenho certeza de que vou levar pra vida. Quando cheguei, não tinha nenhum conhecimento em Linux e tinha basicamente o ABC de HTML, CSS, Javascript e PHP puro. Hoje em dia, lidar com um ambiente Laravel e  criar labs em Docker para testar novas ferramentas é algo rotineiro.\nO que eu queria era compartilhar minha experiência e perguntar a opinião de vocês. O que acham dessa situação? Já passaram por algo parecido? Como lidaram com a falta de feedback técnico? Sintam-se à vontade pra compartilhar opiniões, críticas ou sugestões sobre tudo isso, mas só de ler até aqui, eu já fico grato.",
    "comments": [
      "Eu passo pela mesma situação que você, sou dev júnior com muita responsabilidade e nenhum pleno ou sênior na equipe. Existe um superior encarregado de gerenciar, mas ele tem conhecimento limitado na área de desenvolvimento. Tenho os mesmos questionamentos e alguns sentimentos que você. Sei que estou perdendo algo por não ter alguém mais experiente dando feedback. No mais, sigo dando o meu melhor e buscando me desenvolver, e sempre mantenho em mente que algumas coisas que costumo fazer não são a melhor forma de resolver, e vou precisar corrigir esses maus hábitos."
    ],
    "summary": {
      "summary": "O artigo relata a experiência de um desenvolvedor júnior que, após um ano em sua primeira função, se tornou o único responsável pelo desenvolvimento web em sua empresa. Ele descreve a grande autonomia e responsabilidade que possui, cuidando de aplicações internas, infraestrutura e servidores, o que o forçou a desenvolver habilidades de organização e resolução de problemas. Apesar disso, o autor expressa a falta de feedback e mentoria de um desenvolvedor mais experiente, temendo desenvolver maus hábitos ou ser percebido como menos competente em futuras oportunidades. Ele valoriza a oportunidade, o aprendizado e a diversidade de desafios que o trabalho proporciona, mas demonstra preocupação com a falta de acompanhamento técnico. O único comentário recebido se identifica com a situação do autor, reiterando a falta de feedback técnico e também manifestando preocupações similares.",
      "keywords": [
        "desenvolvedor júnior",
        "autonomia",
        "feedback",
        "mentoria",
        "infraestrutura",
        "desenvolvimento web",
        "aprendizado"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "[Recomendação] Ferramenta Jira like para projeto de um dev só",
    "link": "https://www.tabnews.com.br/ApoloRodrigues/recomendacao-ferramenta-jira-like-para-projeto-de-um-dev-so",
    "content": "Tenho uma ideia de projeto e gostaria de usar uma ferramenta para me ajudar a evitar cair nas armadilhas que sempre caio: perder o foco e não seguir com o projeto.\nNa empresa nossa equipe utiliza o Jira que é uma boa ferramenta. Mas como é um projeto de um dev só não queria perder dias configurando uma ferramenta complexa.\nFiz algumas buscas mas ainda não achei algo que tivesse o seguinte:\n\nCadastro de Epic, Story...\nControle de backlog\nControle de \"sprint\"\n\nVeja, não busco nada complexo cheio de indicadores. Mas não gosto também da forma como o trello trabalha com isso.\nAlguem tem alguma sugestão?\nUPDATE 1:\nObrigado pelas contribuições. Sobre as ideias Gihub projects acaba não me atendendo pois uso gitlab. Gitlab tem algo similar também mas não me adaptei.\nOutra ideia seria eu usar arquivos mesmo txt como sugerido ou markdown no próprio repo.\nAcabei usando outra ferramenta open-source que pode ser util: Super Productivity. Nem tão complexa, nem tão simples. Fica a dica para quem também estiver procurando",
    "comments": [
      "Aqui na empresa estamos usando o Github Projects e tem funcionado muito bem.\nVocê pode criar um projeto dentro de um repositório ou dentro de uma organização e fazer referências para diversos repositórios, a gente faz dessa última forma.\nUtilizamos a visão Kanban, fica próximo ao que o Trello oferece, mas com o link dos repositórios e triggers que você pode customizar fica um controle muito bom.\nUsar milestones nos repositórios e datas de prazos que o Github também oferece, pode dar ainda mais controle sobre o projeto.",
      "Você já considerou a humilde, porém poderosa, combinação de backlog.txt e uma pasta cheia de arquivos nomeados como sprint_01.txt, sprint_02.txt, e assim por diante? Sim, é rudimentar, mas eficaz. Para as suas stories, solte a imaginação! Crie uma marcação personalizada, algo como:\n# Epic: Dominar o Mundo\n- [ ] Story: Criar um exército de robôs\n- [x] Story: Convencer a humanidade de que robôs são legais\n\nE se quiser levar isso para o próximo nível, escreva um script simples que transforme esses arquivos em um banco de dados. Assim, você pode extrair métricas, como quantas stories foram concluídas por sprint ou quantos cafés você tomou enquanto codava.\nNo fim das contas, como você mesmo disse, não precisa de nada sofisticado. Um editor de texto e um pouco de disciplina são suas melhores ferramentas.",
      "Estou pensando mesmo em algo assim mas menos rudimentar com markdown. Obrigado pela contribuição",
      "github projects, vc consegue criar as issues, milestones e ter um kanban igual o jira, de graça e integrado ao seu repo.\nhttps://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects",
      "Opção 1, GitHub Projects: como você já é dev e possivelmente já tem uma conta no GitHub, talvez seja o mais prático: https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects\nOpção 2: Use Linear app (https://linear.app/) e seja feliz. Ao contrário do JIRA que é super genérico, Linear foi criado pensando em equipes de desenvolvimento de software, bem mais minimalista, com plano FREE forever, e cobre aí todo o rolé básico do scrum ou kanban sem muita firula.\n* Aqui mais sobre Linear app, se tiver interesse na história por trás do produto: https://www.reddit.com/r/UXDesign/comments/1cbcziw/linear_app_built_400m_issue_tracker_with_next_to/",
      "Já tentou usar a parte de projetos do proprio github?\nDa pra voce inclusive associar a milestones, pacotes, versões e etc.",
      "Acho que talvez o notion.sh pode ser interessante, é bem customizável. Recomendo procurar vídeos sobre ele e que envolva o que você precisa e testar, ver se resolve o seu problema!",
      "Cara tem um que estamos usando aqui chamado Taiga, ele é open-source e já vem com o docker-compose pra você subir ele facilmente.",
      "desculpe se eh estiver viajando, mas o obsidian não seria útil nesse caso?",
      "É uma alternativa,  mas queria algo mais específico. Ja usei muito obsidian mas hoje uso outra ferramenta para organizar minhas notas."
    ],
    "summary": {
      "summary": "O artigo busca recomendações de ferramentas de gerenciamento de projetos, estilo Jira, para um desenvolvedor individual, que seja menos complexa. O autor busca funcionalidades como cadastro de épicos, histórias, controle de backlog e sprints, mas sem a complexidade do Jira. Os comentários sugerem diversas alternativas, incluindo o uso do GitHub Projects, que é visto como prático e integrado ao repositório, além do Linear app, que é mais minimalista. Alguns sugerem soluções mais rudimentares, como arquivos de texto e scripts simples. Outros mencionam o Notion, Taiga e Obsidian como ferramentas que poderiam ser adaptadas para essa finalidade. O autor do artigo mencionou ter utilizado o Super Productivity como ferramenta adequada.",
      "keywords": [
        "gerenciamento de projetos",
        "ferramentas para dev",
        "jira",
        "github projects",
        "kanban"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Projeto de calculadora de calorias em Java",
    "link": "https://www.tabnews.com.br/NicolasFielP/projeto-de-calculadora-de-calorias-em-java",
    "content": "Estou começando a aprender Java e decidi cuidar  melhor de mim mesmo começando pela alimentação.\nComecei a assistir alguns vídeos sobre alimentação e vi que os cálculos de gasto calórico são meio chatos de se fazer, então, decidi Unir o útil ao agradável e melhorar as minhas habilidades em Java.\nFiz uma calculadora, que pede seus dados e faz a conta sozinho pra você, isso foi acompanhado com uma amiga que é estudante de nutrição. Claro, é sempre melhor procurar um profissional, mas o programa ajudaria a ter um norte e ainda me ajuda a melhor minhas capacidades de programação, já que sou iniciante\nO código é esse:\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        // Pegando dados básicos\n        System.out.print(\"Digite seu nome: \");\n        String nome = scanner.nextLine();\n        System.out.print(\"Digite seu peso (kg): \");\n        double peso = scanner.nextDouble();\n        System.out.print(\"Digite sua altura (cm): \");\n        int altura = scanner.nextInt();\n        System.out.print(\"Digite sua idade: \");\n        int idade = scanner.nextInt();\n\n        scanner.nextLine(); // Limpa buffer\n        System.out.print(\"Digite seu sexo (M/F): \");\n        String sexo = scanner.nextLine().toUpperCase();\n\n        while (!sexo.equals(\"F\") && !sexo.equals(\"M\")) {\n            System.out.print(\"Sexo inválido! Digite novamente (M/F): \");\n            sexo = scanner.nextLine().toUpperCase();\n        }\n\n        // Definição do fator atividade\n        double fatorAtividade;\n        while (true) {\n            System.out.println(\"Você se considera: \" +\n                    \"\\n1 - Pouco Ativo \" +\n                    \"\\n2 - Moderadamente Ativo \" +\n                    \"\\n3 - Muito Ativo\");\n            int atividade = scanner.nextInt();\n\n            switch (atividade) {\n                case 1:\n                    fatorAtividade = 1.3;\n                    break;\n                case 2:\n                    fatorAtividade = 1.5;\n                    break;\n                case 3:\n                    fatorAtividade = 1.7;\n                    break;\n                default:\n                    System.out.println(\"Opção inválida! Digite novamente.\");\n                    continue;\n            }\n            break;\n        }\n\n\n        // Cálculo da Taxa Metabólica Basal (TMB)\n        double taxaMetabolicaBasal = (sexo.equals(\"M\")) ?\n                (13.75 * peso) + (5 * altura) - (6.75 * idade) + 66.5 :\n                (9.56 * peso) + (1.85 * altura) - (4.68 * idade) + 65.71;\n\n        // Cálculo do Gasto Energético Total (TMT)\n        double taxaMetabolicaTotal = taxaMetabolicaBasal * fatorAtividade;\n\n        // Déficit ou superávit\n        System.out.print(\"Digite o valor da diferença de calorias que você quer ter (negativo para superávit): \");\n        int defictKcal = scanner.nextInt();\n        int kcalTotais = (int) (taxaMetabolicaTotal - defictKcal);\n\n        // Cálculo de macronutrientes\n        double gramaProteinas = 2 * peso;\n        double gramaLipideos = 1 * peso;\n        double kcalProteinas = gramaProteinas * 4;\n        double kcalLipideos = gramaLipideos * 9;\n        double kcalCarboidratos = kcalTotais - (kcalProteinas + kcalLipideos);\n        double gramaCarboidratos = kcalCarboidratos / 4;\n\n        // Exibição dos resultados\n        System.out.println(\"\\n---- Ficha Técnica ----\\n\");\n        System.out.println(\"Nome: \" + nome);\n        System.out.println(\"Idade: \" + idade + \" anos\");\n        System.out.println(\"Altura: \" + altura + \" cm\");\n        System.out.println(\"Peso atual: \" + peso + \" kg\\n\");\n\n        System.out.printf(\"Taxa Metabólica Basal (TMB): %.0f kcal\\n\", taxaMetabolicaBasal);\n        System.out.printf(\"Gasto Total de Calorias (TMT): %.0f kcal\\n\\n\", taxaMetabolicaTotal);\n\n        System.out.println(\"Com o déficit de \" + defictKcal + \" kcal, você precisará comer:\");\n        System.out.println(kcalTotais + \" kcal no total, sendo dessas:\");\n        System.out.printf(\"%.0f kcal de proteínas (%.0f g)\\n\", kcalProteinas, gramaProteinas);\n        System.out.printf(\"%.0f kcal de lipídeos (%.0f g)\\n\", kcalLipideos, gramaLipideos);\n        System.out.printf(\"%.0f kcal de carboidratos (%.0f g)\\n\", kcalCarboidratos, gramaCarboidratos);\n\n        scanner.close();\n    }\n}\n\nSou iniciante e queria sugestões de como melhorar o código ou qualquer outra ideia, se puderem me ajudar eu agradecia.\nObrigado por ler até aqui :D",
    "comments": [
      "Olhei muito por cima e não sou programador de Java no dia-a-dia, mas posso dizer que está acima da média de quem está iniciando e não tem muitas coisas para melhorar neste exemplo. E o mais legal é que está fazendo o certo, começando pelo começo, tem gente que acha que vai aprender programar de verdade já fazendo algo complexo.\nEntendo que os comentários são para efeitos didáticos, mas eles não são úteis de fato em código real, comente a fonte de onde achou a fórmula em vez de dizer algo que o nome da variável já diz. Comentários em código real devem dizer o porquê e não o que faz, o código bem feito já diz o que faz. Em alguns casos para ficar mais descritivo seria interessante criar uma função, mas acho exagero para este caso, acabaria complicando o código sem necessidade ou ganho expressivo, então toda regra depende de contexto, quem falar que nunca pode usar comentário só descritivo está errado. Esse é um aprendizado mais importante que muita coisa que fará em código.\nPor que misturou println() com printf()? Não tem nada errado, mas o segundo costuma ser mais eficiente (este caso tão simples nem sei se realmente é, não conheço as otimizações que o Java faz), então porque não usar?\nOutro ponto que poderia deixar mais eficiente, embora pouco importa para este exemplo, é só para aprender para o futuro, fazer um toUpperCase() é ineficiente, você pode comparar o texto ignorando a sensibilidade de caixa (case sensitive). Consegue pessquisar e ver como melhorar isso?\nEm vez do switch poderia usar só matemática para chegar no fator necessário, resolver em uma linha. Ainda precisaria de um if para lidar com opção inválida.\nEste trecho tem um duplicação de código, não é o fim do mundo, mas dá para fazer melhor. Consegue? Veja o outro while, você fez melhor.\n    String sexo = scanner.nextLine().toUpperCase();\n\n    while (!sexo.equals(\"F\") && !sexo.equals(\"M\")) {\n        System.out.print(\"Sexo inválido! Digite novamente (M/F): \");\n        sexo = scanner.nextLine().toUpperCase();\n    }\n\nPode ser preciosismo, mas em sistema real todas as njtradas de dados deveriam ser validadas. Pense nisso como uma melhoria para melhorar os reuisitos, algo que pode ser mais importante que codificar.\nVocê sabe que os parênteses não são necessários na multiplicação? Não estou falando para tirar, mesmo sendo redundantes, deixa mais legível mesmo.\nVocê entende que double não trabalha com números exatos? Este caso eu acho que números exatos não são necessários, então está tudo bem, e números exatos em Java são ineficientes demais, então até que alguma versão mude isso, o ideal é só usar quando realmente é necessário.\nJá fez um teste digitando absurdos como entrada? Letras, valores muito grandes, negativos, só dar enter, etc.?\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Obrigado pelo feedback!!\nvou melhorar o código e quando terminar eu vou fazer outro post, obrigado",
      "Java é uma boa escolha, porque é o novo Cobol. Tem vaga em todo lugar, e por muito tempo ainda. Continua codando, não para.\nSe me permite uma sugestão, quebra a função main em funções menores, e cria um record com os dados básicos. Um código estruturado em pequenos blocos fica mais legível (não sempre, mas ajuda).\nTrabalhei anos com Java. Aí passei a fazer os testes em Groovy e quando voltava pro Java o System.out começou a sobrar. Depois de algum tempo acabei criando uma helper e dupliquei os métodos print, println e printf como estáticos para usar com static-import. Mesmo usando soh logger, as vezes precisava do print. Pra digitar a IDE até ajuda com autocomplete, mas ficar vendo esse System.out me incomoda bastante até hoje. Que coisa mal projetada da linguagem..."
    ],
    "summary": {
      "summary": "O autor do artigo compartilhou um projeto de calculadora de calorias desenvolvido em Java, com o objetivo de praticar a linguagem e auxiliar no controle da alimentação. Os comentários foram em sua maioria positivos e construtivos. Os usuários destacaram a qualidade do código para um iniciante, oferecendo sugestões de melhorias, como a remoção de comentários descritivos em prol de comentários sobre a fonte das fórmulas, o uso consistente do printf(), a comparação de strings ignorando a sensibilidade de caixa, a simplificação do switch case e a eliminação da duplicação de código. Alguns usuários sugeriram dividir a função main em funções menores e criar um registro com os dados básicos para melhor organização. Outro ponto levantado foi a importância de validar todas as entradas de dados para evitar erros. Além disso, foi mencionado que Java é uma boa escolha devido à sua demanda no mercado de trabalho.",
      "keywords": [
        "calculadora de calorias",
        "java",
        "programação",
        "feedback",
        "código",
        "otimização",
        "nutrição"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Onde começa o trabalho de um formatter e onde começa o trabalho de um linter?",
    "link": "https://www.tabnews.com.br/salinas/onde-comeca-o-trabalho-de-um-formatter-e-onde-comeca-o-trabalho-de-um-linter",
    "content": "Recentemente me peguei fazendo essa pergunta do título...\nO que consolidei foi: linters são responsáveis por garantir a qualidade do código, enquanto formatters lidam com regras de estilo. Estaria essa afirmação correta?\nVou compartilhar abaixo um pouco da minha perspectiva:\nO que é o Formatter?\nQuando falamos de \"regras de estilo\" de um formatter, estamos falando sobre como o código vai se apresentar. Por exemplo, você pode configurar seu formatter (no nosso caso, o Prettier) para utilizar aspas simples (') ao invés de aspas duplas (\"), ou até para não usar ponto e vírgula (;) ao final de cada linha. Até mesmo a quantidade de espaços para indentação pode ser configurada.\nPor exemplo, se você configurar o Prettier para usar aspas simples, o seguinte código:\nconsole.log(\"Hello world from Verse!\")\n\nassim que o comando de formatação for executado, seja através da CLI ou por uma action do seu editor, o trecho será transformado automaticamente em:\nconsole.log('Hello world from Verse!')\n\nOu seja, o formatter recebe um código e o formata de acordo com as regras que você configurou. Ele \"cospe\" um código formatado.\nEm outras palavras, o formatter faz o trabalho sem questionar, apenas executa. E é por isso que ele tende a ser mais rápido, pois segue um conjunto de regras e as aplica diretamente.\n\nO que é o Linter?\nAgora, do outro lado, temos o linter, que se preocupa com a qualidade do código. O linter é um pouco mais \"esperto\", porque não apenas aplica regras, mas também faz uma análise do código para garantir que ele esteja seguindo boas práticas e padrões de qualidade que foram determinados.\nPor exemplo, podemos configurar o ESLint para nos alertar quando um código está utilizando uma tag <img> sem a propriedade alt:\n<img src=\"salinas.jpg\" />\n\nO ESLint pode gerar um erro ou aviso, indicando que a tag <img> deveria ter um texto alternativo:\n<img src=\"salinas.jpg\" alt=\"um cara bonito!\" />\n\nO linter é bem flexível, permitindo adicionar regras customizadas e até instalar plugins que adicionam mais verificações.\n\nEstou aberto a outras visões e contribuições. Meu objetivo é compartihar conhecimento e aprender com vocês!\nAlém disso criei uma PR aplicando essa abordagem no projeto, em que venho trabalhando.\nAqui está o link caso alguém também tenha interesse:\n\nLink da PR separando as responsabilidades: https://github.com/eoSalinas/verse/pull/38\n",
    "comments": [
      "Formatar o código possibilita que ele seja editado em qualquer editor que siga o mesmo, para não criar inconsistências que induz ao erro na sua edição e o fazer o processo de lint, ajuda a manter boas práticas de discussões que comunidades e equipes já tiveram para poder se focar em alcançar objetivos em comum na minha visão.\nMas o que pensei é apenas um complemento ao que você pensou, gostei do texto e esse tipo de discussão é importante mesmo.",
      "Show! Gostei da sua visão, faz sentido.\nValeu pelo feedback."
    ],
    "summary": {
      "summary": "O artigo discute a diferença entre formatadores de código (como Prettier) e linters (como ESLint). Formatadores focam em regras de estilo, como uso de aspas ou indentação, aplicando-as sem questionar. Linters, por outro lado, analisam o código, buscando por boas práticas e padrões de qualidade, alertando sobre problemas como tags `<img>` sem `alt`. A discussão é um esforço para esclarecer os papéis de cada ferramenta no desenvolvimento de software. Os comentários concordam com a distinção apresentada e adicionam que a formatação facilita a edição do código em diferentes editores, enquanto o lint auxilia a manter boas práticas.",
      "keywords": [
        "formatter",
        "linter",
        "código",
        "estilo",
        "qualidade",
        "regras",
        "análise"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "[Dúvida] Como posso gerar um pdf mais rápido usando php?",
    "link": "https://www.tabnews.com.br/Wata/duvida-como-posso-gerar-um-pdf-mais-rapido-usando-php",
    "content": "Problema: Estou trabalhando em uma aplicação Laravel que utiliza o MPDF para gerar relatórios em PDF. O banco de dados MySQL contém atualmente 9875 registros, e o objetivo é gerar um PDF com esses dados. Embora eu consiga gerar o PDF, o processo está extremamente lento, o que afeta a experiência do usuário.\nDesafios: A principal dificuldade que estou enfrentando é melhorar o desempenho na hora de gerar o PDF. O tempo de execução aumenta significativamente à medida que o número de registros cresce, e com a tendência de o banco de dados crescer ainda mais no futuro, a situação pode piorar.\nO que já fiz:\nUtilizei o MPDF para converter o HTML em PDF com sucesso, mas o processo se torna ineficiente quando há muitos registros para processar.\nTentei algumas abordagens básicas para melhorar a performance, mas ainda não obtive o resultado esperado.\nObjetivo: Gostaria de saber se alguém tem alguma sugestão ou estratégia para otimizar a geração de PDFs em uma situação como essa. Busco formas de reduzir o tempo de processamento, principalmente considerando que o banco de dados tende a crescer ao longo do tempo, aumentando a quantidade de registros a serem processados.\nPossíveis estratégias que estou considerando:\nPaginação dos dados (processar em lotes pequenos ao invés de carregar todos os registros de uma vez).\nUtilização de cache ou geração em segundo plano.\nQualquer outra tática de otimização, seja para a consulta SQL, para a geração do HTML ou para o processo de renderização do PDF no MPDF.",
    "comments": [
      "Primeiro passo é você tentar fazer um profiling do seu codigo, ver em quais pontos está demorando.\nPode fazer usando alguma ferramenta de profiling, ou simplesmente marcando o tempo de execução em cada \"passo\" do seu código.\nVeja se você está fazendo muitas queries ao banco, e se é possível unificar algumas dessas queries.\nQuando estamos desenvolvendo não nos importamos com queries \"demoradas\" de 50ms. só que em produção as vezes essas queries se repetem dezenas de vezes, e ja viram alguns segundos.\nAs vezes o gargalo não tem nada a ver com a geração de PDF em si, mas sim com as suas queries, ou algum pedaço do código que está mal otimizado.",
      "Pode ser que seja algum problema na consulta, verifique os custos das consultas.\nMas de qualquer forma, por que você não faz isso em um processo a parte usando filas ou estratégia similar? Depois de gerados os arquivos, você notifica o usuário ou manda por e-mail.\nFazer isso diretamente na requisição do usuário é loucura, vai acabar com o desempenho do sistema.",
      "Tive um problema semelhante, mas com geração de xlsx.. A forma que resolvi foi passar o processamento para um Lambda Function da AWS, funcionou super bem.",
      "As vezes ta esquecendo do basico: (ja estive la muitas vezes) indices!?!",
      "Antes de poder te ajudar nos conte mais sobre como está estruturado o código, quanto tempo está demorando para retornar os dados, tratá-los, gerar somente o PDF, ...\nNos forneça mais informações.",
      "Processe a geração de relatórios em segundo plano com queue jobs do Laravel, funciona super bem e não é difícil de programar.\nEm questão de banco, eu prefiro PostgreSQL, é mais rápido, lida melhor com quantidades absurdas de registros e super confiável. Trabalho com suporte de  um erp desktop que utiliza e pode atestar que é o melhor banco relacional open-source. Antes que me cancelem aqui (banco é um assunto com muitos fanboys), MySQL é largamente utilizado, até mesmo em grandes projetos, já utilizei muito, mas hoje sempre opto pelo Postgres. Somente essa consideração em relação ao banco, pois, querendo ou não, ele interfere no tempo.\nJogue o relatório para uma queue job e depois notifique o usuário para baixar."
    ],
    "summary": {
      "summary": "A discussão aborda a lentidão na geração de PDFs em uma aplicação Laravel, utilizando MPDF, com um banco de dados de quase 10 mil registros. Os usuários sugerem otimizar o código com profiling, verificar consultas SQL, usar filas para processamento em segundo plano, e considerar a migração para PostgreSQL. Outras sugestões incluem o uso de índices no banco de dados, processamento em lotes, e a avaliação da necessidade de mais informações sobre a estrutura do código para um auxílio mais preciso. A maioria concorda que gerar PDFs diretamente na requisição do usuário é uma má prática.",
      "keywords": [
        "PHP",
        "PDF",
        "MPDF",
        "Laravel",
        "otimização",
        "banco de dados",
        "performance"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "A Negligência da Matemática na Programação: Uma Crise Silenciosa na Era do 'Ctrl+C, Ctrl+V'",
    "link": "https://www.tabnews.com.br/HerbertGeorgeWells/a-negligencia-da-matematica-na-programacao-uma-crise-silenciosa-na-era-do-ctrlc-ctrlv",
    "content": "Antes de ler o texto saiba de duas coisas:\n1 - eu escrevi esse texto sozinho, porem pedi para a IA arrumar e formatar\n2 - eu relutei muito em publicar por que algumas pessoas são um pouco sensíveis, mas no final das contas é o que eu penso, e estou vendo. É a minha opinião sincera como um cientista da computação de fato.\nIntrodução:\nA programação moderna parece ter se tornado um campo obcecado por atalhos: frameworks que abstraem tudo, tutoriais de \"aprenda em 10 minutos\" e uma cultura que celebra a entrega rápida em detrimento da compreensão profunda. Enquanto isso, a matemática — alicerce histórico da ciência da computação — é tratada como um fóssil incômodo, algo a ser evitado por \"gênios do código\" que se orgulham de nunca ter aberto um livro de álgebra linear ou teoria dos grafos. Como programador, isso não só me incomoda: me assusta. Estamos criando uma geração de desenvolvedores que sabem como programar, mas não entendem por quê.\n\n1. A Ilusão da Abstração Total: Quando Ignorância Vira Moda\nFrameworks e bibliotecas modernas são maravilhosas, mas viraram uma muleta perigosa. O desenvolvedor médio hoje não precisa implementar um algoritmo de ordenação, entender complexidade assintótica (O(n)) ou sequer saber como uma matriz multidimensional é armazenada na memória. Basta instalar um pacote via npm ou pip. A mensagem subliminar é clara: \"Não se preocupe com o que está por trás\".\nO resultado? Programadores que não conseguem otimizar um loop simples, que escrevem código exponencialmente ineficiente para problemas triviais e que, diante de um bug, ficam reféns do Stack Overflow. A matemática ensina pensamento algorítmico, não apenas a sintaxe de uma linguagem. Sem ela, o código vira uma colcha de retalhos de soluções alheias, sem coerência ou propósito.\n\n2. O Culto ao \"Funciona na Minha Máquina\" e a Morte do Rigor Científico\nA ciência da computação nasceu da matemática. Alan Turing, Gödel e Von Neumann eram matemáticos, não \"influencers de tech\". Hoje, porém, muitos programadores tratam a disciplina como um mero exercício de lógica aplicada, ignorando que tudo em computação é modelagem matemática:\n\nEstruturas de dados? Grafos, árvores e hash tables são conceitos matemáticos.\nMachine Learning? Uma fachada sem álgebra linear e cálculo.\nCriptografia? Impossível sem teoria dos números.\nConcorrência? Exige entendimento de lógica formal e provas de correção.\n\nQuando negamos essa base, reduzimos a programação a uma atividade mecânica. O código pode até \"funcionar\", mas será frágil, inseguro e incapaz de evoluir. Pior: sem matemática, como avaliar por que algo funciona? A ausência de rigor abre espaço para vazamentos de memória, brechas de segurança e sistemas que desmoronam sob escala.\n\n3. Bootcamps e a Fábrica de Desenvolvedores de Superfície\nA explosão de bootcamps de programação — muitos dos quais prometem empregabilidade em 12 semanas — alimenta esse problema. Eles focam em ensinar React, Django ou Docker, mas raramente dedicam mais de uma aula a tópicos como álgebra booleana, indução matemática ou até mesmo complexidade de algoritmos. O aluno sai apto a criar um CRUD, mas incapaz de discernir entre O(n log n) e O(n²).\nIsso cria profissionais que dependem de ferramentas, não de conhecimento. Quando a stack muda (e muda sempre), eles ficam obsoletos. Matemática, por outro lado, é atemporal. Um bom entendimento de estatística ou otimização linear será relevante daqui a 30 anos, mesmo que Python seja substituído por outra linguagem.\n\n4. \"Mas Eu Não Preciso de Matemática Para Criar Apps!\" — O Engano do Praticismo\nO contra-argumento mais comum é: \"Grande parte dos projetos não exige matemática avançada\". Concordo. Você não precisa resolver equações diferenciais para desenvolver um blog. Mas e quando o problema exige?\nImagine um desenvolvedor front-end que não entende geometria coordenada, tentando criar animações complexas. Ou um engenheiro de dados que não domina probabilidade, construindo sistemas de recomendação enviesados. A matemática não é sobre usar fórmulas; é sobre desenvolver um mindset analítico. Ela treina o cérebro para decompor problemas, identificar padrões e provar que uma solução é correta — habilidades que transcendem linguagens de programação.\n\n5. O Preço da Ignorância: Inovação Estagnada e Dependência Tecnológica\nHá uma ironia trágica aqui: enquanto programadores ocidentais abandonam a matemática, países como China e Índia investem pesado no ensino de STEM (Ciência, Tecnologia, Engenharia e Matemática). Eles não estão produzindo apenas \"codificadores\", mas cientistas da computação. Enquanto isso, nós nos contentamos em ser usuários avançados de ferramentas criadas por outros.\nO futuro da tecnologia — quantum computing, algoritmos bioinspirados, IA generalista — será construído por quem domina matemática, não por quem decora sintaxe de JavaScript. Se continuarmos negligenciando a base teórica, nos tornaremos meros operários digitais, dependentes de soluções terceirizadas e incapazes de inovar.\n\nConclusão: Reabilitando a Ciência na Computação\nA programação não é um fim, mas um meio. Reduzi-la a \"escrever código\" é como confundir literatura com digitação. Precisamos resgatar a essência científica da computação:\n\nEducação: Cursos de programação devem integrar matemática de forma prática (ex.: ensinar matrizes através de gráficos 3D).\nContratação: Empresas precisam valorizar candidatos com sólida base teórica, não apenas experiência em frameworks.\nCultura técnica: Debates sobre otimização, provas de algoritmo e eficiência devem ser tão comuns quanto discussões sobre qual biblioteca usar.\n\nComo disse Edsger Dijkstra: \"A Ciência da Computação é tão sobre computadores quanto a astronomia é sobre telescópios\". Se queremos ser mais do que operadores de ferramentas, é hora de reabrir os livros de matemática — antes que a computação se torne um campo de técnicos, não de pensadores.\nAos que dizem \"matemática é difícil\": sim, é. Mas programação também era difícil antes de você aprender. A diferença é que a matemática não é um obstáculo — é a bússola. Ignorá-la é navegar em mar aberto sem mapa. E no mar da computação, quem não sabe para onde vai, qualquer porto basta — mas nenhum será verdadeiramente seu.",
    "comments": [
      "Muito bom!\nComplementando, seguem algumas discussões anteriores sobre o assunto:\n\nhttps://www.tabnews.com.br/kht/c0f67409-f988-41f6-90c2-b65033f629a5\nhttps://www.tabnews.com.br/gabrielTapes/por-que-a-matematica-e-essencial-para-a-programacao\nhttps://www.tabnews.com.br/KitsuneSemCalda/rant-porque-matematica-e-essencial-na-computacao\nhttps://www.tabnews.com.br/CafeDeTerno/matematica-na-programacao\nhttps://www.tabnews.com.br/DDantas/matematica-na-programacao\nhttps://www.tabnews.com.br/Cafematica/porque-acredito-que-programacao-e-matematica-se-complementam\nhttps://www.tabnews.com.br/KitsuneSemCalda/a-matematica-alem-das-formulas-testando-com-linguagem-formal\nhttps://www.tabnews.com.br/KitsuneSemCalda/matematica-finalizando-com-grafos-fungos-e-logistica\nhttps://www.tabnews.com.br/kht/65b9c052-b3f7-495c-b788-5499e87d209a\n\nAcho que o principal problema é a percepção que as pessoas têm com relação à matemática, sintetizada no começo do primeiro link acima:\n\nO problema é que quando dizemos \"matemática\", muita gente associa com aquilo que vemos na escola: decorar fórmulas e sair fazendo contas - infelizmente, muitas vezes sem entender pra que serve. Na minha opinião é essa forma equivocada de ensino que fez com que gerações inteiras odiassem matemática, e achem até hoje que é inútil.\nSe for esse o caso, então realmente vc não vai usar o que só viu - e decorou - na escola. Mas matemática é algo que vai muito além. Entre outras coisas, ela é uma ferramenta para resolver problemas através da criação de abstrações, e no fundo é isso que fazemos o tempo todo ao programar.\nPara criar um programa qualquer, pegamos entidades do mundo real e tentamos encaixar nas estruturas e mecanismos que as linguagens nos dão (arrays, classes, funções, etc). Traduzimos algo concreto para uma representação abstrata, e a matemática te dá a capacidade de fazer isso. O problema é que esse ganho é indireto e geralmente demora para ser percebido (em parte, é um dos motivos de muita gente achar que não precisa, ou que \"agora não estou usando\").\n\nOu, como já comentei no segundo link acima, sem matemática não teríamos computação:\n\nMuitos dos conceitos que a gente usa no dia a dia vieram diretamente da matemática. Funções, por exemplo, seguem basicamente a mesma ideia: recebe dados, faz algo com eles (seguindo determinadas regras) e retorna um resultado. SQL veio diretamente da Álgebra Relacional. Programação funcional é basicamente uma implementação do Lambda Calculus (\"Daí que vem o lambda que muitas linguagens tem?\" - De certa forma, sim) - e por aí vai, muita coisa que a gente usa nada mais é que um conceito matemático adaptado para ser usado em programação.\n\nMesmo que vc não vá precisar diretamente, conhecer os conceitos matemáticos te ajuda indiretamente. O caso mais comum é o de reconhecer padrões: perceber que determinada situação se encaixa em problema específico que já tem solução - ou seja, vc não perde tempo reinventando a roda, mas pra perceber isso vc precisa pelo menos saber que aquilo existe (e se vc não estudou matemática, não vai nem saber o nome daquilo para procurar a resposta). E a matemática te dá a capacidade de abstração, que é essencial para reconhecer que duas situações aparentemente diferentes são na verdade o mesmo problema - e quantas gambiarras seriam evitadas se mais gente tivesse esta capacidade...\nTambém falo disso nos links acima. Por exemplo, saber que o repositório do Git é um grafo me ajudou a entender melhor como ele funciona e o que cada comando faz (já que todo comando basicamente consulta e/ou manipula o grafo). Antes eu tinha dificuldade de montar um modelo mental do repositório e do que acontecia quando eu fazia commit, merge, rebase, etc. Depois que vi este site explicando que no fundo é um grafo, tudo passou a fazer mais sentido. Mas se vc não souber nem o que é um grafo, não vai adiantar nada ler.\nOu seja, pelo menos saber que determinado conceito existe e ter uma noção básica do que é me ajudou com algo que uso diariamente. Eu até entendo a revolta dos alunos na aula de grafos (ainda ensinam na faculdade, né?), ao não perceber porque aquilo é útil. O que eu não entendo é porque o professor não diz: \"Olha, isso aqui é usado para fazer o Git, o GPS e as redes sociais\" - pronto, já aumentaria o interesse da turma, ou não?",
      "Me deu uma vontade enorme de positivar só pelo começo (antes até de começar o assunto), já vi que vem coisa boa. Mas só vou fazer quando terminar. Eu vou escrevendo conforme vou lendo.\nE claro que entrando no texto propriamente dito o dedo começou coçar mais, mas eu sei que tem gente que decepciona mesmo começando bem :)\nEu tenho a impressão que não é nem caso das pessoas saberem o como. Não é exatamente uma discordância, mas boa parte nem isso tem acontecido, sabem programar, geram um código que traz algum resultado, mas não têm ideia do que está fazendo, nem se está certo, só que deu o resultado. Depois você tem o grupo dos que sabem como, mas não o porquê.\nO texto é ponderado até onde vi e entende o problema.\nAs pessoas não estão sabendo escolher que pacotes instalar ou que códigos prontos usar para ser o adequado. O que muitas vezes ainda atenderá a demanda, mesmo que seja uma porcaria em pelo menos algum vetor que possamos analisar.\nA matemática ensina a pensar. Já poderia parar aí, mas ela realmente ensina de formas específicas. Eu não sei se a escola está ensinando matemática, desde cedo. Eu não culpo totalmente os alunos.\nConsegue imaginar quando (ontem) as pessoas deixarem de serem reféns do SO e passarem ser da IA, como será? Só piora.\nOuvindo influencers estão se desviando de coisas muito mais básicas do que foi citado. Tem gente que não sabe fazer porcentagem, ou não consegue raciocinar o algoritmo, sem falar que não entende os mecanismos básicos da linguagem de programação, só faz o ^C^V. Eu dei aula e tinha alunos que não conseguiram fazer um exercício na prova que em vez de só incrementar 1 tinha que incrementar 2. Eles não entendem a relação dos números. Mas não importam tá cheio de gente nas redes sociais falando que programação é fácil e tem vaga sobrando (o que é verdade, mas esquecem de falar o que precisa dominar para pegar essas vagas).\nNão lembro quantas vezes alguém postava um código com SQL Injection no SO, você responde arrumando isso, explica, logo depois ele pergunta algo novo do mesmo código e não corrigiu a vulnerabilidade. Ou quando alguém respondia sem consertar, sem fazer alerta e brigava porque a pergunta não falava isso, o que fere a filosofia do site de ser um repositório de bons códigos e práticas, não para apenas consertar o erro do cara. Então é pior, tem que pôr a teimosia como boa parte do problema.\nEu não fico só na superficialidade de quase todos os cursos vendidos por aí, ou mesmo os gratuitos. Nem vou falar de quanto as pessoas compram esses cursos e nem fazem. Tem dados mostrando que o índice de abandono dos cursos é algo quase inacreditável, e a maioria são cursos muito curtos. Então o curso nem precisa ser bom, tem que ser só bem vendido, porque quase ninguém o fará de verdade. Alguns vão falar que é bom sem nem ter feito. O próprio CS50 que muita gente fala que assim você será bom programador, e de fato é um avanço perto de algumas coisas por aí, não é tudo isso, e sozinho não faz ninguém ser bom programador. A pessoa precisa mudar todo seu pensamento e forma de estudar.\nEu nem estou querendo falar de matemática avançada. Vamos arrumar o arroz com feijão primeiro, porque ele tá cru, não dá para fazer Beef Wellington. Não estou pensando nos cientistas, os engenheiros que farão a diferença, esses eu acho que só acontecerão se nasceu privilegiado de alguma forma. E tem gente de várias áreas que sustentam isso, não é da minha cabeça. Eu quero só ser bons programadores dos softwares simples que afetam a minha vida.\nParabéns pelo primoroso texto. Espero que esta página seja a virada de chave em algumas (ou muitas) pessoas.\nVou pedir pro kht por um link para um texto dele sobre matemática.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Ótima análise!\nEssa discussão toca num ponto essencial que poucos têm coragem de admitir: programação não é digitação glorificada.\nEstamos vivendo uma crise silenciosa onde a matemática, a base estrutural da computação, foi reduzida a um obstáculo opcional – e pior, tratada como um resquício acadêmico \"desnecessário\". O resultado? Um mercado repleto de desenvolvedores que não sabem distinguir um problema NP-difícil de um bug de tipagem, que confundem \"otimização\" com \"rodar mais rápido na minha máquina\" e que escrevem código sem entender os princípios matemáticos que sustentam cada estrutura de dados e algoritmo que utilizam.\nA questão aqui não é elitismo acadêmico ou purismo matemático. É um problema estrutural: quem não entende matemática, inevitavelmente se torna um refém da abstração alheia. E o que acontece quando essa abstração falha? Pânico, Stack Overflow e tentativa e erro até \"funcionar\". Isso não é engenharia, isso é gambiarra glorificada.\nQuer um exemplo prático? Machine Learning está por toda parte, mas quantos dos entusiastas de IA conseguem explicar o que é um espaço vetorial? Ou como funciona uma decomposição em valores singulares (SVD)? Sem isso, estão apenas chamando APIs, torcendo para o modelo cuspir algo útil. O mesmo vale para otimização de banco de dados, eficiência de código e até mesmo algo trivial como física em jogos.\nA desculpa do \"mas eu só faço CRUDs\" só vai te manter empregado até o dia que uma nova tecnologia substituir sua stack.\nFrameworks vêm e vão. A matemática permanece.\nSe programar é seu fim, ok, continue decorando frameworks. Mas se seu objetivo é realmente entender computação, então pare de evitar a matemática e abrace-a. Porque no fim do dia, a diferença entre um desenvolvedor medíocre e um engenheiro de verdade é a profundidade do conhecimento que carrega.\n\nÓtima reflexão! Você acertou ao expor como a falta de matemática enfraquece a programação.\nSem essa base, formamos mais operadores de frameworks do que pensadores de verdade.\n",
      "É bem complicado esse tema, mas também não é\nOutro dia vi uma discussão no twitter a respeito de escrever codigo no papel. Citei que Deijkstra usava papel para \"programar\" e que afirmava, já naquela epoca que usar o computador atrapalhava o raciocinio. Fui crucificado por 300 javascripters de 20 e poucos anos, e o unico argumento era \"não estamos mais em 1800\". Bom kkkk erraram até a data...\nAs pessoas, e digo as mais novas, não querem ter o minimo de trabalho necessario para nada! Estamos vendo uma geração inteira de, ou esquizofrenicos ou ego inflado. Tudo tem que ser rapido e facil, sem demora e servido de bandeija.",
      "Concordo com isso, só vou usar o termo mais próximo do correto, embora eu tenha entendido que usou jocosamente.\nA nova geração, e as antigas, por osmome, estão muito mimadas. Estão saturadas de exposição de muita informação, e geralmente que toma muita energia, estão mal preparadas para a vida, cheio de incertezas cada vez maiores, em parte por culpa do ambiente, estão usando modelos irreais para moldar sua vida, estão com crenças insustentáveis, seguindo quem só quer ganhar dinheiro em cima delas promentendo milagres, em função disso, estão muito ansiosas e desfocadas.\nE por isso estourou o diagnóstico de TDAH. Mas não, essas pessoas, de forma geral, não tem TDAH. E está cada vez mais difícil saber se é isso mesmo ou não, porque bebês já usam celular, jogos e pouco depois redes sociais, e a interação humana analógica cada dia menor. TDAH é um problema neurológico que a pessoa nasce assim e compromete muito a vida dela. Ela tem dificuldades cognitivas, mas se não estiver associado a outro problema não tem preguiça, muito pelo contrário, são obcecados. Ser aceleradinho e/ou distraidinho, são sintomas do TDAH, não a causa, e hoje em dia os sintomas estão presentes em pessoas só vivendo em um ambiente que o ser humano não foi preparado ao longo de séculos. E muito médico não sabe difereciar isso ou mesmo não é do interesse dele (não vou entrar em detalhes, até porque meu advogado proibiu).\nE não é fácil as pessoas sairem disso, é como droga, de fato, age igual, é sobre dopamina do mesmo jeito.",
      "A verdade é que o mercado que 'forçou' essa mudança... O mercado não quer pessoas que entendam complexidade assintótica (O(n)), o mercado quer o cara que consegue resolver problemas com as facilidades que já existem. E quando digo mercado estou me referindo a grande maioria dele. Eu gosto muito de baixo nível/matemática... Mas isso não vai me trazer um salário melhor. Então eu acabo estudando algoritmos e frameworks que irão me proporcionar a abstração necessária para resolver problemas",
      "Concordo totalmente com você. Acredito que a maior parte da culpa está justamente nas empresas que criam essa cultura que valoriza muito a prática e esquecem das bases daquilo. Na minha opinião ambos deveriam andar em conjunto e não existe um sem o outro.\nHoje estou no 7º termo de ciência da computação e vejo como esse tipo de cultura afeta a maneira que as pessoas enxergam essas coisas. Não canso de escutar pessoas reclamando que \"nunca\" vão precisar de alguns aprendizados que vemos lá. Principalmente em matérias como pesquisa e ordenação e estrutura de dados.\nAtualmente, o principal objetivo das pessoas que entram na área de programação é a busca pelo dinheiro fácil e na falsa promessa de consegui-lo em um curto espaço de tempo. Sempre dei muito valor nesses conhecimentos e busquei não ouvir as pessoas que acabam sendo alienadas por essas questões.\nRecentemente tive até uma conversa com um gestor que conheci na área de dados sobre isso, o que me impressionou foi a forma que ele abordou o assunto de uma forma totalmente diferente da que eu costumo ouvir. Tenho muito a vontade de fazer mestrado mas não tenho o objetivo de seguir a carreira acadêmica, o ponto é que, normalmente quando comento isso com as pessoas elas normalmente não são muito favoraveis a essa ideias, mas, esse gestor me disse totalmente o contrário. Ele também fez mestrado e apoiou totalmente a ideia, mostrando como isso afetou a carreira dele, mudou a maneira de enxergar as coisas e principalmente, de resolver problemas de maneira inteligente.\nMas a conclusão é que, fica evidente como o mercado brasileiro é um culpado dessa cultura que temos hoje, ele não valoriza e muitas vezes não sabe como utilizar esse conhecimento. Em contra partida, empresas fora do país dão um real valor nesses conhecimento e muitas vezes levam em consideração no momento da contratação. Não que lá fora não aconteça a mesma coisa, mas no Brasil esses conhecimentos não são nada valorizados e muitas vezes são considerados sem utilidade.",
      "Karalho, meu mano meteu a pill.\nGostei muito do texto acima, sou um programador estágiario/jr e estou sempre tentando aprender mais, fazendo alguns algoritimos no leetcode entre outras coisas, eu gostária de saber por onde eu começo a estudar Matématica para programar melhor, que livros eu busco oque eu devo praticar, eu não faço faculdade então tem meio que uma barreira sobre como começar e se eu estou começando pelo lugar certo.",
      "Acredito que 2 fatores influenciam a situação que a gente se encontra.\nVejo posts no LinkeDisney sobre a falta de profissionais capacitados em programação. Porém, qual o sentido de estudar DSA e calculo I, II e III em uma boa faculdade, se o mercado só pergunta se você tem experiencia com framework X?\nA demanda por um produto que precisa ser disponibilizado no menor tempo possível. A ideia de que o cliente não liga para o código implementado, sendo que o cliente se importa sim! Ninguém gosta de um aplicativo lento. Acabam criando programadores que se priorizam em entrega de qualquer jeito.\nO segundo fator vem em forma de vendedores de curso, onde só explicam o caminho feliz. Ou que te vendem o sonho de 5k de salário com 3 meses de programação. O pior é que ACONTECE, porque se o mercado precisa de alguém que sabe montar uma tela em um framework, isso da para aprender em 3 meses.",
      "É um dos motivos por termos um abismo salarial gigantesco entre os experientes e os que estão iniciando agora. Cada vez mais os iniciantes ganharão menos. Basta olhar aqui, quanta baboseira sendo lançada, com fracasso certo e com orgulho de dizer que \"criou em 5 dias\". Chego a ficar surpreso com algumas coisas que leio e que não pode ter vindo de alguém que estudou o cerne do desenvolvimento de softwares. Cada vez mais se esquecendo do que realmente importa.",
      "Concordo plenamente,\nSobre essa questão do investimento pesado em STEM (Ciência, Tecnologia, Engenharia e Matemática) deveria ser um plano nacional para países como o Brasil, coisa que a Índia ja iniciou a tempos. O que se vê nas graduações de tecnologia hoje em maioria são alunos atraídos por salários, porém sem paixão por entender e resolver problemas.",
      "Ótimo texto meu amigo, concordo plenamente com suas ponderações.",
      "Concordo contigo que matemática é importante na programação, ajuda a entender os conceitos fundamentais porque tudo provém da matemática: variáveis, constantes, funções, operadores, etc. Ao menos pro iniciante entender de onde vem esses conceitos.\nMas sou bem cétido de isso algum dia mudar, a coisa já se prostituiu de um jeito que não tem volta. As vagas hoje em dia são editais de concursos, nem a NASA tem tantos requisitos pra astronauta. O foco maior é nos frameworks e ferramentas, como se todo mundo usasse o mesmo tech-stack.\nPra piorar tem videos no YouTube pra ensinar como passar em entrevistas, como responder se perguntarem pra desenhar um back-end do Twitter ou Netflix. Vendem planos em sites que ensinam a resolver problemas que são aplicados em testes nas vagas, e os \"influencers\" vendendo cursos pros iniciantes conseguirem trampo. Criaram todo um esquema de concursado na contratação em TI que tá surreal."
    ],
    "summary": {
      "summary": "O artigo discute a negligência da matemática na programação moderna, argumentando que o foco excessivo em frameworks e soluções prontas tem levado a uma geração de desenvolvedores com pouca compreensão dos fundamentos teóricos. A discussão nos comentários concorda em geral com o autor,  reforçando a importância da matemática para um entendimento profundo da computação, e critica a cultura do mercado que prioriza a rapidez na entrega em detrimento da qualidade e da base teórica, e que muitos profissionais estão entrando na área buscando somente por dinheiro. Vários usuários ressaltam que a falta de base matemática leva à dependência de soluções prontas e à dificuldade em resolver problemas complexos, e que os cursos online focam mais nas tecnologias do que na matemática. Há também um debate sobre a necessidade de uma mudança cultural que valorize o conhecimento teórico e prático em conjunto, com alguns sugerindo que o sistema de ensino e o mercado de trabalho devem repensar sua postura. Há alguma discordância sobre a relação entre a dificuldade da matemática e a preguiça dos novos programadores, com alguns comentários indicando que essa geração foi moldada por uma cultura de gratificação instantânea.",
      "keywords": [
        "matemática",
        "programação",
        "abstração",
        "frameworks",
        "ciência da computação",
        "pensamento algorítmico",
        "mercado de trabalho"
      ],
      "controversy_level": "alto"
    }
  },
  {
    "title": "[TabNews] Mais de 2M de visitantes e 5M de visualizações em 2024 📊",
    "link": "https://www.tabnews.com.br/FelipeBarso/tabnews-mais-de-2m-de-visitantes-e-5m-de-visualizacoes-em-2024",
    "content": "Fala, Turma! Tudo certo?\nJaneiro já está acabando, mas o ano está apenas começando! Antes de planejarmos o que vem por aí, vamos dar uma olhada nos números do TabNews em 2024 e ver como a comunidade evoluiu em comparação aos anos anteriores.\nEm 2024, o TabNews recebeu 2,1 milhões de visitantes e teve 5,7 milhões de visualizações. Vamos ver o que mais aconteceu!\nResumo dos Dados\nIniciamos com um panorama da interação da comunidade e dos visitantes. Apesar de que visitar o TabNews também é uma forma de interação, para simplificar as análises, vamos considerar como \"usuários interagindo\" aqueles que criaram publicações, comentaram ou qualificaram conteúdos. Além deles, há os que estão visitando com sessão ativa, \"logados\". E todos esses se somam aos \"visitantes\", que é a audiência do TabNews. Mais detalhes sobre esses dados estão disponíveis em outros tópicos.\nUsuários Interagindo e Visitantes em cada mês de 2024\n\nA tabela abaixo mostra a evolução do número de usuários que interagiram ou apenas visitaram a plataforma ao longo dos anos.\nUsuários e Visitantes ao longo dos anos\nUsuários e Visitantes202220232024Apenas Qualificaram0324470Votaram e Criaram3,6k3,4k2,1kApenas Criaram2,5k4,8k3,0kCriaram Publicações2,5k3,8k2,4kCriaram Comentários5,5k7,3k4,5kTotal de Autores6,1k8,3k5,1kTotal Interagindo6,1k8,6k5,6kAutenticados (Logados)21k24k14kVisitantes (Audiência)**2,1M\n* Os dados de anos anteriores não estão disponíveis.\nUm destaque interessante: a audiência foi mais de 800 vezes maior que o número de usuários que criaram publicações em 2024. A proporção é semelhante entre o número de visualizações e o número de publicações criadas, como podemos ver abaixo.\nInterações e Visualizações\nTipo202220232024Publicações6,7k11k7,3kComentários28k45k26kQualificações36k48k62kVisualizações**5,7M\n* Os dados de visualizações dos anos anteriores não estão mais disponíveis, mas temos registrado que nos 8 primeiros meses a partir do lançamento, até julho de 2023, tivemos 6 milhões de visualizações.\nUsuários Cadastrados\nEm 2024, foram registrados 7.454 novos cadastros, dos quais 6.985 foram ativados, resultando em uma média de 582 novos cadastros ativados por mês. Ao final de 2024, o TabNews contava com 45.252 cadastros ativos.\nDentre esses usuários, 13.971 mantiveram-se logados em algum período do ano (acessando o site sem necessariamente interagir), enquanto 5.615 interagiram com conteúdos, seja criando ou qualificando. Na média mensal, tivemos 2.595 usuários logados e 1.038 interagindo.\nUsuários cadastrados ao longo dos anos\nA tabela abaixo mostra a evolução do número de usuários ao longo dos anos. Confira o significado de cada métrica logo abaixo.\nAnoAtivaçõesExclusõesTotal (acumulado)LogadosInteragindo202223k2123k21k6,1k202316k19339k24k8,6k20247k28345k14k5,6k\n\nAtivações: usuários que efetivaram o cadastro com a ativação da conta.\nExclusões: usuários que solicitaram a exclusão da conta ou foram banidos.\nTotal: acumulado de usuários com cadastro ativo.\nLogados: usuários que utilizaram o TabNews com sessão ativa.\nInteragindo: usuários que criaram e/ou qualificaram conteúdos.\n\nVisitantes/Dispositivos\nSegundo os dados da Vercel Analytics, o TabNews recebeu 2,1 milhões de visitantes em 2024. A maior parte da audiência, como esperado, vem de buscas e recomendações do Google. Confira como as fontes de tráfego e os dispositivos se distribuem:\n\nOrigem: 1,5 milhões* de visitantes chegaram através do Google (794k da Busca e 743k do Discover);\nDispositivos: 58% acessaram via dispositivos móveis (50% Android e 8% iOS), enquanto 42% utilizaram computadores (31% Windows, 6% GNU/Linux, 4% Mac e 1% Outros).\n\nNa média, tivemos 5,7k visitantes únicos diários, com picos superiores a 10k. Comparando com os dados de usuários logados mencionados anteriormente, é claro que a maioria dos visitantes não está logada, o que é esperado, já que a maior parte dos acessos vem de buscas e recomendações do Google.\nEm 2025, migramos da Vercel Analytics para a Umami, que oferece dados mais precisos sobre visitantes únicos. Isso deve melhorar nossa visão sobre a audiência ao longo do mês. Os dados preliminares de 2025 mostram que os visitantes únicos diários variam entre 4k e 6k, o que é consistente com os números da Vercel, especialmente considerando o período de férias, quando o tráfego costuma ser menor.\nIsso confirma que o TabNews possui uma base de visitantes fiéis que acessam com frequência, mas que a maior parcela é composta por visitantes esporádicos vindos de buscas e recomendações do Google.\n\nExpanda aqui para ver mais detalhes sobre visitantes\nEm 2024, utilizamos a Vercel Analytics, que contabiliza cada dispositivo como um visitante único por dia, mesmo que ele acesse o site várias vezes no mesmo dia. Porém, um mesmo visitante em dois dias diferentes é contado como dois visitantes. Assim, o total anual corresponde à soma dos visitantes únicos diários, mas não representa o número total de pessoas distintas ao longo do ano. Além disso, uma pessoa usando dispositivos diferentes no mesmo dia será contada mais de uma vez.\nEm 2025, migramos para a Umami, que permite identificar visitantes únicos ao longo de períodos maiores, reduzindo a duplicação de contagem presente na Vercel Analytics, que considera cada dia separadamente. A Umami estende a duração da sessão para um mês, utilizando uma combinação do endereço IP com o agente do usuário.\nIsso deve melhorar a precisão dos números de visitantes únicos por períodos que vão de um dia até um mês. Porém, um mesmo visitante em dois meses distintos ainda será contado como dois visitantes, e uma pessoa usando dois dispositivos diferentes no mesmo mês será contada duas vezes. Por outro lado, pessoas diferentes usando dispositivos parecidos no mesmo IP podem ser consideradas como um único visitante. Vale lembrar que esses números são estimativas estatísticas e não dados exatos.\nCom os dados preliminares da Umami em 2025, registramos cerca de 30k visitantes únicos em uma semana. Esse número tem se mantido estável, com três semanas registrando aproximadamente 90 mil visitantes únicos. Os dados da Umami estão alinhados com os números da Vercel, o que nos dá confiança de que o total de visitantes únicos ao longo do ano não deve ser muito diferente dos milhões registrados pela Vercel. 🎉\n\nVisualizações\nTivemos um total de 5,7 milhões de visualizações de páginas*, sendo:\n\n1,1M na página inicial (20% do total de visualizações*);\n0,6M em outras páginas, como cadastro, login e listas de conteúdos (exceto a Home);\n4,0M em publicações, comentários e perfis de usuários.\n\nEvolução ao longo dos meses\nOs meses com menos visualizações foram julho e dezembro, que ficaram em torno de 390k cada um. Esse menor volume pode ser explicado pelo período de férias, que costuma ter menos acessos. Algo semelhante ocorre semanalmente, com menos acessos nos finais de semana.\nJá os meses com mais visualizações foram setembro e outubro, que ficaram em torno de 650k visualizações cada. Esse maior fluxo ocorreu por um maior volume de recomendações do Google.\nOutros dados sobre as visualizações\n\nOrigem: 1,8 milhões de visualizações são de usuários que vieram através de algum serviço do Google;\nDispositivos: 50% ocorrem em dispositivos móveis (43% Android e 7% iOS) e 50% em computadores (36% Windows, 9% GNU/Linux, 5% Mac e 1% Outros).\n\nTOP5 conteúdos com mais visualizações em 2024\n\n40k @codecompanybrasil - Hacks no Joguinho do dinossauro\n20k @andrelinooficial - Como excluir um perfil do Windows através do Editor de registros REGEDIT\n20k @andrewmatheus - A dura realidade sobre a area de TI que ninguem te conta inclusive (cursos e faculdade)\n17k @tigocode - Formatando CNPJ ou CPF no EXCEL\n17k @marciosenaf - Melhores servidores do Discord de Programação PT-BR\n\n\nExpanda aqui para ver mais detalhes sobre visualizações\n* Por limitações no nosso plano antigo na Vercel Analytics, com um máximo de 500k eventos por mês, paramos de medir as visualizações da página inicial (a Home). Por isso, estamos usando um valor estimado, considerando que o volume da Home se manteve em cerca de 20% do volume total. A partir de 2025, com a Umami, voltamos a medir todas as visualizações, inclusive da Home, e isso sustenta a estimativa de 20%.\nNos dois meses com mais visualizações, ultrapassamos nosso limite de 500k eventos medidos na Vercel Analytics, mas há um atraso entre o momento em que o limite é atingido e o momento em que a Vercel interrompe a contagem, o que nos permitiu continuar medindo as visualizações até o final do mês. Por isso, os números não foram afetados, já que entramos em um novo período antes do bloqueio.\n\nBuscas no Google\nO Google disponibiliza o Search Console, ferramenta que nos dá dados estatísticos sobre como o TabNews aparece nos resultados de busca. Em 2024, tivemos:\n\nImpressões: 21,9M;\nCliques: 794k;\nCTR médio: 3,6%;\nPosição média: 17,6;\n\nConteúdo com mais impressões\nO conteúdo que mais apareceu nos resultados de buscas do Google teve 508k impressões, o que o fez ser também o mais clicado na busca, com 32k cliques, e também o mais visto do TabNews em 2024, com 40k visualizações. Somando outros serviços, o Google foi o responsável por 36k visualizações nesse conteúdo.\n\n@codecompanybrasil - Hacks no Joguinho do dinossauro\n\nOs termos que levaram para esse conteúdo foram diversos, mas a maioria continha combinações das palavras hack, jogo e dino/dinossauro com algumas outras palavras e/ou variações das mesmas.\nTermo com mais impressões\ndontpad foi o termo de busca em que o TabNews mais apareceu, com 486k impressões, mas resultando em apenas 145 cliques.\nTermos com mais cliques\ntabnews e tab news foram os termos que geraram mais cliques no Google, sendo 60k cliques em 84k impressões.\nDepois das variações de escrita de TabNews, mangachan foi o termo de busca que gerou mais cliques, sendo 3k cliques das 59k impressões.\nTop5 ConsultasCliquesImpressõesCTRPosiçãotabnews53k68k78%1,0tab news7,3k16k45%3,0mangachan3,3k59k5,7%3,0apagao 20242,2k39k5,7%8,9winget upgrade2,1k20k11%4,4\nDiscover/Recomendações do Google\nO Google Discover é uma ferramenta que recomenda conteúdos com base nos interesses dos usuários do Google (não necessariamente usuários do TabNews). As recomendações são feitas em feeds personalizados presentes em Apps do Google, como no navegador Chrome.\nAs estatísticas são disponibilizadas também no Google Search Console. Em 2024, tivemos:\n\nImpressões: 14,8M;\nCliques: 743k;\nCTR médio: 5%;\n\nMais clicado\nO conteúdo mais visualizado através do Discover teve 11k cliques em 118k recomendações. Ele teve mais 3k visualizações vindas da busca, somando 20k no total, incluindo as diretas, e por isso aparece também na lista de mais visualizados do ano:\n\n@andrewmatheus - A dura realidade sobre a area de TI que ninguem te conta inclusive (cursos e faculdade)\n\nMais recomendado\nO conteúdo mais recomendado pelo Discover teve 179k impressões que geraram 10k cliques. Ele teve mais 1k visualizações vindas da busca, somando 12k no total.\n\n@NewsletterOficial - Desenvolvedor realiza experimento de web scraping com GPT-4o e gasta 24 dólares em apenas dois dias\n\nConteúdos Criados\nTivemos um total de 33k conteúdos criados em 2024, sendo 7k publicações e 26k comentários.\nPublicações\nAs publicações (conteúdos root) foram feitas por 2.393 autores diferentes, mas o usuário NewsletterOficial (conta oficial da Newsletter do Filipe Deschamps) foi o autor de mais de 1/5 delas. Os autores que mais publicaram em 2024 foram:\nAutorPublicações% do TotalNewsletterOficial1.57321,62%Programmer404500,69%rafael480,66%moacirmoda450,62%gorpo85390,54%Wellington79390,54%luishjacinto370,51%welovetech370,51%JeielLimaMiranda320,44%vitorpereirasaas310,43%\nComentários\nOs comentários (respostas a publicações ou a outros comentários) foram feitos por 4.522 usuários diferentes. Os usuários que mais comentaram foram:\nUsuárioComentários% do TotalPilati4551,78%user13431,34%maniero3301,29%silvestrini3151,23%Wellington792901,13%gpoleszuk2801,10%devjonatas2741,07%welovetech2721,06%clacerda2370,93%rafael1910,75%\nConteúdos e autores ao longo dos anos\nA tabela abaixo apresenta uma visão geral do quantitativo de conteúdos criados ao longo dos anos.\nConteúdos por Ano\nAnoPublicaçõesComentáriosNão públicosAcumulado TotalPúblicos20226.71927.7702.66534.48931.129202310.63645.4017.05290.52680.29320247.27625.5573.482123.359110.074\nA tabela abaixo apresenta a quantidade de diferentes autores em cada ano por tipo de conteúdo, o total de autores no ano e o acumulado de diferentes autores ao longo dos anos.\nDiferentes Autores por Ano e Tipo de Conteúdo\nAnoPublicaram (root)ComentaramTotal de AutoresAcumulado20222.5455.5426.1226.12220233.8267.3048.26012.47120242.3934.5225.14515.462\nO total de autores considera qualquer tipo de conteúdo (publicações e comentários) em cada ano, e o acumulado considera desde o início do funcionamento do TabNews, em 2022, até o ano correspondente.\nQualificações (Votos)\nEm 2024, 2.587 usuários qualificaram conteúdos, sendo que 75% votaram apenas positivamente. No total foram 59.956 votos, sendo 81% positivos e 19% negativos. Em todos os dados, já estão sendo desconsiderados os votos cancelados por banimento de usuários.\nContagem de Usuários que Votam\nAnoApenas 👎👍 e 👎Apenas 👍Usuários Votantes2022160 (4%)745 (21%)2.680 (75%)3.5852023136 (4%)920 (25%)2.689 (72%)3.745202474 (3%)896 (35%)1.617 (63%)2.587\nContagem de Votos por Tipo\nAnoNegativos 👎Positivos 👍Total de VotosAcumulado20224k (12%)32k (88%)36k36k20238k (17%)38k (83%)46k82k202411k (19%)48k (81%)60k142k\nConclusão\nO Google continua sendo a principal fonte de tráfego do TabNews, responsável por 40% das visualizações e 75% dos usuários diários. No entanto, o verdadeiro alicerce da plataforma é a Turma que cria, comenta, qualifica conteúdos e colabora no desenvolvimento e moderação. É graças a essa comunidade incrível que o TabNews se tornou um cantinho tão especial na internet.\nQuanto ao número de usuários interagindo, 2024 não trouxe crescimento em relação aos dois anos anteriores. Na verdade, o pico ocorreu em 2023, reflexo da explosão de novos usuários no final de 2022, época do lançamento público. Nesse período, muitos curiosos vieram conhecer a plataforma e se cadastraram, mas nem todos estavam alinhados com os objetivos do TabNews ou interessados em participar ativamente.\nCom o passar do tempo, nossos mecanismos evoluíram, e quem não contribuía de forma saudável acabou se afastando. Assim como quem se cadastrou, mas nunca interagiu, deixou de permanecer logado. Além disso, muitos usuários perceberam que não é necessário estar logado para usufruir dos conteúdos.\nPor outro lado, a Turma está sempre aberta a acolher novos integrantes e pronta para ajudar quem está começando a explorar a plataforma. Agora, com o efeito do lançamento já distante, será interessante acompanhar 2025 para entender como a comunidade continuará evoluindo.\nAgradecemos a todos que contribuíram com o TabNews em 2024 e esperamos que 2025 seja um ano ainda mais incrível para todos nós! 🚀\nE você, o que espera de 2025? Que outros dados gostaria de ver? Deixe seu comentário e vamos juntos construir um TabNews cada vez melhor!\nP.S.: Acham interessante compartilharmos como esses dados foram coletados do banco de dados? Podemos preparar um conteúdo sobre isso! 🤝",
    "comments": [
      "Mais algumas curiosidades envolvendo votos em 2024:\nUsuários melhores avaliados\nAqui é uma soma dos votos positivos subtraindo os votos negativos recebidos. Além disso, desconsiderei os votos desfeitos (um usuário banido tem os votos recentes desfeitos).\nUsuárioSaldoNewsletterOficial1834rafael1227kht727maniero647clacerda587filipedeschamps537user1475Pilati457KitsuneSemCalda372FelipeBarso354\nPublicações melhores avaliadas\nAutorPublicaçãoDataSaldoMailsonTo Aqui. Encontrar pessoas nos abrigos do Rio Grande do Sul06/05/2024172filipericardoAgora é possível usar seus TabCash18/07/2024138AlessandroIvosO que eu percebi...21/10/2024121manieroFAQ do programador perdidão06/02/202499wellwelwelNão é Pitch, é Comemoração 🎉23/07/202497andreeliasdevFaturei 50k com meu produto para surpreender minha namorada05/09/202490KinarkComo o lo.cafe, o NotchNook e os projetos pessoais salvaram minha vida18/07/202482caiquearaujoCPF/CNPJ: estudo de performance em banco de dados, devemos armazenar um inteiro mesmo?27/10/202474yunger📚 Criando uma API open-source para questões do ENEM19/08/202473trilhainfoRinha de Desenvolvedor18/11/202472\nComentários melhores avaliados\nAutorComentárioDataSaldofilipedeschampsQUE MASSAAAAAA!!! 🎉 🎉 🎉 filipericardo parabéns meu caro, com esta s...18/07/202439matheusefagundesOlá! Apesar de ler os posts do TabNews vez ou outra, essa é a primeira...27/11/202431khtJá disse em outros posts, mas não custa repetir: mesmo que vc ache que...16/06/202427manieroContinuando... Ninguém consegue arrumar algo decente rápido? Não...06/02/202421khtMuito bom! Este é um recurso que - minha impressão - poucas pessoas u...24/07/202418juliomiguelCara, a ação corretiva é através dos mecanismo da plataforma não permi...22/03/202417rafaelRecado à todos que criam publicações deste tipo: as reclamações e os...24/10/202416clacerda> Sei que ainda é sedo, mas quero saber de pessoas que tem mais ex...06/11/202416filipedeschamps> E o TabNews tem muito a ganhar nesse novo mundo: um conjunto fenomen...17/04/202416lucaslourencoPrimeiramente, muito obrigado pelo post. Creio que é um debate muito n...05/02/202415\nPublicações patrocinadas criadas\nEsse foi o nosso primeiro ano com publicações patrocinadas. 54 foram criadas e 19 foram removidas.",
      "Muito massa os números.\nDesde que eu conheci o TabNews eu visito diariamente para ler notícias interessantes, ter insights, aprender coisas novas e tirar dúvidas.\nO TabNews realmente fornece um conteúdo de qualidade devido a comunidade que sempre está compartilhando conhecimentos, informações e tudo mais.",
      "Uma dúvida que eu sempre tive, o modal do Google usado como mecanismo de busca no site, ele é contabilizado como uma visita vinda do Google?",
      "Nos dados da Vercel Analytics (ou da Umami), as buscas feitas pelo mecanismo embutido não são contabilizadas como visitas vindas do Google, mas sim como navegação interna.\nVocê pode comprovar isso pelas ferramentas de desenvolvedor do navegador: ao fazer uma pesquisa e clicar em um resultado, o document.referrer será https://www.tabnews.com.br/.\nJá no Search Console, não sei dizer se essas buscas são incluídas ou não, mas, no Mecanismo de Pesquisa Programável, foram registradas 91k buscas internas em 2024, um número bem menor do que os do Search Console.",
      "Ei, olhando por cima, apesar de numeros bem legais, observei uma tendencia de baixa desde que foi lançado. Também observei que a contagem negativa esta subindo mais do que o positivo. Só curiosidade..",
      "Você enxerga a proporção de votos positivos/negativos como não saudável? Estou realmente interessado na sua opinião e na de quem participa do TabNews, vou deixar a minha abaixo.\nÉ difícil avaliar de forma geral, pois podem haver injustiças, mas como visito o site com frequência, digo que são raras. Então, me parece tudo bem. Não considero que exista \"mais conteúdo ruim\" no site.\nNo início do site, muitas pessoas comentavam coisas como \"obrigado\", \"valeu\", e outros conteúdos simples que nós desincentivamos desde a publicação Tentando construir um pedaço de internet mais massa, mas a maioria não recebia votos negativos. Hoje em dia temos bem menos comentários desse tipo.\nE hoje temos mais formas de ganhar TabCoins do que no início. Se você tem um bom histórico, acabará recebendo mais TabCoins ao criar um novo conteúdo, e também pode receber por acessar o site uma vez no dia. Com mais TabCoins em mãos, as pessoas tem menos receio em usá-las para votar, além de que a recompensa diária também incentiva não acumular TabCoins.\nTalvez, com acesso a mais TabCoins, algumas pessoas passaram a não votar apenas no que achavam relevante, mas também a votar negativamente no que consideravam irrelevante.",
      "Não, enxergo como normal, apenas achei interessante essa relação crescer. Talvez ela seja fruto do tipo de conteúdo postado. Se vocês analisarem, existem perfis que apenas postam noticias batidas como se fossem bots (isso me fez diminuir o interesse pelo site), ou alguma coisa criada com IA. Eu imaginava que o intuito do site era receber comentários reais criados por pessoas. Votos negativos são comuns, eu mesmo já negativo 3 vezes qualquer tentativa de propaganda ou esse tipo de noticias que falei, mesmo me custando tabcoins.",
      "Só senti falta de números relacionados aos tabcoins/tabcash, só por curiosidade mesmo :-D",
      "@luizcerqueira acabei de criar um comentário contendo mais informações sobre os votos. Espero que satisfaça sua curiosidade.",
      "Realmente, seria legal ver também como foi o desenvolvimento da moeda do site XD",
      "Teve uma postagem igual a esta em 2023? Seria legal colocar o link para quem quer comparar.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Imagino que esteja falando da \"Visualizações e outros números do segundo trimestre de 2023\", que mesmo tendo foco em apenas um trimestre, tem muitos dados que servem de comparação. Além de conter dados complementares. 👍\nTem também outra da mesma época (\"6 Milhões de Visualizações 🚀 E muita novidade\"), em que eu cito a quantidade de visualizações nos primeiros 8 meses desde o lançamento, que foi até maior do que a de 2024. Essa foi citada no texto.",
      "https://meta.stackexchange.com/questions/405664/2024-a-year-in-closing eles usam esse modelo, então sempre tem um link para o ano anterior para todo mundo ter acesso fácil a todos os relatórios e poder comparar.",
      "Sim, será muito interessante manter sempre os links para publicações anteriores com os dados estatísticos. Com certeza faremos isso todos os anos. 🤝\nPor isso, nesta publicação que inicia essa estratégia, já incluímos os dados dos anos anteriores que temos disponíveis e que não estavam em nenhuma publicação passada.\nMas é uma pena termos ficado tantos meses com dados de Analytics limitados, sem uma forma de estimar os que estão ausentes, especialmente os do segundo semestre de 2023.",
      "Interessante essa fábula aí do burro e do tigre. Tá mais atual do que nunca...",
      "Pega leve aí Raul, eu juro que não entendi o que você quis dizer com esse comentário.\n\nAcho que ninguém entendeu.\n",
      "Eu não entendi pq me negativaram. O Sr. Maniero deixou o link do github dele, falou que era pra ajudar os iniciantes. Eu fui lá, olhei os códigos no repo, achei bem legal a iniciativa dele.\nNo README tem uma fábula. Em vista da polarização atual em todo o mundo, com discurso de ódio na internet e muita gente falando besteira, achei que a fábula tava mais atual do que nunca. Vai entender...\nSerá que só pode comentar o assunto do tópico, não pode numa sub-thread fazer comentários à parte. Porque no Reddit a gente faz isso direto, foge um pouco do assunto, mas é sub-thread, já fica subentendido.",
      "teknolista, comentários podem ter a ver com o comentário pai mesmo sem ter a ver diretamente com a publicação raiz. O seu pode ter sido negativado porque o leitor não entendeu e, por ser tão desconexo, achou irrelevante. Com este seu comentário agora, faz mais sentido.",
      "De novo essa historia? Toda postagem que vejo tem essa propaganda."
    ],
    "summary": {
      "summary": "O artigo apresenta um balanço detalhado das atividades do TabNews em 2024, incluindo dados sobre visitantes, visualizações, usuários cadastrados e interação na plataforma. Observa-se um grande volume de acessos provenientes do Google, enquanto a comunidade engajada se mantém como o principal alicerce da plataforma. Houve um pico de interação em 2023, seguido por um leve declínio em 2024, o que é atribuído a uma seleção natural de usuários que buscam engajamento ativo. Os comentários mostram uma comunidade interessada nos dados apresentados, levantando questões sobre a contagem de visitas, a proporção de votos positivos e negativos, e a moeda da plataforma (TabCoins). Alguns usuários notaram uma tendência de baixa no engajamento desde o lançamento e um aumento de votos negativos, o que gerou discussões sobre a qualidade do conteúdo e os tipos de postagens que aparecem na plataforma. A menção de um comentário com uma \"fábula\" gerou estranhamento e um pequeno desentendimento sobre o que seria considerado relevante numa sub-thread. Houve também interesse em dados sobre TabCoins e em comparar os números de 2024 com os de anos anteriores, o que foi prontamente respondido com a disponibilização de links de posts prévios e a promessa de manter essa prática nos próximos relatórios.",
      "keywords": [
        "TabNews",
        "estatísticas",
        "usuários",
        "visualizações",
        "Google",
        "interação",
        "comunidade"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "DeepSeek Abala o Mercado: Nvidia Perde R$ 2,4 Trilhões em 24h – O Fim da Era dos Gigantes?",
    "link": "https://www.tabnews.com.br/PauloSampaio/deepseek-abala-o-mercado-nvidia-perde-r-2-4-trilhoes-em-24h-o-fim-da-era-dos-gigantes",
    "content": "A recente ascensão da DeepSeek, uma startup chinesa de inteligência artificial, abalou significativamente o mercado de tecnologia. A empresa desenvolveu um modelo de linguagem semelhante ao ChatGPT, destacando-se por sua eficiência energética e custos reduzidos. Este avanço resultou em uma queda acentuada nas ações de gigantes do setor, especialmente a Nvidia, que sofreu uma desvalorização de 17,5%, representando uma perda de mais de 600 bilhões de dólares em capitalização de mercado.\nA DeepSeek conseguiu criar um modelo de IA de alto desempenho com um investimento inferior a 6 milhões de dólares, contrastando com os bilhões gastos por concorrentes ocidentais. Notavelmente, a empresa alcançou esse feito sem utilizar processadores estrangeiros de ponta, contornando as restrições de exportação impostas pelos Estados Unidos.\nAnalistas sugerem que essa inovação pode levar os principais provedores de serviços em nuvem a reavaliar seus investimentos em infraestrutura de IA. Embora alguns investidores estejam preocupados, outros acreditam que a demanda por chips de IA permanecerá robusta, impulsionada por investimentos planejados tanto por empresas ocidentais quanto pelo governo chinês.\nA notícia também impactou outros fabricantes de microchips, como a ASML, e empresas de tecnologia como Amazon, Microsoft e Alphabet, que registraram quedas em suas ações. Em contraste, a Apple, considerada menos envolvida no setor de IA, viu suas ações subirem 3%.\nEspecialistas alertam que, embora a DeepSeek tenha alcançado um marco significativo, é importante não superestimar o impacto imediato no mercado de IA. A evolução contínua da tecnologia e a necessidade de recursos computacionais avançados indicam que empresas como a Nvidia ainda desempenharão um papel crucial no futuro da inteligência artificial.",
    "comments": [
      "Inclusive para quem está duvidando do poder chinês, lançaram o Kimi:\nTrending: Depois do DeepSeek R1, outra startup chinesa revelou um novo modelo que supera o desempenho de Claude Sonnet 3.5 e GPT-4o.\nConheça o Kimi 1.5: um modelo multimodal com raciocínio avançado em cadeia de pensamentos e pesquisa na web em tempo real.\n100% GRATUITO com chats ilimitados. https://kimi.moonshot.cn/",
      "A api da DeepSeek ja esta em funcionamento?\nQueria testar ela em meus projetos pessoais para ver se tem alguma melhora na questão das buscas de resultados.\nAlem disso acredito que a DeepSeek ira ganhar mais engajamento, na comunidade de IA e atá possa deixar o ChatGpt para trás, o legal seria se a DeepSeek investi-se em areas de hadware + Ia como a Nvidia (Ps: Essa questão da area dela não fui muito atras caso alguem tiver ja um conhecimento por favor me explique).",
      "Está, é só entrar no site deles e adicionar créditos, pelo que eu vi só aceita dólar.",
      "O pessoal só é surtado mesmo. A própria Nvidia tinha criado um fine tuning de Llama, o Nemotron que já performava bem e era barato. Inclusive a própria empresa estava provando que era possivel.\nO DeepSeek pode ter apenas feito algo muito semelhante, e os caras do nada acham que isso é prejudicial pra Nvidia. Se fosse ruim ela mesmo já não teria feito.",
      "Eu não acompanho esse mercado de IA de perto, escuto os rumores e os boatos apenas. Mas com esse pouco de informação que tenho, até semana passada quando se falava em IA robusta já era comum associar ao uso de hardware fornecido principalmente pela nVidia, até certos processos eram criados pensando no CUDA (de propriedade da nVidia).\nO que eu percebo com a pouca informação que fui atrás, o que o DeepSeek mostrou é que não precisamos de vendor lock-in, é possível chegar no mesmo nível de capacidade usando hardware comum e menos energia. Além de tudo, é open-source e a essa altura está sendo estudado exaustivamente pelas grandes empresas e certamente nos próximos dias teremos essas IA \"fechadas\" rodando com \"inspirações\" no modelo open-source do DeepSeek.\n\n\ne os caras do nada acham que isso é prejudicial pra Nvidia\n\nPode ser que isso não afunde a nVidia, é bem difícil de acontecer mesmo, mas certamente vai frear o crescimento exponencial que ela vinha garantindo nos últimos anos.",
      "Meus 2 cents:\nO DeepSeek de fato eh muito bom, pequeno (pelo que faz) e versatil. Mas segundo alguns pesquisadores, parte dos dados parecem ter vindo do chatGPT (alguns argumentam que foi roubo mesmo).\nDeepSeek: Is It A Stolen ChatGPT?\ndestaco: \"...The formatting, the response contents beyond the model (so called hallucination), the programming mistakes, the exposed underlying training data all clearly show that the model has nothing in common with Gemini, Grok, Claude or Mistral. Yet, the similarities with ChatGPT are strikingly obvious...\"\nEnfim, o negocio eh usar o DeepSeek-R1 enquanto for possivel - o observar a briga dos tubaroes com o balde de pipoca no colo.",
      "É meus amigos, somos espectadores e 'protagonistas' da nova 'corrida espacial'...",
      "O mercado financeiro caindo no conto de fadas chinês!\nOs caras falam (sem provas) que são superiores (economicamente) em uma tecnologia, no dia seguinte o mercado afunda.\nDaqui a uns dias sai notícias dizendo que \"não é bem assim\" e sobe tudo denovo.",
      "Algumas correções apenas, não disseram nada sem provas, o benchmark está bem detalhado no hugging face. O código é aberto inclusive para refutar a ideia. O paper fala sobre a forma como foi construído e o custo. Inclusive é um dos poucos modelos que é possível pra mim rodar localmente no meu notebook batata.\nSegundo, apesar de não ser o caso, 90% do mercado financeiro opera no boato. Isso desde sempre. Não é nenhuma surpresa",
      "Otima resumo Kaique, acredito que, sim houve uma queda no mercado financeiro por causa da nova IA, mas acredito em duas Hipotéses.\nA 1° onde a DeepSeek supere as IAs de hoje em dia e possa a vir ser uma das melhores Ias otimizadas e utilizadas, tanto no mercado de hadware (como Nvidia) como no mercado popular (como o ChatGpt).\nA2° onde a DeepSeek fez essa queda no mercado financeiro e as empresas como Nvidia e OpenIa e a Microsoft busquem melhores forma de performance para suas IAS.\nSomente minha Opnião...",
      "De certa forma é uma ironia. Porque a China gasta muito pra poder espionar o restante do mundo. E agora eles tem uma solução de IA onde o resto do mundo vai lá pra validar documentos, código, e qualquer outro tipo de artefato que a IA deles possa ajudar na confecção. Pode tirar dúvidas também, do que as pessoas estão interessadas, e tudo ficando registrado. É a melhor forma de vigilância sem ter que se preocupar com denúncias. Por isso acho que eles vão melhorar ainda mais a solução e manter gratuito por bem mais tempo...",
      "Eu vou tomar cuidado com as informações que coloco lá porque concordo com sua resposta em partes",
      "Uma duvida real, onde consigo encontrar informacoes sobre a China espiano o mundo inteiro? Tambem me explica melhor, considerando que eles soltaram algo open source, ainda assim caberia dizer que eles querem espionar o mundo usando essa nova ferramenta?",
      "Que a China fica espionando outros estados é uma questão antiga, que ganhou força com o lançamento do 5G e algumas empresas chinesas criando dispositivos com backdoor. Isso foi notícia e continua sendo faz tempo. Só procurar no google, tem até artigo na wikipedia relacionando e acumulando todos os casos.\nhttps://en.wikipedia.org/wiki/Concerns_over_Chinese_involvement_in_5G_wireless_networks\nhttps://en.wikipedia.org/wiki/List_of_Chinese_spy_cases_in_the_United_States\nhttps://en.wikipedia.org/wiki/2018_China%E2%80%93African_Union_espionage_allegations\nhttps://www.brookings.edu/articles/chinese-spies-and-the-security-of-americas-networks/\nhttps://www.cfr.org/backgrounder/chinas-huawei-threat-us-national-security\nO caso que ocorreu na áfrica ficou famoso, porque especialistas descobriram que realmente tinha backdoor/transmissor nos aparelhos.\nhttps://chinaglobalsouth.com/analysis/china-accused-again-of-spying-on-the-african-union/\nhttps://futureafrica.net/so-china-is-spying-on-the-african-union-who-is-surprised/\nAlguém implementando algo open source não significa altruismo. O npm and PyPI enfrentam problemas com código malicioso em libs open source.\nhttps://www.cisoadvisor.com.br/descobertos-mais-de-700-pacotes-maliciosos-de-codigo-aberto/",
      "Obrigado pelos links!\nFonte: Wikipedia, autores do US ou apoiadores de Trump (nada contra, mas enviesa muito a opiniao)\nDe certa forma, imagino que eles espiam algo sim, mas acho engracado esse vies que criamos quando se trata de algo da China, quando se trata de coisas do US ou UE, esta tudo bem.\nExemplo bem simples:Mapa da espionagem do US\nSobre o PyPl, a excessao virando regra. Eu acho que diretamente no chat deles pode ser mesmo que eles estejam monitorando, mas na lib open source que eles liberaram? Duvido que tenham backdors. Talvez no futuro, mas agora? Com todo mundo de olho?\nApenas de liberar isso mostra o quanto forte eles estao nessa area e enfraquece o US, vamos ver agora a resposta do US a isso. A guerra das IAs...",
      "Então, eu também acho que não será coisa do tipo backdoor. Acho que será algo do tipo, salvar tudo, deixar tudo guardado para monitorar e espiar o que o resto do mundo ta fazendo. Tipo o lance do TikTok, que registra na ByteDance tudo que puder coletar dos celulares dos usuários. E isso acaba sendo analisado pelo governo chinês.\nMas o lance da IA é que ela é treinada com conteúdo produzido por humanos, porque se usar conteúdo produzido por outras IA's acaba gerando halucinação mais rapidamente. E quanto mais pessoas usarem, maior o conteúdo pra treinamento. E se puder além de usar os dados pra treinar, contribuir com a política de vigilância, melhor ainda pra eles. Não tenho dúvida que vão coletar e registrar o máximo possível..."
    ],
    "summary": {
      "summary": "O artigo discute o impacto da DeepSeek, uma startup chinesa de IA, no mercado de tecnologia, especialmente após o lançamento de um modelo de linguagem eficiente e de baixo custo. Esse lançamento causou uma queda nas ações da Nvidia e de outras empresas do setor. Os comentários revelam um debate sobre a capacidade da DeepSeek em desafiar o domínio da Nvidia, com alguns argumentando que ela pode frear o crescimento da empresa, enquanto outros minimizam o impacto. Há preocupações sobre a origem dos dados de treinamento da DeepSeek, com acusações de plágio do ChatGPT. A discussão também aborda o potencial da DeepSeek para reduzir a dependência de hardware específico e a possibilidade de empresas ocidentais se inspirarem no modelo open source da DeepSeek. Uma parte da discussão se desvia para questões geopolíticas, com especulações sobre se a China usaria a DeepSeek para espionagem. Há também um debate sobre a veracidade dessas alegações e se o viés anti-China estaria influenciando as opiniões sobre o tema.",
      "keywords": [
        "DeepSeek",
        "Nvidia",
        "Inteligência Artificial",
        "Mercado Financeiro",
        "Open Source",
        "Espionagem",
        "China"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "Como ter vários empregos sem ser um p** no c*",
    "link": "https://www.tabnews.com.br/Nikolavn/como-ter-varios-empregos-sem-ser-um-p-no-c",
    "content": "Hoje é o primeiro dia, em quatro anos, em que não tenho nenhuma agenda profissional. Isso porque, depois de 4 anos (2 sendo dono de empresa e 2 sendo Tech Lead), finalmente abandonei todos os meus trabalhos part-time. O motivo? Consegui um trabalho full-time que cobre toda a minha renda anterior e no qual vou focar por completo.\nE sim, tenho total liberdade para comentar sobre isso e até mesmo conversar com meus ex-chefes. Sabe por quê? Porque consegui conciliar todos os trabalhos de forma transparente, e todas as empresas para as quais prestei serviço tinham conhecimento umas das outras.\nAo contrário da maioria, que aceita quatro empregos como PJ, deixa de entregar em três e vive à beira do burnout, eu, depois de vender minha empresa, sabia que, se quisesse manter minha renda, deveria encontrar uma forma de organizar meu tempo entre as empresas e dividir os escopos corretamente.\nPor quatro anos, fiquei variando entre dois a quatro empregos, sendo pago por pacotes de horas ou contratos de serviço mensal sem horas estipuladas (do que me arrependo, e falarei mais sobre isso adiante). Isso significava que cada empresa exigia, no mínimo, quatro horas diárias, fazendo com que minha carga horária variava entre oito a dezesseis horas de trabalho por dia.\nInicialmente, tentei seguir um horário fixo para cada empresa, mas logo percebi que não era funcional. Primeiro, porque a última empresa do dia sempre saía prejudicada, pois minha performance já não era a mesma. Segundo, porque a qualquer momento poderia surgir uma reunião em um horário que coincidisse com outra empresa, quebrando meu foco e reduzindo minha produtividade.\nE sabe os contratos sem horas estipuladas? Livre-se deles. No final, querem que você trabalhe 240 horas por mês pagando o equivalente a 120, o que simplesmente inviabiliza a possibilidade de trabalhar para múltiplas empresas. Sabemos que, para muitas empresas, o PJ é um falso CLT: tem todas as obrigações e nenhum benefício. Esse é o pior tipo de local para se trabalhar, então, sempre que possível, evite.\nFoi então que decidi aplicar um novo método: não teria mais horários fixos em nenhuma empresa. Eu atuaria em todas como se fossem uma só, definindo prioridades de acordo com o escopo do momento. No início, foi desafiador, pois todas as empresas eram do setor de e-commerce e tinham períodos de alta e baixa demanda muito semelhantes. No entanto, percebi que, apesar dos meses de alta serem os mesmos, os dias variavam. Essa foi a chave para meu problema.\nHavia dias em que trabalhava dezesseis horas para apenas uma ou duas empresas, resolvendo as questões mais urgentes antes de seguir para as próximas. Eu tentava sempre estar disponível para todas, deixando claro que minhas agendas eram compartilhadas. Os primeiros meses foram difíceis, mas, depois do primeiro ano, eu já estava completamente adaptado a essa rotina. Todas as deadlines eram cumpridas, e, com o tempo, conquistei ainda mais espaço na maioria dessas empresas.\nUma grande dificuldade foi lidar com gestores do “caos” — aqueles sem organização e controle de prioridades. Isso tornava meu trabalho mais difícil, afinal, se tudo é urgente, nada é.\nEu tive um caso de um gestor que mentia para o cliente sobre o status de uma atividade, mentia para o desenvolvedor sobre o prazo e para o PO sobre a entrega. No final, ele ainda conseguia alterar os fatos para a Diretoria. Como muitas vezes eu não sabia que tal tarefa era crucial ou que, na verdade, já estava atrasada há mais de um mês quando chegou a mim, eu não dava a devida importância. Porém, na hora de “precisamos entender onde erramos”, o líder técnico muitas vezes acabava levando a culpa. Então, aprendi que, caso você tenha esse tipo de gestor, deve sempre deixar seu trabalho visível para o chefe do seu gestor, copiar outros em e-mails e sempre discutir temas importantes nos chats abertos da empresa, nunca no 1:1. Assim, você se resguarda de ser engolido pelo caos dessa pessoa.\nOntem foi meu último dia nessa rotina, e já sinto um pouco de nostalgia. Mas, com essa experiência, percebi que devo continuar no caminho da liderança e deixar o papel de especialista para trás. Depois de dez anos, o gerenciamento de times se tornou minha prioridade, embora eu ainda pretenda programar sempre que possível.\nE sabe o mais legal? Eu só consegui essa transição graças às cartas de recomendação dos meus ex-chefes. Eles sabiam que esse era o emprego que eu queria no momento.\nVocê sempre deve colocar sua carreira acima dos interesses de qualquer empresa, mas isso não significa que precisa ser um grande p** no c*. Seja transparente, desde que seu chefe também seja. Se ele esconde informações e não compartilha o escopo completo do trabalho, então ele não é um bom líder.\nQuanto mais cada integrante de um time entende os objetivos da empresa, mais ele percebe a importância de sua performance. Esse foi um dos combustíveis que fez minha startup dar certo. Como líder, você não precisa abrir planilhas financeiras ou contar o que comeu no almoço, mas, se sua equipe souber o objetivo final do que está sendo pedido, com certeza terá mais interesse em tornar isso realidade.\nSe você gostou deste texto, fique ligado nos próximos. Vou compartilhar tudo o que puder para ajudar você a se destacar nas soft skills que o mercado espera!\nAté a próxima!",
    "comments": [
      "Muito interessante seu relato!\nEu já tive dois empregos e foi uma época caotica da minha vida, um era de desenvolvimento (2.000) e outro era fazer slides de aulas para uma professora universitária (300) e a professora me sugava mais do que o de desenvolvimento, eu tinha que responder as coisas instantaneamente e no final ainda queria que eu cuidasse da página dela no instagram.\nTive que sentar, colocar minhas metas na mesa e vi que não era design que gostaria e precisaria focar na programação.\nHoje sai da empresa de desenvolvimento e estou em outra, estudando para o próximo ser um banco ou a gringa.\nNão sei se algum dia me arriscaria ter dois empregos juntos.",
      "Que loucura!\nNo início, eu também achava surreal e foi difícil me acostumar, mas, como tudo na vida, é mais uma questão de se adaptar aos poucos e conseguir alcançar o seu objetivo.\nMas, se você consegue viver da renda de apenas um, com certeza é o melhor caminho a seguir.",
      "Cara, acho que você é o pai do Cris."
    ],
    "summary": {
      "summary": "O artigo discute a experiência do autor em conciliar múltiplos empregos simultaneamente, variando de dois a quatro, durante um período de quatro anos. Ele compartilha seu método de organização, priorizando tarefas de acordo com a demanda do momento, em vez de seguir horários fixos. O autor destaca a importância da transparência com as empresas e de se resguardar de gestores desorganizados, além de defender a necessidade de colocar a carreira acima dos interesses de qualquer empresa. Ele relata que sua experiência permitiu que ele fosse bem sucedido e conseguisse uma posição full-time, com cartas de recomendação de seus ex-empregadores. Os comentários variam entre aqueles que se identificam com a dificuldade de conciliar múltiplos empregos,  e outros que acham o relato interessante e admiram a adaptabilidade do autor. Não há nenhum debate relevante ou polêmica identificável.",
      "keywords": [
        "múltiplos empregos",
        "gestão de tempo",
        "transparência",
        "liderança",
        "priorização",
        "carreira",
        "soft skills"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Caso: DeepSeek - O verdadeiro poder esta no software",
    "link": "https://www.tabnews.com.br/TrevizoTecnologia/caso-deepseek-o-verdadeiro-poder-esta-no-software",
    "content": "O DeepSeek não é apenas só mais uma startup.\nEle representa um avanço significativo na inteligência artificial, baseado em um código aberto que torna a tecnologia mais eficiente e menos dependente de hardware.\nCom essa inovação, as gigantes do setor certamente irão incorporar essas melhorias.\nSam Altman já reconheceu publicamente a relevância do que foi desenvolvido.\nO impacto dessa mudança será enorme. Com a infraestrutura atual, o progresso dos softwares será acelerado, e a barreira financeira que antes limitava esse mercado a poucos jogadores foi derrubada.\nIsso significa mais competição, mais inovação e um cenário imprevisível sobre quem liderará essa nova fase.\nSomente no dia 27/01/2025, as ações cairem muito. As empresas que atuam em semicondutores, hardware, data centers e eltricidade foram impactadas.\nAções como\n\nNvdia (-15% )\nTsmc (-13%)\nDell (-9%)\n\nSão alguns exemplos.\nAté agora, a NVIDIA era a escolha óbvia, já que ninguém sabia exatamente quem se destacaria. Ela ainda domina a produção dos chips mais potentes, mas a necessidade por esse hardware pode começar a diminuir à medida que o software assume um papel mais estratégico.\nA discussão não deveria girar em torno de questões políticas sobre o DeepSeek. Isso pouco importa. O fato é que, em breve, seu código estará sendo utilizado em diversas aplicações ao redor do mundo.\nO erro foi subestimar o software. Enquanto muitos apostavam apenas no poder de processamento, alguém mostrou, mais uma vez, que o verdadeiro segredo está na inteligência por trás do código.",
    "comments": [
      "Vou aproveitar aqui para dar meu pitaco sobre o DeepSick e fazer algumas ressalvas, mesmo eu achando que ainda não é hora de avaliações precisas.\nEsse texto está ok, não mostra um deslumbramento que muitos costumam ter.\nNão sabemos o quanto tem de verdade em tudo o que foi divulgado. E nem é porque vem da China, na \"América\" é a prática normal viver de narrativas, e em qualquer país, cada dia mais forte e funcionando \"bem\" (para quem interessa).\nNão haverá uma demanda absurdamente menor por hardware, e pincipalmente energia elétrica por causa disso. Dizem por aí que cortou mais de 80% a necessidade. Mesmo sendo tudo verdade, e mesmo que outros avanços ocorram, a IA é de longe o projeto mais ambicioso da humanidade e não existe milagre. Toda melhoria deve ser comemorada, mas ainda para entregar uma parte apenas do que prometem para as próximas décadas vai demandar recursos que nem sabemos como vamos obter.\nEssas oscilações de mercado são todas especulativas, ninguém sabe o valor real das empresas abertas, é só o que o \"mercado\" está precificando naquele momento, e ele se aproveita de movimentos sempre que podem.\nPelo que eu vi, essa nova IA já mostrou que está bem ruim, embora algumas pessoas pegam alguns resultados bons para \"provar\" que ela é boa, o que vai contra o método científico. E para chegar no nível do ChatGPT ainda vão bilhões sendo consumidos (sim o DS \"delira\" muito tanto quanto o ChatGPT 3 delirava, embora tenha melhorado pouco mesmo depois dos bilhões injetados e o Gemini para delirar menos acaba sendo bem menos útil). Mas pode ser que isso seja feito de forma mais descentralizada, de forma mais pontual, de acordo com a necessidade de cada um.\nTer um código aberto e podendo usar em máquinas menos poderosas é um grande avanço sem dúvida alguma, mas não é uma mudança completa de como a IA vai se desenvolver. E vão dar um novo caminho, algo que seria feito mais cedo ou mais tarde por alguém, que bom que foi mais cedo e quiseram abrir o código.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "\nNão haverá uma demanda absurdamente menor por hardware, e pincipalmente energia elétrica por causa disso. Dizem por aí que cortou mais de 80% a necessidade.\n\nSe corta 80% do custo as empresas vão usar 5x mais, com certeza",
      "Concordo com você. Ainda é muito precoce avaliar.\nMarketing e China é uma combinação que pode ser suspeita.\nAcabei de fazer um teste aqui. Pedi para as IAs criarem uma query simples. Resultado\nChatGpt: não trouxe o que gostaria\nClaude: **resultado muito bom **\nDeepSeek: The server is busy. Please try again later.\nNão existe almoço de graça, alguem paga a conta. Neste caso foi o pobre do usuário aqui.\nMas a iniciativa de desenvolver uma IA que diminua a necessidade de poder comptacional e energia é algo que me agrada. Que até então não tinha ouvido um modelo de IA ter sido pensado com estas premissas",
      "Meus 2 cents:\nAcho um pouco precipitado tirar muitas conclusoes do episodio - eh o tipo de momento onde muitos apalpam, falam e ninguem descreve o elefante.\nJa li algumas frases sobre o assunto que me soaram absurdamente proximas do \"640kb eh o bastante\".\nExiste a possibilidade real do treinamento do DeepSeek-R1 ter sido resultado direto de espionagem industrial e roubo de propriedade intelectual do chatGPT.\nJa li alguns falando que o DeepSeek eh uma arma de espionagem (sendo que o LLM pode ser baixado e executado localmente, sem conexao com a internet)\nA ver como isso vai ficar - do meu lado, usando o DeepSeek nos projetos, sempre deixando opcao para outras LLMs: menos ideologia, mais pragmatismo e custo/beneficio.",
      "\nExiste a possibilidade real do treinamento do DeepSeek-R1 ter sido resultado direto de espionagem e roubo de propriedade intelectual do chatGPT.\n\nConsiderando que o GPT é baseado em roubo de propriedade intelectual de diversas outras empresas não está fora do padrão.\nSe IAs respeitassem as regras elas simplesmente não existiriam",
      "falou exatamente oq estava pensando"
    ],
    "summary": {
      "summary": "O artigo discute o surgimento do DeepSeek, uma nova IA com código aberto que busca reduzir a dependência de hardware avançado, focando na eficiência do software. Os comentários revelam uma mistura de ceticismo e otimismo. Alguns usuários questionam a veracidade das alegações de redução drástica de custos e consumo de energia, apontando para a natureza especulativa do mercado e a necessidade contínua de recursos para avanços na IA. Há também preocupações sobre a qualidade inicial do DeepSeek e comparações com outras IAs. Alguns usuários levantaram a possibilidade de espionagem industrial e roubo de propriedade intelectual, enquanto outros defendem uma abordagem pragmática baseada em custo/benefício, utilizando o DeepSeek como mais uma ferramenta. A discussão gira em torno do impacto da IA no mercado, da necessidade de recursos para seu desenvolvimento e da validade de certas alegações.",
      "keywords": [
        "DeepSeek",
        "inteligência artificial",
        "software",
        "hardware",
        "código aberto",
        "mercado",
        "inovação"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "✨Rodando Doom na Barra de Pesquisa do Google em Tempo Real!✨",
    "link": "https://www.tabnews.com.br/PedroWebber/rodando-doom-na-barra-de-pesquisa-do-google-em-tempo-real",
    "content": "\nE os projetos divertidos continuam! Desta vez, consegui fazer com que Doom fosse renderizado diretamente na barra de pesquisa do Google.\nEste projeto acabou levando um pouco mais de tempo para ser executado, pois tive que desenvolver um sistema para injetar um código JavaScript personalizado dentro do navegador, para permitir que o Google pudesse ter espaço em tela para renderizar a imagem.\nTodo o projeto foi feito inteiramente em Python. Utilizei o webdriver da biblioteca selenium para injetar o JS.\nEspero que gostem do resultado 😁\n✨ Para quem quiser conferir o vídeo completo em FHD basta dar uma olhadinha no meu canal acessando o link: https://www.youtube.com/watch?v=UpLx6FTo9ew",
    "comments": [
      "O mais impressionate não é rodar o doom no google, mas ele estar jogando com o controle\ncruel",
      "Vlw man pelo comentário ❤️😁",
      "Pedro, tenho visto a sua série de publicações, mas não consegui entender como fez cada exemplo. Tem algum código compartilhado no GitHub, ou pode explicar quais foram as etapas e tecnologias envolvidas?\nSeria bem legal entender melhor seus projetos.",
      "Poxa cara, se tiver interesse consigo criar uma publicação explicando mais ou menos como funciona o processo.",
      "O Filipe gostou das suas publicações (eu também), e eu gostaria de saber mais para, possivelmente, ele gravar um vídeo no canal do YouTube.\nA cada publicação que você fez, eu fiquei sem entender como funcionava e parecia que tinha faltado algo na publicação ou no vídeo 😅. Até fui ver seu LinkedIn e a publicação do Doom no VS Code que você fez no Reddit, mas não encontrei a explicação.",
      "Próximo post: DOOM está oficialmente rodando no átomo!\nSaindo um pouco do meme do Doom: Meus parabéns. Eu particularmente não saberia nem como começar isto. Imagino que tenha aprendido muito para atingir este objetivo.",
      "Hahaha, bem isso. Tem cada projeto maluco com Doom. A galera é muito criativa. Obrigado man pela força <3"
    ],
    "summary": {
      "summary": "O artigo descreve um projeto onde o jogo Doom foi renderizado na barra de pesquisa do Google, utilizando Python e a biblioteca Selenium para injetar código JavaScript. Os comentários expressam admiração pela criatividade e complexidade do projeto, com vários usuários pedindo explicações mais detalhadas sobre o processo e tecnologias usadas, inclusive com o interesse de produção de conteúdo em vídeo sobre o tema. Houve também menção a outros projetos similares envolvendo Doom, demonstrando o interesse da comunidade em ideias inovadoras com o jogo.",
      "keywords": [
        "Doom",
        "Google",
        "JavaScript",
        "Python",
        "Selenium",
        "Webdriver",
        "jogos"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "A maior cilada que alguém tecnologia pode cair:",
    "link": "https://www.tabnews.com.br/raphaguasta/a-maior-cilada-que-alguem-tecnologia-pode-cair",
    "content": "A maior cilada que alguém tecnologia pode cair:\nAceitar a proposta: \"Constrói aí que eu vendo! 50% cada um!\"\nParece uma boa proposta, né?! Cada um faz o que sabe melhor e todo mundo ganha dinheiro junto. Ótimo!\nClaro, eventualmente dá certo. Mas na maioria das vezes:\n\nA pessoa de tech trabalha por semanas, meses construindo o que foi combinado.\nCom o produto pronto, a pessoa de negócio/vendas/marketing vai pra rua eee... Não consegue vender.\nGrandes chances de 1 ou 2 clientes pedirem features diferentes, porque \"assim ficaria bom\".\nLá vai o desenvolvedor gastar mais horas e horas.\nQuando a pessoa de vendas tenta vender novamente, ninguém compra, nem mesmo aqueles que deram as sugestões das novas features.\n\nResultado:\n\nAmbos trabalharam sem ganhar nada. Ok, é o risco.\nO grande problema é que, pela natureza da atuação, provavelmente o tech trabalhou o dobro do tempo.\nO vendas está pronto pra vender outra coisa que alguém construiu no dia seguinte.\nO tech precisa investir mais semanas/meses até poder ter esperança de faturar com algo novo.\n\nSó pra deixar claro: eu não acredito que essa desigualdade no risco/retorno seja feita por mal (em 99% das vezes).\nMinhas dicas pra galera de tech são as seguintes:\n\n\"Aprenda a vender. Aprenda a construir. Se conseguir fazer as duas coisas, será imparável.\" - peguei a citação do Naval Ravikant.\nSe puder, tente vender sem ter o produto - crie só a Landing Page.\nSe não puder, pelo menos tente seguir um pouco do \"lean\" - construa um MVP enxuto de verdade e vai pra rua logo.\nNão invista tempo em qualquer ideia que pareça maravilhosa, peça o mínimo de validação de outras pessoas. Ouvir \"eu uso e tenho certeza de que vai dar certo\" só de 1 pessoa não vale.\n\nPessoa dev, entenda de uma vez por todas: seu tempo também é importante!\nPara ouvir mais dessas dicas e visões sobre o mercado, me segue aqui no Linkedin!",
    "comments": [
      "Sim, essa situação é uma cilada clássica! O desequilíbrio de risco entre quem constrói e quem vende é enorme, e a frustração no final é quase garantida. Mas existe um caminho mais justo para estruturar essa parceria sem assustar o sócio de negócios ou trabalhar de graça. Vamos lá:\nComo Montar uma Parceria Justa (e Evitar o Prejuízo):\n\nCalcule o Valor do Seu Tempo\n\nExemplo: Se você cobra R200/hora e estima 6 meses de trabalho, são: 150 * 6 * 200 = 180.000\nNão peça esse dinheiro adiantado! Use esse número como referência para negociar.\n\nProponha um Investimento Equivalente\n\nEle deve investir pelo menos 50% no capital social na empresa para cobrir seu custo.\n\nValide Enquanto Coda\n\nExija que o sócio venda antes do produto existir:\n\n\nCrie uma Landing Page com o conceito.\n\n\nPeça pré-vendas, assinaturas de LOI (Letters of Intent) ou até um MVP ultra simplificado (ex: um botão de compra + formulário).\n\n\nSe ele não conseguir clientes interessados, aborte o projeto.\n\n\n\nContrato Formal, Sem Amadorismo\n\nDocumente tudo:\n\n\nFunções de cada um (ex: você só desenvolve, ele só vende).\n\n\nCláusula de saída (ex: se ele não vender em 3 meses, você assume 100% do produto).\n\n\nPor Que Isso Funciona:\nO sócio de negócios coloca a pele no jogo: Se ele não investe dinheiro ou tempo, não é parceiro — é só um curioso.\nVocê não vira refém do \"vou vender amanhã\": O MVP rápido e a validação prévia filtram ideias furadas.\nEquity justo: Ninguém leva 50% de graça. Se o projeto falhar, pelo menos seu tempo foi minimamente compensado.\nDica Final:\nSe o sócio fica ofendido com essas condições, corra. Ele queria um trouxa para trabalhar de graça, não um parceiro.\nLembre-se: seu tempo é sua moeda mais valiosa. Não gaste ele com quem não está disposto a arriscar tanto quanto você. 💻⚡️\nIsso não é \"ser mesquinho\" — é ser profissional.",
      "Ao menos uma vez por mês chega uma proposta aqui pra gente nesse sentido, no começo da minha carreira eu caí nessa cilada.\nO que eu faço hoje é mudar a proposta e jogar o problema no colo da outra pessoa. Quando alguém chega com essa oferta eu digo:\n\nOk, mas vamos fazer o seguinte, não quero ser sócio de nada agora pois meu foco é ampliar minhas habilidades técnicas e não de gestão. Então eu te faço um orçamento para realizar esse projeto, você vai me pagando mensalmente e depois de concluído a ferramenta é interamente sua e o lucro será 100% seu sem precisar dividir com ninguém.\n\nQuando a pessoa percebe que a proposta é furada, ela mesmo repensa na proposta dela.\nDa última vez foi um conhecido que chegou com uma ideia assim, e perguntou quanto seria então para fazer esse processo. Então eu disse, que precisava calcular, mas com certeza seria algo em torno de R$ 250.000,00 ou mais no primeiro ano só com o custo do desenvolvimento, é claro que o cara desistiu.",
      "Ótima ideia ein! Aí não sobra um projeto, rs.",
      "Outro tipo de proposta que eu já estou calejado de receber é aquele tipo recompensado por indicação.\n-Faz esse app/site/sistema para mim de graça (ou quase) que eu vou usar para divulgar você, e você vai fechar vários clientes\nNesses casos a minha inversão é no seguinte, primeiro estabelecer com a pessoa o que é indicação. Para mim, indicação para valer como \"moeda de troca\", a pessoa além de realizar o contato  vai precisar intermediar e participar da prospecção e o contrato precisa ser concretizado. Caso contrário não conta.\nUma vez estabelecido isso, eu pergunto para a pessoa quantas indicações ela se compromete em  fazer em um ano. Se ela disser 10, eu esclareço que irei dividir o custo do projeto em 10 vezes, nos meses que houver uma indicação com fechamento de contrato, naquele mês a mensalidade constará como paga, caso contrário vou enviar o boleto.\nJá fiz isso umas 3 vezes, os dois primeiros não toparam. O último topou, mas não conseguiu fechar nenhum contrato e teve que pagar todos os meses, eu não saí no prejuízo pois recebi pelo meu trabalho normalmente.",
      "Hahahha. Cara, verdade!! Essa é clássica tbm!\nMandou bem nas soluções, gostei 👏.",
      "Nossa, o tanto de vezes que me ofereceram esse tipo de projeto foi realmente grande kkkkkkk\nAcaba que isso é bastante comum para as pessoas que não sabem por onde começar o projeto delas e acham que só precisam arrumar um dev que aceite ser pago apenas se o projeto der certo, e se der errado ninguém ganha nada\nAcontece que pro Dev, o trabalho dele já começa logo ali no inicio de tudo, e não só na hora de vender como pode ser o caso da outra pessoa, que trabalha por exemplo no marketing",
      "Pois é!!!\nUm constrói o prédio e o outro distribui panfleto na porta do mercado no fds. Se não vender, paciência, ele vai pra outro mercado distribuir outro panfleto..\nMas e o cara que fez o prédio?!?!? kkkk",
      "Meus 2 cents:\nDe um modo geral sigo as sugestoes do relator @user1 - ja ta de bom tamanho.\nPara complementar, lembre-se: eh um vendedor que esta te propondo isso, entao eh provavel que seja um fdp que esta acostumado a vender a mae e nao entregar - entao para te ferrar eh um pulo. O que nao falta aqui no TABNEWS sao devs com historias de horror com esta pegada. Eu mesmo tenho varias e bem sordidas.\nO segredo eh: \"dinheiro na mao, roupa foi pro chao\" - ou seja, pagou ta valendo senao esquece.\nNem precisa pagar muito - so o fato de voce pedir qualquer pichule ja afasta o interesseiro.\nPara consolidar esta visao: se voce tiver uma startup e abrindo para investimento de terceiros, uma das primeiras coisas que o VP (venture capital) te pergunta eh: \"quanto dinheiro teu voce ja colocou na ideia ?\" e depois \"se voce que eh o dono nao investiu, porque eu devo investir ?\".\nEnfim - se for uma ideia absurdamente f.derosa, nao tem problema voce arriscar. Mas ideias \"meia bomba\", considere bem o uso do teu tempo.",
      "hahahah. perfeito!\nFod@ é o quanto a gente apanha até aprender, espero que essa thread aqui ajude a galera que ainda não tava ciente."
    ],
    "summary": {
      "summary": "O artigo discute a armadilha comum em que desenvolvedores caem ao aceitar propostas de parceria onde constroem o produto e outra pessoa vende, dividindo o lucro. A discussão aponta que o desenvolvedor geralmente investe mais tempo e esforço, enquanto o vendedor pode facilmente mudar para outra oportunidade se o produto não for bem-sucedido. Os comentários concordam que essa situação é frequente e arriscada, com um desequilíbrio entre o esforço do desenvolvedor e o retorno. Sugestões incluem a importância de validar a ideia antes de construir o produto completo, exigir um investimento financeiro equivalente do parceiro de negócios para cobrir o custo do desenvolvimento, e estabelecer um contrato claro com metas e responsabilidades. Alguns usuários compartilham experiências similares, onde foram abordados com propostas de desenvolvimento em troca de promessas de divulgação, o que consideram uma forma de exploração. A necessidade de um contrato formal e o reconhecimento do valor do tempo do desenvolvedor são enfatizados. A discussão também destaca a importância de não se deixar levar por propostas sem uma validação prévia, e a necessidade de pedir algum pagamento adiantado para afastar pessoas que só querem se aproveitar do trabalho alheio. Alguns usuários apontam que as pessoas de negócio muitas vezes subestimam o trabalho envolvido no desenvolvimento, enquanto outros relatam casos de propostas de parceria que soam como exploração do trabalho do desenvolvedor.",
      "keywords": [
        "parceria",
        "desenvolvedor",
        "vendas",
        "risco",
        "MVP",
        "validação",
        "investimento"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "[TABCASH]: Influencia no SEO de um site?",
    "link": "https://www.tabnews.com.br/luansemz/tabcash-influencia-no-seo-de-um-site",
    "content": "Eu não me considero um usuário ativo do Tabnews, eu entro de vez em quando e faço alguns comentários para tentar melhorar a comunidade.\nCom essa \"rotina\", eu tenho atualmente 243 TabCash.\nEu já patrocinei uma postagem, mas o meu foco agora é saber como essas postagens influenciam no projeto/site/video que você está divulgando.\nSe vocês puderem me passar um caso de uso real, seria interessante saber como eles te ajudaram.\n\nEu não achei (procurei) nenhuma postagem assim para poder fazer essa pergunta como um comentário.\n",
    "comments": [
      "Bom, é um marketing a mais. Só que, o público aqui são pessoas que trabalham na área de tecnologia, portanto se for algo de uso geral, geralmente aquelas trends do tiktok, talvez não haja muito engajamento aqui, mas é bastante interessante no instagram e no próprio tiktok.\nNa dúvida, eu gastaria uns tabcash para divulgar por aqui também. Não perco nada e ainda pode conquista algumas pessoas, dependendo do conteúdo da aplicação.\n\nSe vocês puderem me passar um caso de uso real, seria interessante saber como eles te ajudaram.\n\nDificil encontrar isso, e provavelmente não vai. Não é que não funcione, mas como eu disse, é um marketing a mais. Geralmente um site, app e etc é um conjunto de vários marketings e muitas plataformas. Você tem de estar onde sue público alvo está.\n\nTABCASH: Influencia no SEO de um site?\n\nBom, não sei se entendi bem a sua pergunta. O que mais influencia o SEO é a responsividade, velocidade, acessibilidade, dentre outras métricas que você pode encontrar com uma rápida pesquisa. Porém, se uma plataforma possui muitos usuários ativos, ou seja, possui muitas visitas, deve posicionar melhor o teu site (houve um aumento de SEO).",
      "Eu acho que o termo TabCash influencia na relevância da postagem, ela ainda está em primeiro lugar nas relevantes.\n\n\"Bom, não sei se entendi bem a sua pergunta.\"\n\nEu já pesquisei algumas postagens no Google, tentando cair no TabNews, e vi que na descrição do link na página de resultados, algumas postagens patrocinadas apareciam.\nA minha dúvida é um pouco mais complexa do que eu consegui explicar, mas seria algo assim (me desculpe pela simplicidade):\n\nPara os motores de busca, a postagem é mais relevante por ser patrocinada? Se sim, ter o link do seu projeto/site/video nessa postagem, favorece esse projeto/site/video de alguma forma?\n\nObrigado pelas respostas, e eu entendo que a influência deve ser bem baixa.\nO mais importante deve ser fazer uma postagem patrocinada (relevante para o público), e esperar conquistar um pequeno público dessa comunidade.\nObrigado Programmer404."
    ],
    "summary": {
      "summary": "O autor do artigo questiona se o uso de TabCash para patrocinar postagens no TabNews influencia o SEO de projetos divulgados. Os comentários indicam que, embora o TabCash possa aumentar a visibilidade dentro da plataforma, seu impacto direto no SEO é provavelmente baixo. Sugere-se que o TabNews é mais eficaz como uma plataforma de marketing adicional, principalmente para alcançar um público da área de tecnologia, e não como um meio principal de otimização de mecanismos de busca. A relevância da postagem dentro da plataforma pode ser influenciada pelo patrocínio, mas não necessariamente reflete em um melhor posicionamento em buscas externas. Os usuários apontam que fatores técnicos como responsividade, velocidade e acessibilidade são mais importantes para o SEO.  É consenso que o mais importante é criar conteúdo relevante para o público e esperar engajamento da comunidade.",
      "keywords": [
        "tabcash",
        "seo",
        "marketing",
        "engajamento",
        "relevância"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "[LIVRO] The Pragmatic Programmer - Capítulos 7 e 8",
    "link": "https://www.tabnews.com.br/Pherris/livro-the-pragmatic-programmer-capitulos-7-e-8",
    "content": "Finalizando a sequência dos posts sobre o livro \"The Pragmatic Programmer: from journeyman to master” (Andrew Hunt e David Thomas) ou em português “O Programador Pragmático: de Aprendiz a Mestre”, onde estou publicando minhas anotações do livro aqui no TabNews para compartilhar o conhecimento de forma mútua.\nLink dos posts anteriores:\n\nPrefácio e Capítulo 1\nCapítulo 2\nCapítulos 3 e 4\nCapítulos 5 e 6\n\nP.S: Ressalto que eu li a 1a Edição de 1999 em inglês. São minhas anotações pessoais, com tradução de termos e ideias próprias, logo poderão ter informações que na tradução em português oficial estejam diferentes (ou até erradas). A ideia não é ser, necessariamente, um resumo/resenha do livro, mas de pontuar algumas ideias que eu entendi serem interessantes a compartilhar.\n\nCapítulo 7 - Before The Project (Antes do Projeto)\nVocê já teve a sensação de que o seu projeto está condenado antes mesmo de iniciar? Muitas vezes ele pode estar condenado a menos que você estabeleça algumas regras básicas primeiro.\n\nResolvendo quebra cabeças impossíveis\n\nThe Requirements Pit (O poço de requisitos)\n\nNão ajunte requisitos, cave por eles\nOs requisitos não vão estar lá quando você for procurar, você terá que fazer um esforço para descobrí-los\nPara isso requer algo que é simples e complexo ⇒ A resposta simples é que os requerimentos são coisas que precisam ser cumpridas. Bons requerimentos podem incluir:\n\nUm registro só pode ser visto por um grupo de pessoas\nUm medidor não pode exceder um valor crítico\nO editor irá marcar algumas palavras chaves que serão selecionadas dependendo do tipo de arquivo a ser editado\n\n\nNo caso do registro que só pode ser visto por um grupo de pessoas irá levar para um regras de permissões e como isso serão relacionadas aos usuários ⇒ O requerimento na verdade não é sobre um grupo de pessoas ver um arquivo, mas sobre as permissões gerais.\nTrabalhe com o usuário para pensar como um usuário\nDocumente os requerimentos\n\nAbstrações vivem mais do que detalhes ⇒ Não tente prever o futuro, detalhes podem mudar. Foque em abstrações para serem implementadas posteriormente\nMantenha uma linguagem ubíqua ⇒ Tenha um glossário para o projeto para evitar confusões de definições de termos (pode haver uma diferença entre ‘client’ e ‘customer’ por exemplo)\n\n\n\nSolving Impossible Puzzles (Resolvendo quebra-cabeças impossíveis)\n\n\nPodemos lidar com projetos realmente muito difíceis de lidar, como se fossem quebra cabeças. Soluções “óbvias” não estão funcionando.\n\n\nO segredo para resolver problemas difíceis é identificar restrições reais (e não imaginadas) ⇒ Restrições reais devem ser honradas, mesmo que sejam estranhas.\n\n\nNão pense fora da caixa, encontre a caixa ⇒ Saiba onde estão os limites do domínio e das condições.\n\n\nNot Until You’re Ready (Não até que você esteja pronto)\n\nOuça as dúvidas persistentes - comece quando estiver pronto\nEscrever uma especificação é praticamente uma responsabilidade\nCuidado para não estar procrastinando, ao invés de estar sendo realmente cauteloso\nMuitas coisas são melhores feitas do que descritas\nComo um Programador Pragmático você deve ver os requisitos coletados, designed e implementados de diferentes formas no mesmo processo.\n\n\n\nCircles and Arrows (Círculos e Setas)\n\nNão seja escravo de métodos formais ⇒ Existem vários tipos de formatos para esquematizar um projeto, mas não se prenda a isso\nA maioria dos métodos formais usam diagramas e algumas palavras específicas para definir partes do projeto. Mas muitos dos diagramas podem ser sem sentido se não forem de fato implementados.\nMétodos formais podem encorajar uma especialização que pode não ser necessária. Pode acontecer de levar para uma comunicação pobre e uma perda de esforços. Também pode levar a um embate entre desingners e desenvolvedores.\nFerramentas caras não produzem melhores designs\n\n\nCapítulo 8 - Pragmatics Projects (Projetos Pragmáticos)\nAssim como seus projetos podem ir seguindo, nós precisamos mudar o nosso foco de problemas de filosofias individuais e de código para problemas grandes, do tamanho do projeto.\nPragmatic Teams (Times pragmáticos)\n\nPodemos usar as ideias que vimos até aqui para os times\nNo Broken Windows ⇒ Qualidade é um problema do time. O mais diligente dos desenvolvedores terá que lidar com problemas de qualidade envolvendo o time, e não só isso, mas ter ânimo para tal, gastando tempo consertando problemas.\n\nTimes não devem tolear broken windows, ou seja, aquelas imperfeições que ninguém conserta. O time deve tomar a responsabilidade pelo produto.\n\n\nBoiled Frogs ⇒ Times que não são vigilantes podem acabar como o sapo que morreu cozido na água que foi se fervendo gradativamente. Pessoas acham que alguém está lidando com um problema, ou que o tech lead deve ter aceitado uma mudança que um usuário está querendo.\n\nFaça questão que todos do time monitorem as mudanças no ambiente, talvez colocando alguém como responsável por averiguar possíveis mudanças.\nÉ preciso estar ciente das mudanças, caso contrário a água vai ferver e você não vai sentir.\n\n\nComunicação ⇒ O pior para um time é não ter uma comunicação efetiva. Desde acharem várias coisas sem saber se de fato deve seguir dessa maneira, até ninguém se comunicar em uma reunião.\n\nDocumentação e linguagem são bagunçadas, cada um usa termos diferentes para a mesma coisa.\nTimes de bons projetos são estruturados e são preparados para qualquer tipo de reunião.\n\n\nDRY ⇒ Duplicações podem levar a pesadelos. Quando o projeto começa a crescer, tente deixar alguém responsável pela biblioteca do projeto. Se for muito grande, estabeleça pontos focais para evitar duplicações.\nOrtogonalidade ⇒ As coisas em um projeto não devem andar de formas isoladas. Simplesmente não dá. Trabalhe em função de uma funcionalidade e não de funções de um cargo.\n\nDeixe que os times se organizem de forma autônoma\nÉ necessário duas cabeças, uma que vá pensar de forma administrativa e outra de forma técnica, para impedir que padrões sejam deixados de lado.\n\n\n\nUbiquitous Automation (Automação ubíqua)\n\nAll on Automatic ⇒ Não use procedimentos manuais\n\nPessoas não são tão repetitivas quanto computadores o são. Coisas que deveriam funcionar começam a parar de funcionar porque não automatizamos procedimentos\n\n\nTestes de Regressão ⇒ Seja capaz de testar todo o projeto com apenas um botão\nBuild Automation\n\nConfira o código fonte no repositório\nCrie um projeto do zero com um número da versão\nCrie uma imagem distribuível\nExecute testes específicos\n\n\nApproval Procedures\n\nAlguns projetos possuem workflows administrativos variados que devem ser seguidos\n\n\n\nRuthless Testing (Teste implacavelmente)\n\nMuitos desenvolvedores odeiam testar ⇒ Muitas vezes os testes que eles fazem são enviesados.\n\nTeste cedo, durante e automatizado\n\n\nDevemos testar desde cedo quando fazemos um código ⇒ Se não o código começa a crescer e vai ficando cade vez mais difícil testar\nQuanto mais cedo um bug for encontrado, mais barata é a sua medicação ⇒ Code um pouco, teste um pouco\n\nCoding não está finalizado até que todos os testes estejam executados\nUnit tests\nIntegration tests\nValidação e verificação\nExaustão de recursos, erros e recuperação\nTestes de performance\nTestes de usabilidade\n\n\nUse sabotadores para testar seus testes\nNão tem como sabermos se nossos testes estão testando todo o código de forma suficiente\n\nPodemos até usar alguma ferramente de coverage testes\n\n\nAche bugs uma única vez ⇒ Se você está tendo o mesmo bug mais de uma vez, é porque seus testes não estão bons.\n\nIt’s All Writing (É tudo sobre escrever)\n\nA tinta mais branda é melhor do que a melhor memória\nDesenvolvedores não ligam muito para documentação ⇒ Programadores pragmáticos abraçam a documentação como parte integral do seus processo de desenvolvimento\n\nEscrever uma documentaçõa pode ser fácil por não duplicar esforços, ou perder tempo e mandar a documentação o mais próximo do código, se possível\n\n\nDois tipos de documentação: interna e externa\n\nComentários em código ⇒ Código deve ter comentários, mas não muitos. Comente coisas que não são tão óbvias como funcionalidades.\n\nNomes de variáveis devem ser escolhidas com cuidado, devendo ter algum significado, e ter cuidado para não significar algo diferente do que você tenha planejado\n\n\nSua documentação precisa ser de fácil acesso e não se perder. Não adianta querer imprimir a documentação e engavetá-la ou até mesmo deixá-la se perder. Coloque-a na web ou algo do tipo.\n\n\n\nGreat Expectations (Grandes expectativas)\n\nGentilmente exceda as expectativas dos seus usuários\nComunique e alinhe expectativas\nFaça a milha extra ⇒ Trabalhe perto dos seus usuários, compartilhe suas expectativas e os comunique do que você está fazendo para que eles não se surpreendam quando o projeto for entregue. NÃO TENTE SURPREENDER SEU USUÁRIO.\n\nPride and Prejudice (Orgulho e prejuízo)\n\nAssine seu trabalho ⇒ Programadores pragmáticos não esquivam de suas responsabilidades. Antes nós nos regozijamos em aceitar novos desafios e aumentarmos nossas expertises.\n\n\nE aí pessoal, o que vocês acharam? Toda contribuição é bem vinda!",
    "comments": [],
    "summary": {
      "summary": "O artigo aborda anotações sobre os capítulos 7 e 8 do livro 'The Pragmatic Programmer', focando em práticas de desenvolvimento de software. O capítulo 7 discute a importância de entender e documentar requisitos, evitar abstrações excessivas e não se prender a métodos formais. O capítulo 8 trata da organização de times, incentivando a comunicação, a automação, a criação de testes abrangentes e a valorização da documentação. O autor também enfatiza a necessidade de alinhar expectativas com os usuários e assumir responsabilidade pelo trabalho. A discussão enfatiza a importância de times atentos para evitar problemas e da comunicação para a gestão eficiente do projeto. Não há comentários ou debates no post, indicando que não houve polêmica ou divergências nos pontos de vista apresentados.",
      "keywords": [
        "programação",
        "requisitos",
        "testes",
        "documentação",
        "comunicação",
        "automação",
        "times"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Canais de Startup?",
    "link": "https://www.tabnews.com.br/K4L1B3/canais-de-startup",
    "content": "Eu recentemente venho procurando canais que falam sobre startup vocês podem me recomendar alguns?\nPode ser em inglês, pt-br, espanhol",
    "comments": [
      "Eu assisto o Alex Hormozi. Não é especificamente para startup, mas sim de negócios. No final, te ajuda igual",
      "Sempre sai alguma coisa sobre no site www.arena5g.com.br",
      "Recentemente comecei um mn, ja estou com dois videos publicados falando sobre o tema.\nhttps://www.youtube.com/@MarcosHollmann",
      "Bruno okamoto(https://youtube.com/@microsaas?si=TIWRksSVRERInk2i) e\nVivendo de saas(https://youtube.com/@vivendodesaas?si=yW9upSWcT40gXWo3)\nentregam um conteúdo valiosíssimo sobre startups, empreendedorismo, saas...",
      "Conheço a StartSe (https://www.youtube.com/@StartSeOficial/videos) e G4 Educação (https://www.youtube.com/c/Gest%C3%A3o40/videos), ambas são escolas de negócios, mas produzem vídeos interessantes no youtube"
    ],
    "summary": {
      "summary": "O artigo busca recomendações de canais sobre startups. Nos comentários, usuários indicaram canais focados em negócios, como o de Alex Hormozi, e também fontes com conteúdos sobre empreendedorismo e startups, como Arena5G, canais de YouTube como o de Marcos Hollmann, Bruno Okamoto (microsaas) e Vivendo de Saas, e escolas de negócios como StartSe e G4 Educação. A discussão se manteve em um tom colaborativo, com os participantes compartilhando fontes que consideram relevantes e sem gerar controvérsias.",
      "keywords": [
        "startups",
        "canais",
        "empreendedorismo",
        "negócios",
        "saas",
        "youtube",
        "dicas"
      ],
      "controversy_level": "baixo"
    }
  },
  {
    "title": "Facebook classifica tópicos sobre Linux como “ameaça à segurança cibernética”",
    "link": "https://www.tabnews.com.br/NewsletterOficial/facebook-classifica-topicos-sobre-linux-como-ameaca-a-seguranca-cibernetica",
    "content": "O Facebook está restringindo publicações que mencionam tópicos, sites ou grupos relacionados ao Linux, com alguns usuários relatando contas bloqueadas ou limitadas. A plataforma parece estar classificando essas postagens como violações de seus Padrões da Comunidade, um conjunto de regras que define o que é permitido ou não na rede social.\nO site DistroWatch, amplamente reconhecido pela comunidade Linux, foi o primeiro a identificar o bloqueio, que teria começado em 19 de janeiro. Segundo o portal, qualquer tentativa de publicar conteúdo relacionado ao DistroWatch no Facebook resultou em restrição, confirmando a aplicação do filtro. Leitores também relataram dificuldades ao tentar compartilhar links para o site, além de sanções aplicadas às suas contas, como bloqueios e limitações, após mencionar assuntos ligados ao Linux.\nApesar de ter apelado contra a restrição, o DistroWatch informou que o Facebook manteve a classificação de tópicos sobre Linux como parte de seu filtro de segurança cibernética. Posteriormente, a conta de um escritor do DistroWatch na plataforma foi bloqueada.\nO site destacou a contradição na postura do Facebook, já que a empresa opera grande parte de sua infraestrutura utilizando Linux e, frequentemente, publica vagas de emprego para desenvolvedores especializados no sistema operacional.",
    "comments": [
      "Loucos? malucos? talvez... vai entender porque eles estão fazendo isso, mesmo sabendo que o comprador está no lado negro da força, em fim...",
      "Informação relevante, temos diferentes tipos de comunidades ao redor do Linux, não é uma tarefa fácil conciliar tantos temas.",
      "Daqui a pouco surge um emocionado dizendo que o Facebook está fazendo isso em nome da liberdade de expressão.",
      "Se nao me engano, Linus Torvalds rsmbem fez campanha pro laranjão. Isso vai virar pipoca.",
      "A última notícia que soube foi a de que ele se opôs à política de imigração de Donald Trump, nunca soube que ele ofereceu algum tipo de apoio.\nNa verdade, minha impressão até hoje é de que o Linus é um cara bastante coerente do ponto de vista político.",
      "Aquieta esse fogo aí, militante.\nKkk.",
      "se voce quer censurar alguem recomendo procurar outro pais, aqui somos livres.",
      "liberdade no Brasil? kkkkkkk",
      "Olha aí, apareceu."
    ],
    "summary": {
      "summary": "O artigo relata que o Facebook está restringindo publicações relacionadas ao Linux, classificando-as como ameaças à segurança cibernética. Usuários têm relatado bloqueios e limitações em suas contas ao mencionar tópicos, sites ou grupos ligados ao sistema operacional. O site DistroWatch foi o primeiro a identificar o problema, tendo suas publicações e links bloqueados. A plataforma justificou a ação como parte de seus filtros de segurança, apesar de usar Linux em sua infraestrutura e contratar desenvolvedores especializados. Os comentários dos usuários variam entre questionamentos sobre a lógica da ação, menções a diferentes comunidades Linux e debates sobre liberdade de expressão e censura. Alguns usuários expressaram discordância com ações de bloqueio, enquanto outros apontaram a complexidade de moderar tantas comunidades diferentes. Houve uma breve discussão sobre a postura política de Linus Torvalds, mas sem grande impacto na discussão central.",
      "keywords": [
        "Facebook",
        "Linux",
        "segurança cibernética",
        "bloqueio",
        "restrição",
        "DistroWatch",
        "censura"
      ],
      "controversy_level": "médio"
    }
  },
  {
    "title": "Utilização de libs em Java",
    "link": "https://www.tabnews.com.br/VictorUemura/utilizacao-de-libs-em-java",
    "content": "Recentemente, me deparei com um grande dilema em um projeto real em Java utilizando Spring Boot. Nesse projeto, estou utilizando algumas bibliotecas para facilitar o trabalho. Sou muito amador no desenvolvimento de aplicações web e, assistindo a alguns vídeos e lendo opiniões de outras pessoas, me deparei com a questão de utilizar ou não essas bibliotecas.\nPara vocês entenderem, um exemplo é que, nesses projetos, estou utilizando Lombok para reduzir o boilerplate e melhorar a legibilidade. Porém, discutindo com algumas pessoas e vendo opiniões na internet, percebi que algumas são fortemente a favor da utilização, enquanto outras relatam que precisaram removê-la do projeto.\nEntendo que a utilização dessas bibliotecas aumenta a dependência, o que pode ser muito negativo, pois, futuramente, elas podem deixar de ter suporte ou serem descontinuadas.\nOutro ponto é que, nesse projeto, estou criando conversores de entidades manuais para transformar os DTOs, e estava pensando em utilizar a biblioteca MapStruct para realizar o mapeamento. Porém, isso significaria adicionar outra dependência ao projeto kkkkk.\nCompreendo que, para algumas arquiteturas, é melhor evitar o uso de bibliotecas externas para reduzir dependências. No entanto, não consigo formar uma perspectiva clara quanto a isso.\nPreciso de opiniões para ter uma visão melhor sobre o uso de bibliotecas: quando utilizá-las e quando não. Se puderem me ajudar, agradeço imensamente!",
    "comments": [
      "Em uma aplicação web java, utilizando spring boot, vc já começa com algumas dependências diretas e várias de dependências indiretas (as dependências das dependências). Logo, a decisão de adicionar ou remover uma dependência estaria mais relacionado em ponderar os prós e contras.\nPor exemplo, se vc está começando um novo projeto numa versão recente do java e gostaria de usar o lombok no contexto de 'data classes', talvez seja interessante optar pela feature de records (nativa do java) para evitar tal dependência.\n\nJava Record vs. Lombok: https://www.baeldung.com/java-record-vs-lombok\n",
      "Entendo perfeitamente, normalmente tenho o costume de usar o tipo Record para a criação dos DTO's da aplicação mas vou tentar ver como posso expandir isso para a utilização em mais contextos e tentar minimizar as dependências, avaliando os casos. Valeu pela orientação :)",
      "Pra variar, a resposta é \"depende\". Não existe fórmula mágica, tem que ser avaliado caso a caso.\nPor exemplo, se for algo muito complexo, que vai demorar um tempão e ainda tem chance de não ficar bom, provavelmente é melhor usar uma lib pronta. Geralmente isso vale para coisas que são reconhecidamente complicadas, como criptografia, engines gráficas, operações matemáticas avançadas, etc. Ou qualquer outra coisa que não seja do seu domínio e a chance de fazer errado é enorme.\nDa mesma forma que, se for algo bem simples ou que demanda poucas horas, talvez valha a pena vc mesmo fazer. Ou pode ser que a lib seja gigante (trocentos megabytes) mas vc só precisa de um único método dela, aí talvez seja o caso de copiar para o seu projeto somente o código fonte daquele trechinho.\nE tem vezes que o prazo está apertado e usar o que já está pronto pode economizar tempo, mesmo que seja algo que vc conseguiria fazer sozinho. Ou o oposto, ainda tem tempo (raro, mas acontece) e dá pra arriscar não usar a lib.\nTem também aquelas que podem te trazer mais produtividade e ganhar tempo no médio e/ou longo prazo, e aí pode valer a pena. Mas é algo que vc só vai saber usando, testando e avaliando periodicamente.\n\nEnfim, dependências sempre vão existir. Só de escolher um framework, por exemplo, vc já se torna refém dependente dele. Tem que avaliar se os benefícios que as dependências te dão superam os problemas que vêm junto (afinal, todas têm vantagens e desvantagens, tem que pesar os prós e contras sempre).\nE é difícil achar o ponto de equilíbrio, tem vezes que vc pensa \"ah, já tem 148 dependências, adicionar mais uma não fará mal\". Aí ela entra em conflito com outra já existente e quebra seu código. Ou o contrário, \"148 é muito, vou refazer umas partes na mão\", mas agora tem o risco de perder tempo demais refazendo tudo e no fim ainda fica pior, porque na verdade o negócio era bem mais complicado do que vc pensava - e aí vc entende porque escolheram usar a lib :-)\nDe qualquer forma, uma avaliação mínima (junto com testes decentes) deve ser feita, até para evitar casos como o infame incidente do left-pad (não é Java, mas a lição que fica vale para todas as linguagens).\nE no fim a melhor forma de saber se vale a pena ou não é usando e avaliando. A quantidade em si não deveria ser o único critério, pois se foi avaliado que todas as 148 dependências são realmente necessárias e trazem mais benefícios que problemas, então 148 não é muito e tudo bem mantê-las. Assim como se tiver apenas duas dependências, mas elas são desnecessárias porque dava pra resolver de um jeito mais simples sem elas, então dois é muito e é melhor removê-las.",
      "Po cara, valeu pela explicação, vou levar em consideração esses pontos que você citou e avaliar se vai ser realmente necessário colocando em consideração os prós e contras que vocês citou. Já foi de grande ajuda pois não tinha nem noção de algumas situações que você colocou ai.\nNo projeto aqui agora decidi usar mesmo para fazer o mapeamento pois estava demorando muito fazer as coisas manualmente e tenho um prazo bem apertado. Vou levar em consideração essas coisas que você citou nas próximas vezes que tiver uma situação parecida. No mais, vivendo e aprendendo, vou utilizar nesse por ser uma entrega pequena e ir avaliando. Se der algum problema faço na mão mesmo já que não vai ter um impacto tão grande hahaha...",
      "Realmente depende. Mas sou adepto ao se concentrar e usar meu tempo o maximo possivel a solucionar problemas de negocios. se as libs forem pra ter mais tempo no problema de negocio eu uso. Mas ai depende muito dos requisitos do seu projeto.",
      "\nSou muito amador no desenvolvimento de aplicações web\n\nSe você é iniciante e está com essas dúvidas significa que não tem ninguem na sua equipe com mais conhecimento, tomando essa teoria como afirmação:\n\nUse as libs que você achar necessário, desde que saiba como elas funcionam e saiba viver sem elas.\nA opinião dos outros vale para o projeto deles, não necessariamente a sua necessidade vai ser a mesma necessidade deles.\n",
      "Sim, sou amador mas antes de tudo estou buscando entender como funciona e como faria aquilo de maneira manual. É claro que existem algumas coisas que eu realmente não consigo entender, mas vou progredindo aos poucos :); Valeu pelo feedback, vou levar em consideração essa ideia tentando sempre avaliar se realmente é preciso de acordo com a necessidade do projeto.",
      "Tmpo de desenvolvimento e sobre atrapalhar na escalabilidade técnica são questões importantes.\nA longo prazo projetos com muitas dependencias são mais difíceis de manter.",
      "Realmente, tenho essa mesma ideia porém, acredito que tenha que avaliar a situação. Imagino que numa situação real, principalmente como a minha com um curto prazo não tem como chegar num ideal de não ter nenhuma dependência no projeto, pricipalmente no que diz respeito ao core da aplicação.\nVou buscar sempre avaliar a situação e tentar ter uma perspectiva a longo prazo. Valeu pelo feedback :).",
      "Focar no negócio também pode ser uma boa opção. Existem muitos empreendedores de sucesso.",
      "Acredito que você esteja falando do meu comentário sobre as regras de negócio:\n\n... em algumas situações acredito que o foco deveria fica mais nas regras de negócio...\n\nAqui estou me referindo as regras que a empresa que está me contratando impõe para a execução do software. Um exemplo seria um imposto que deve ser calculado no momento de lançar alguma despesa no caixa.\nEspero ter ajudado...",
      "Eu acho que vale a pena tentar jogar no modo hard que no caso é escrever mais código autoral e menos thirdPartCodes.",
      "Então para algumas coisas eu penso da mesma forma kkkkkkkkk... Na faculdade sempre tenho que ser autoral em basicamente tudo. Porém, em algumas situações acredito que o foco deveria fica mais nas regras de negócio. Por isso fico com essa questão: Até que ponto começa a ser uma perda de tempo? E o quanto isso atrapalha no crescimento da aplicação."
    ],
    "summary": {
      "summary": "A discussão gira em torno da decisão de usar ou não bibliotecas externas em projetos Java, especificamente em um contexto de desenvolvimento web com Spring Boot. O autor original expressa dúvidas sobre o uso de bibliotecas como Lombok e MapStruct, preocupado com o aumento de dependências e possíveis problemas futuros, como falta de suporte. Os comentários revelam um debate onde não há consenso absoluto. Alguns usuários aconselham avaliar cada caso individualmente, ponderando os prós e contras de cada dependência. Argumenta-se que, para tarefas complexas ou que demandam muito tempo, bibliotecas prontas podem ser a melhor opção, enquanto para coisas simples ou quando se tem tempo, criar soluções próprias é viável. Outros defendem o foco no problema de negócio e na produtividade, utilizando bibliotecas para acelerar o desenvolvimento. A necessidade de conhecer o funcionamento interno das bibliotecas é mencionada, assim como a importância de não depender excessivamente delas. A questão da escalabilidade e manutenção a longo prazo de projetos com muitas dependências também é levantada. Em geral, a discussão demonstra uma variedade de opiniões sobre o tema, enfatizando que a decisão de usar ou não bibliotecas depende de diversos fatores, como a complexidade do projeto, prazos, domínio do problema, e necessidades específicas da aplicação.",
      "keywords": [
        "java",
        "bibliotecas",
        "dependências",
        "lombok",
        "mapstruct",
        "desenvolvimento",
        "produtividade"
      ],
      "controversy_level": "médio"
    }
  }
]